{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/MatchDay/src/lib/services/mock-data.service.ts"],"sourcesContent":["/**\n * Mock Data Service\n * \n * Provides realistic demo data to showcase the professional player experience\n * without requiring database setup. Makes amateur players feel like pros.\n */\n\nexport interface MockPlayerProfile {\n  id: string;\n  display_name: string;\n  avatar_url?: string;\n  bio: string;\n  location: string;\n  preferred_position: string;\n  date_of_birth: string;\n  created_at: string;\n}\n\nexport interface MockPlayerStats {\n  total_games: number;\n  total_goals: number;\n  total_assists: number;\n  avg_goals_per_game: number;\n  performance_rating: number;\n  achievement_points: number;\n  leagues_played: number;\n  global_rank: number;\n  league_stats: Array<{\n    league_id: string;\n    league_name: string;\n    games_played: number;\n    goals: number;\n    assists: number;\n    rank_in_league: number;\n  }>;\n}\n\nexport interface MockMatch {\n  id: string;\n  league_name: string;\n  home_team: string;\n  away_team: string;\n  match_date: string;\n  status: 'upcoming' | 'live' | 'completed';\n  home_score?: number;\n  away_score?: number;\n  player_team: 'home' | 'away';\n  venue: string;\n}\n\nexport interface MockLeague {\n  id: string;\n  name: string;\n  description: string;\n  sport_type: string;\n  league_type: 'recreational' | 'competitive' | 'semi-pro';\n  location: string;\n  season_start: string;\n  season_end: string;\n  entry_fee: number;\n  current_teams: number;\n  max_teams: number;\n  available_spots: number;\n  compatibility_score: number;\n  skill_level_match: boolean;\n  schedule_compatibility: boolean;\n  distance_km?: number;\n}\n\nexport class MockDataService {\n  private static instance: MockDataService;\n\n  public static getInstance(): MockDataService {\n    if (!MockDataService.instance) {\n      MockDataService.instance = new MockDataService();\n    }\n    return MockDataService.instance;\n  }\n\n  async getPlayerProfile(userId: string): Promise<MockPlayerProfile> {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 300));\n    \n    return {\n      id: userId,\n      display_name: \"Alex Rodriguez\",\n      bio: \"Passionate midfielder who loves creating plays and scoring goals. Always looking to improve and help the team win!\",\n      location: \"San Francisco, CA\",\n      preferred_position: \"Midfielder\",\n      date_of_birth: \"1995-06-15\",\n      created_at: \"2024-01-15T00:00:00Z\"\n    };\n  }\n\n  async getPlayerStats(userId: string): Promise<MockPlayerStats> {\n    await new Promise(resolve => setTimeout(resolve, 400));\n    \n    return {\n      total_games: 47,\n      total_goals: 23,\n      total_assists: 15,\n      avg_goals_per_game: 0.49,\n      performance_rating: 8.7,\n      achievement_points: 1247,\n      leagues_played: 3,\n      global_rank: 1247,\n      league_stats: [\n        {\n          league_id: \"sf-premier\",\n          league_name: \"SF Premier Soccer League\",\n          games_played: 18,\n          goals: 12,\n          assists: 8,\n          rank_in_league: 3\n        },\n        {\n          league_id: \"bay-area-comp\",\n          league_name: \"Bay Area Competitive\",\n          games_played: 16,\n          goals: 7,\n          assists: 4,\n          rank_in_league: 7\n        },\n        {\n          league_id: \"weekend-warriors\",\n          league_name: \"Weekend Warriors FC\",\n          games_played: 13,\n          goals: 4,\n          assists: 3,\n          rank_in_league: 12\n        }\n      ]\n    };\n  }\n\n  async getUpcomingMatches(userId: string): Promise<MockMatch[]> {\n    await new Promise(resolve => setTimeout(resolve, 200));\n    \n    const today = new Date();\n    \n    return [\n      {\n        id: \"match-1\",\n        league_name: \"SF Premier Soccer League\",\n        home_team: \"Thunder FC\",\n        away_team: \"Lightning United\",\n        match_date: new Date(today.getTime() + 2 * 24 * 60 * 60 * 1000).toISOString(),\n        status: \"upcoming\",\n        player_team: \"home\",\n        venue: \"Golden Gate Park Field 3\"\n      },\n      {\n        id: \"match-2\",\n        league_name: \"Bay Area Competitive\",\n        home_team: \"Strikers SF\",\n        away_team: \"Thunder FC\",\n        match_date: new Date(today.getTime() + 5 * 24 * 60 * 60 * 1000).toISOString(),\n        status: \"upcoming\",\n        player_team: \"away\",\n        venue: \"Marina Green Sports Complex\"\n      },\n      {\n        id: \"match-3\",\n        league_name: \"Weekend Warriors FC\",\n        home_team: \"Thunder FC\",\n        away_team: \"Bay Bombers\",\n        match_date: new Date(today.getTime() + 9 * 24 * 60 * 60 * 1000).toISOString(),\n        status: \"upcoming\",\n        player_team: \"home\",\n        venue: \"Presidio Sports Field\"\n      }\n    ];\n  }\n\n  async getRecentMatches(userId: string, limit: number = 5): Promise<MockMatch[]> {\n    await new Promise(resolve => setTimeout(resolve, 200));\n    \n    const today = new Date();\n    \n    return [\n      {\n        id: \"match-past-1\",\n        league_name: \"SF Premier Soccer League\",\n        home_team: \"Thunder FC\",\n        away_team: \"City Rovers\",\n        match_date: new Date(today.getTime() - 3 * 24 * 60 * 60 * 1000).toISOString(),\n        status: \"completed\",\n        home_score: 3,\n        away_score: 1,\n        player_team: \"home\",\n        venue: \"Golden Gate Park Field 3\"\n      },\n      {\n        id: \"match-past-2\",\n        league_name: \"Bay Area Competitive\",\n        home_team: \"Eagles FC\",\n        away_team: \"Thunder FC\",\n        match_date: new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000).toISOString(),\n        status: \"completed\",\n        home_score: 1,\n        away_score: 2,\n        player_team: \"away\",\n        venue: \"Marina Green Sports Complex\"\n      },\n      {\n        id: \"match-past-3\",\n        league_name: \"Weekend Warriors FC\",\n        home_team: \"Thunder FC\",\n        away_team: \"Sharks United\",\n        match_date: new Date(today.getTime() - 10 * 24 * 60 * 60 * 1000).toISOString(),\n        status: \"completed\",\n        home_score: 2,\n        away_score: 2,\n        player_team: \"home\",\n        venue: \"Presidio Sports Field\"\n      }\n    ].slice(0, limit);\n  }\n\n  async getCompatibleLeagues(userId: string): Promise<MockLeague[]> {\n    await new Promise(resolve => setTimeout(resolve, 500));\n    \n    const today = new Date();\n    const seasonStart = new Date(today.getTime() + 30 * 24 * 60 * 60 * 1000);\n    const seasonEnd = new Date(today.getTime() + 120 * 24 * 60 * 60 * 1000);\n    \n    return [\n      {\n        id: \"elite-soccer-sf\",\n        name: \"Elite Soccer SF\",\n        description: \"High-level competitive soccer for serious players. Professional coaching and facilities.\",\n        sport_type: \"soccer\",\n        league_type: \"competitive\",\n        location: \"San Francisco, CA\",\n        season_start: seasonStart.toISOString(),\n        season_end: seasonEnd.toISOString(),\n        entry_fee: 250,\n        current_teams: 10,\n        max_teams: 12,\n        available_spots: 24,\n        compatibility_score: 94,\n        skill_level_match: true,\n        schedule_compatibility: true,\n        distance_km: 5.2\n      },\n      {\n        id: \"bay-area-premier\",\n        name: \"Bay Area Premier League\",\n        description: \"Premier soccer league for ambitious amateur players. Great competition and community.\",\n        sport_type: \"soccer\",\n        league_type: \"competitive\",\n        location: \"Oakland, CA\",\n        season_start: seasonStart.toISOString(),\n        season_end: seasonEnd.toISOString(),\n        entry_fee: 200,\n        current_teams: 8,\n        max_teams: 10,\n        available_spots: 16,\n        compatibility_score: 87,\n        skill_level_match: true,\n        schedule_compatibility: true,\n        distance_km: 12.8\n      },\n      {\n        id: \"golden-gate-soccer\",\n        name: \"Golden Gate Soccer Club\",\n        description: \"Recreational league with competitive spirit. Perfect for players looking to have fun and improve.\",\n        sport_type: \"soccer\",\n        league_type: \"recreational\",\n        location: \"San Francisco, CA\",\n        season_start: seasonStart.toISOString(),\n        season_end: seasonEnd.toISOString(),\n        entry_fee: 150,\n        current_teams: 12,\n        max_teams: 14,\n        available_spots: 28,\n        compatibility_score: 82,\n        skill_level_match: true,\n        schedule_compatibility: false,\n        distance_km: 3.1\n      },\n      {\n        id: \"silicon-valley-fc\",\n        name: \"Silicon Valley FC\",\n        description: \"Tech workers united by soccer. Professional atmosphere with flexible scheduling.\",\n        sport_type: \"soccer\",\n        league_type: \"competitive\",\n        location: \"Palo Alto, CA\",\n        season_start: seasonStart.toISOString(),\n        season_end: seasonEnd.toISOString(),\n        entry_fee: 300,\n        current_teams: 6,\n        max_teams: 8,\n        available_spots: 12,\n        compatibility_score: 76,\n        skill_level_match: false,\n        schedule_compatibility: true,\n        distance_km: 25.4\n      },\n      {\n        id: \"weekend-soccer-sf\",\n        name: \"SF Weekend Soccer League\",\n        description: \"Casual but organized soccer for weekend warriors. Great way to stay active and meet people.\",\n        sport_type: \"soccer\",\n        league_type: \"recreational\",\n        location: \"San Francisco, CA\",\n        season_start: seasonStart.toISOString(),\n        season_end: seasonEnd.toISOString(),\n        entry_fee: 100,\n        current_teams: 15,\n        max_teams: 16,\n        available_spots: 8,\n        compatibility_score: 71,\n        skill_level_match: false,\n        schedule_compatibility: true,\n        distance_km: 7.9\n      }\n    ];\n  }\n\n  async submitJoinRequest(leagueId: string, userId: string, message: string): Promise<boolean> {\n    await new Promise(resolve => setTimeout(resolve, 800));\n    \n    // Simulate success\n    console.log(`Join request submitted for league ${leagueId} by user ${userId}`);\n    return true;\n  }\n\n  async getAchievements(userId: string): Promise<Array<{\n    id: string;\n    title: string;\n    description: string;\n    icon: string;\n    earned: boolean;\n    progress?: number;\n    max_progress?: number;\n  }>> {\n    await new Promise(resolve => setTimeout(resolve, 300));\n    \n    return [\n      {\n        id: \"first-goal\",\n        title: \"First Goal\",\n        description: \"Score your first goal in the league\",\n        icon: \"⚽\",\n        earned: true\n      },\n      {\n        id: \"hat-trick\",\n        title: \"Hat Trick Hero\",\n        description: \"Score 3 goals in a single match\",\n        icon: \"🎩\",\n        earned: true\n      },\n      {\n        id: \"team-player\",\n        title: \"Team Player\",\n        description: \"Get 10 assists in a season\",\n        icon: \"🤝\",\n        earned: true\n      },\n      {\n        id: \"goal-machine\",\n        title: \"Goal Machine\",\n        description: \"Score 25 goals across all leagues\",\n        icon: \"🚀\",\n        earned: false,\n        progress: 23,\n        max_progress: 25\n      },\n      {\n        id: \"league-champion\",\n        title: \"League Champion\",\n        description: \"Win a league championship\",\n        icon: \"👑\",\n        earned: false\n      }\n    ];\n  }\n\n  async getGlobalLeaderboard(category: string, limit: number = 10): Promise<Array<{\n    rank: number;\n    player_name: string;\n    value: number;\n    is_current_user?: boolean;\n  }>> {\n    await new Promise(resolve => setTimeout(resolve, 400));\n    \n    const leaders = [\n      { rank: 1, player_name: \"Marcus Johnson\", value: 34 },\n      { rank: 2, player_name: \"Sarah Chen\", value: 31 },\n      { rank: 3, player_name: \"Diego Martinez\", value: 28 },\n      { rank: 4, player_name: \"Emily Rodriguez\", value: 26 },\n      { rank: 5, player_name: \"James Wilson\", value: 25 },\n      { rank: 6, player_name: \"Alex Rodriguez\", value: 23, is_current_user: true },\n      { rank: 7, player_name: \"Sophia Kim\", value: 22 },\n      { rank: 8, player_name: \"Michael Brown\", value: 20 },\n      { rank: 9, player_name: \"Lisa Thompson\", value: 19 },\n      { rank: 10, player_name: \"David Garcia\", value: 18 }\n    ];\n    \n    return leaders.slice(0, limit);\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/MatchDay/src/components/ui/professional-card.tsx"],"sourcesContent":["/**\n * Professional Card Component\n * \n * A reusable card component that gives amateur players a professional appearance.\n * Follows LEVER principles by being highly reusable and customizable.\n * \n * @example\n * ```typescript\n * <ProfessionalCard\n *   title=\"Player Profile\"\n *   subtitle=\"Forward\"\n *   image=\"/player-avatar.jpg\"\n *   stats={[\n *     { label: \"Goals\", value: 15 },\n *     { label: \"Assists\", value: 8 }\n *   ]}\n * />\n * ```\n */\n\nimport React from 'react';\nimport Image from 'next/image';\n\ninterface Stat {\n  label: string;\n  value: string | number;\n  highlight?: boolean;\n}\n\ninterface ProfessionalCardProps {\n  title: string;\n  subtitle?: string;\n  image?: string;\n  stats?: Stat[];\n  badges?: string[];\n  className?: string;\n  onClick?: () => void;\n  children?: React.ReactNode;\n  variant?: 'default' | 'player' | 'team' | 'match';\n}\n\nexport const ProfessionalCard = React.memo<ProfessionalCardProps>(({\n  title,\n  subtitle,\n  image,\n  stats = [],\n  badges = [],\n  className = '',\n  onClick,\n  children,\n  variant = 'default'\n}) => {\n  const baseClasses = [\n    'bg-white dark:bg-gray-800',\n    'border border-gray-200 dark:border-gray-700',\n    'rounded-xl shadow-sm hover:shadow-md',\n    'transition-all duration-200',\n    'p-6',\n    onClick ? 'cursor-pointer hover:scale-[1.02]' : ''\n  ].filter(Boolean).join(' ');\n\n  const variantClasses = {\n    default: '',\n    player: 'bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20',\n    team: 'bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-900/20 dark:to-emerald-900/20',\n    match: 'bg-gradient-to-br from-purple-50 to-violet-50 dark:from-purple-900/20 dark:to-violet-900/20'\n  };\n\n  return (\n    <div \n      className={`${baseClasses} ${variantClasses[variant]} ${className}`}\n      onClick={onClick}\n    >\n      {/* Header Section */}\n      <div className=\"flex items-start gap-4 mb-4\">\n        {image && (\n          <div className=\"relative w-16 h-16 rounded-full overflow-hidden border-2 border-white shadow-sm\">\n            <Image\n              src={image}\n              alt={title}\n              fill\n              className=\"object-cover\"\n            />\n          </div>\n        )}\n        \n        <div className=\"flex-1 min-w-0\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white truncate\">\n            {title}\n          </h3>\n          {subtitle && (\n            <p className=\"text-sm text-gray-600 dark:text-gray-300 mt-1\">\n              {subtitle}\n            </p>\n          )}\n          \n          {/* Badges */}\n          {badges.length > 0 && (\n            <div className=\"flex flex-wrap gap-1 mt-2\">\n              {badges.map((badge, index) => (\n                <span\n                  key={index}\n                  className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\"\n                >\n                  {badge}\n                </span>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Stats Section */}\n      {stats.length > 0 && (\n        <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-4 mb-4\">\n          {stats.map((stat, index) => (\n            <div key={index} className=\"text-center\">\n              <div className={`text-2xl font-bold ${\n                stat.highlight \n                  ? 'text-blue-600 dark:text-blue-400' \n                  : 'text-gray-900 dark:text-white'\n              }`}>\n                {stat.value}\n              </div>\n              <div className=\"text-xs text-gray-500 dark:text-gray-400 uppercase tracking-wide\">\n                {stat.label}\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Children Content */}\n      {children && (\n        <div className=\"pt-4 border-t border-gray-200 dark:border-gray-700\">\n          {children}\n        </div>\n      )}\n    </div>\n  );\n});\n\nProfessionalCard.displayName = 'ProfessionalCard';"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;CAkBC;;;;AAED;AACA;;;;AAoBO,MAAM,iCAAmB,qMAAA,CAAA,UAAK,CAAC,IAAI,CAAwB,CAAC,EACjE,KAAK,EACL,QAAQ,EACR,KAAK,EACL,QAAQ,EAAE,EACV,SAAS,EAAE,EACX,YAAY,EAAE,EACd,OAAO,EACP,QAAQ,EACR,UAAU,SAAS,EACpB;IACC,MAAM,cAAc;QAClB;QACA;QACA;QACA;QACA;QACA,UAAU,sCAAsC;KACjD,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC;IAEvB,MAAM,iBAAiB;QACrB,SAAS;QACT,QAAQ;QACR,MAAM;QACN,OAAO;IACT;IAEA,qBACE,8OAAC;QACC,WAAW,GAAG,YAAY,CAAC,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAE,WAAW;QACnE,SAAS;;0BAGT,8OAAC;gBAAI,WAAU;;oBACZ,uBACC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;4BACJ,KAAK;4BACL,KAAK;4BACL,IAAI;4BACJ,WAAU;;;;;;;;;;;kCAKhB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CACX;;;;;;4BAEF,0BACC,8OAAC;gCAAE,WAAU;0CACV;;;;;;4BAKJ,OAAO,MAAM,GAAG,mBACf,8OAAC;gCAAI,WAAU;0CACZ,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,8OAAC;wCAEC,WAAU;kDAET;uCAHI;;;;;;;;;;;;;;;;;;;;;;YAYhB,MAAM,MAAM,GAAG,mBACd,8OAAC;gBAAI,WAAU;0BACZ,MAAM,GAAG,CAAC,CAAC,MAAM,sBAChB,8OAAC;wBAAgB,WAAU;;0CACzB,8OAAC;gCAAI,WAAW,CAAC,mBAAmB,EAClC,KAAK,SAAS,GACV,qCACA,iCACJ;0CACC,KAAK,KAAK;;;;;;0CAEb,8OAAC;gCAAI,WAAU;0CACZ,KAAK,KAAK;;;;;;;uBATL;;;;;;;;;;YAiBf,0BACC,8OAAC;gBAAI,WAAU;0BACZ;;;;;;;;;;;;AAKX;AAEA,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 523, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/MatchDay/src/lib/utils/formatters.ts"],"sourcesContent":["/**\n * Number and Data Formatters for MatchDay\n * \n * Centralized formatting utilities following LEVER principles.\n * ALL number and data formatting MUST use these utilities.\n * \n * @example\n * ```typescript\n * import { NumberFormatters, DateFormatters } from '@/lib/utils/formatters';\n * \n * <span>{NumberFormatters.formatGoals(15)}</span>\n * <span>{DateFormatters.formatMatchDate(matchDate)}</span>\n * ```\n * \n * These formatters should be used for ALL data display.\n */\n\nexport class NumberFormatters {\n  /**\n   * Format goals with appropriate suffix\n   */\n  static formatGoals(goals: number): string {\n    if (goals === 0) return '0 goals';\n    if (goals === 1) return '1 goal';\n    return `${goals.toLocaleString()} goals`;\n  }\n\n  /**\n   * Format assists with appropriate suffix\n   */\n  static formatAssists(assists: number): string {\n    if (assists === 0) return '0 assists';\n    if (assists === 1) return '1 assist';\n    return `${assists.toLocaleString()} assists`;\n  }\n\n  /**\n   * Format match score\n   */\n  static formatScore(homeScore: number, awayScore: number): string {\n    return `${homeScore} - ${awayScore}`;\n  }\n\n  /**\n   * Format win/loss record\n   */\n  static formatRecord(wins: number, draws: number, losses: number): string {\n    return `${wins}W-${draws}D-${losses}L`;\n  }\n\n  /**\n   * Format percentage with one decimal place\n   */\n  static formatPercentage(value: number, total: number): string {\n    if (total === 0) return '0%';\n    const percentage = (value / total) * 100;\n    return `${percentage.toFixed(1)}%`;\n  }\n\n  /**\n   * Format win percentage\n   */\n  static formatWinPercentage(wins: number, totalGames: number): string {\n    return this.formatPercentage(wins, totalGames);\n  }\n\n  /**\n   * Format goals per game average\n   */\n  static formatGoalsPerGame(goals: number, games: number): string {\n    if (games === 0) return '0.0';\n    return (goals / games).toFixed(1);\n  }\n\n  /**\n   * Format league points\n   */\n  static formatPoints(points: number): string {\n    if (points === 1) return '1 point';\n    return `${points} points`;\n  }\n\n  /**\n   * Format goal difference\n   */\n  static formatGoalDifference(goalsFor: number, goalsAgainst: number): string {\n    const diff = goalsFor - goalsAgainst;\n    if (diff > 0) return `+${diff}`;\n    return diff.toString();\n  }\n\n  /**\n   * Format minutes played\n   */\n  static formatMinutes(minutes: number): string {\n    if (minutes < 60) return `${minutes}m`;\n    const hours = Math.floor(minutes / 60);\n    const remainingMinutes = minutes % 60;\n    return `${hours}h ${remainingMinutes}m`;\n  }\n\n  /**\n   * Format player position\n   */\n  static formatPosition(position: string | null): string {\n    if (!position) return 'Player';\n    \n    const positionMap: Record<string, string> = {\n      'gk': 'Goalkeeper',\n      'def': 'Defender', \n      'mid': 'Midfielder',\n      'for': 'Forward',\n      'goalkeeper': 'Goalkeeper',\n      'defender': 'Defender',\n      'midfielder': 'Midfielder',\n      'forward': 'Forward'\n    };\n    \n    return positionMap[position.toLowerCase()] || position;\n  }\n\n  /**\n   * Format jersey number\n   */\n  static formatJerseyNumber(number: number | null): string {\n    if (!number) return '--';\n    return `#${number}`;\n  }\n\n  /**\n   * Format achievement points (with K/M suffixes for large numbers)\n   */\n  static formatAchievementPoints(points: number): string {\n    if (points >= 1000000) {\n      return `${(points / 1000000).toFixed(1)}M`;\n    }\n    if (points >= 1000) {\n      return `${(points / 1000).toFixed(1)}K`;\n    }\n    return points.toString();\n  }\n\n  /**\n   * Format performance rating\n   */\n  static formatRating(rating: number): string {\n    return `${rating.toFixed(1)}/100`;\n  }\n\n  /**\n   * Format currency values\n   */\n  static formatCurrency(value: number, currency: string = 'USD'): string {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency,\n    }).format(value);\n  }\n\n  /**\n   * Format large numbers with appropriate suffixes\n   */\n  static formatNumber(value: number): string {\n    return new Intl.NumberFormat().format(value);\n  }\n}\n\nexport class DateFormatters {\n  /**\n   * Format match date for display\n   */\n  static formatMatchDate(date: string | Date): string {\n    const matchDate = new Date(date);\n    const now = new Date();\n    const diffTime = matchDate.getTime() - now.getTime();\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n    if (diffDays === 0) {\n      return `Today at ${matchDate.toLocaleTimeString([], { \n        hour: '2-digit', \n        minute: '2-digit' \n      })}`;\n    } else if (diffDays === 1) {\n      return `Tomorrow at ${matchDate.toLocaleTimeString([], { \n        hour: '2-digit', \n        minute: '2-digit' \n      })}`;\n    } else if (diffDays === -1) {\n      return `Yesterday at ${matchDate.toLocaleTimeString([], { \n        hour: '2-digit', \n        minute: '2-digit' \n      })}`;\n    } else if (diffDays > 0 && diffDays <= 7) {\n      return matchDate.toLocaleDateString([], { \n        weekday: 'long',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } else {\n      return matchDate.toLocaleDateString([], {\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    }\n  }\n\n  /**\n   * Format match time for live scores\n   */\n  static formatMatchTime(startTime: string | Date, status: string): string {\n    if (status === 'completed') return 'FT';\n    if (status === 'scheduled') {\n      return this.formatMatchDate(startTime);\n    }\n    if (status === 'in_progress') {\n      const start = new Date(startTime);\n      const now = new Date();\n      const diffMinutes = Math.floor((now.getTime() - start.getTime()) / (1000 * 60));\n      return `${Math.min(diffMinutes, 90)}'`;\n    }\n    return '--';\n  }\n\n  /**\n   * Format season period\n   */\n  static formatSeasonPeriod(startDate: string | Date, endDate: string | Date): string {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    \n    if (start.getFullYear() === end.getFullYear()) {\n      return `${start.getFullYear()} Season`;\n    } else {\n      return `${start.getFullYear()}-${end.getFullYear().toString().slice(-2)} Season`;\n    }\n  }\n\n  /**\n   * Format relative time (e.g., \"2 hours ago\")\n   */\n  static formatRelativeTime(date: string | Date): string {\n    const past = new Date(date);\n    const now = new Date();\n    const diffTime = now.getTime() - past.getTime();\n    const diffMinutes = Math.floor(diffTime / (1000 * 60));\n    const diffHours = Math.floor(diffMinutes / 60);\n    const diffDays = Math.floor(diffHours / 24);\n\n    if (diffMinutes < 1) return 'Just now';\n    if (diffMinutes < 60) return `${diffMinutes}m ago`;\n    if (diffHours < 24) return `${diffHours}h ago`;\n    if (diffDays < 7) return `${diffDays}d ago`;\n    \n    return past.toLocaleDateString([], {\n      month: 'short',\n      day: 'numeric'\n    });\n  }\n\n  /**\n   * Format age from birth date\n   */\n  static formatAge(birthDate: string | Date): string {\n    const birth = new Date(birthDate);\n    const today = new Date();\n    let age = today.getFullYear() - birth.getFullYear();\n    const monthDiff = today.getMonth() - birth.getMonth();\n    \n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {\n      age--;\n    }\n    \n    return `${age} years old`;\n  }\n}\n\nexport class StatusFormatters {\n  /**\n   * Format match status for display\n   */\n  static formatMatchStatus(status: string): { text: string; color: string } {\n    const statusMap: Record<string, { text: string; color: string }> = {\n      'scheduled': { text: 'Scheduled', color: 'bg-blue-100 text-blue-800' },\n      'in_progress': { text: 'Live', color: 'bg-green-100 text-green-800' },\n      'completed': { text: 'Final', color: 'bg-gray-100 text-gray-800' },\n      'cancelled': { text: 'Cancelled', color: 'bg-red-100 text-red-800' },\n      'postponed': { text: 'Postponed', color: 'bg-yellow-100 text-yellow-800' }\n    };\n    \n    return statusMap[status] || { text: status, color: 'bg-gray-100 text-gray-800' };\n  }\n\n  /**\n   * Format league type for display\n   */\n  static formatLeagueType(type: string): string {\n    const typeMap: Record<string, string> = {\n      'recreational': 'Recreational',\n      'competitive': 'Competitive', \n      'semi-pro': 'Semi-Professional',\n      'youth': 'Youth League',\n      'masters': 'Masters League'\n    };\n    \n    return typeMap[type] || type;\n  }\n\n  /**\n   * Format sport type for display\n   */\n  static formatSportType(sport: string): string {\n    const sportMap: Record<string, string> = {\n      'soccer': 'Soccer',\n      'football': 'Football',\n      'basketball': 'Basketball',\n      'volleyball': 'Volleyball',\n      'tennis': 'Tennis',\n      'baseball': 'Baseball',\n      'hockey': 'Hockey'\n    };\n    \n    return sportMap[sport] || sport;\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 816, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/MatchDay/src/components/ui/stats-display.tsx"],"sourcesContent":["/**\n * Professional Stats Display Component\n * \n * Creates professional-looking statistics displays that make amateur players\n * feel like pros. Supports various layouts and highlight states.\n * \n * @example\n * ```typescript\n * <StatsDisplay\n *   title=\"Season Performance\"\n *   stats={[\n *     { label: 'Goals', value: 15, highlight: true },\n *     { label: 'Assists', value: 8 },\n *     { label: 'Games', value: 22 }\n *   ]}\n *   layout=\"grid\"\n * />\n * ```\n */\n\nimport React from 'react';\nimport { NumberFormatters } from '@/lib/utils/formatters';\n\ninterface StatItem {\n  label: string;\n  value: string | number;\n  subValue?: string | number;\n  highlight?: boolean;\n  trend?: 'up' | 'down' | 'neutral';\n  formatter?: (value: any) => string;\n}\n\ninterface StatsDisplayProps {\n  title?: string;\n  stats: StatItem[];\n  layout?: 'horizontal' | 'grid' | 'vertical';\n  variant?: 'default' | 'compact' | 'detailed';\n  className?: string;\n}\n\nexport const StatsDisplay = React.memo<StatsDisplayProps>(({\n  title,\n  stats,\n  layout = 'grid',\n  variant = 'default',\n  className = ''\n}) => {\n  const getLayoutClasses = () => {\n    switch (layout) {\n      case 'horizontal':\n        return 'flex flex-wrap gap-4';\n      case 'vertical':\n        return 'space-y-4';\n      case 'grid':\n      default:\n        return 'grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-4';\n    }\n  };\n\n  const getVariantClasses = () => {\n    switch (variant) {\n      case 'compact':\n        return 'p-3';\n      case 'detailed':\n        return 'p-6';\n      case 'default':\n      default:\n        return 'p-4';\n    }\n  };\n\n  const formatValue = (stat: StatItem): string => {\n    if (stat.formatter) {\n      return stat.formatter(stat.value);\n    }\n    \n    if (typeof stat.value === 'number') {\n      return stat.value.toLocaleString();\n    }\n    \n    return stat.value.toString();\n  };\n\n  const getTrendIcon = (trend?: 'up' | 'down' | 'neutral') => {\n    switch (trend) {\n      case 'up':\n        return (\n          <svg className=\"w-4 h-4 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path fillRule=\"evenodd\" d=\"M5.293 9.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 7.414V15a1 1 0 11-2 0V7.414L6.707 9.707a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n          </svg>\n        );\n      case 'down':\n        return (\n          <svg className=\"w-4 h-4 text-red-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path fillRule=\"evenodd\" d=\"M14.707 10.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 12.586V5a1 1 0 012 0v7.586l2.293-2.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n          </svg>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className={`bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 ${getVariantClasses()} ${className}`}>\n      {title && (\n        <div className=\"mb-4 pb-4 border-b border-gray-200 dark:border-gray-700\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n            {title}\n          </h3>\n        </div>\n      )}\n      \n      <div className={getLayoutClasses()}>\n        {stats.map((stat, index) => (\n          <div \n            key={index}\n            className={`text-center p-3 rounded-lg ${\n              stat.highlight \n                ? 'bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800' \n                : 'bg-gray-50 dark:bg-gray-700/50'\n            }`}\n          >\n            <div className=\"flex items-center justify-center gap-1 mb-1\">\n              <div className={`text-2xl font-bold ${\n                stat.highlight \n                  ? 'text-blue-600 dark:text-blue-400' \n                  : 'text-gray-900 dark:text-white'\n              }`}>\n                {formatValue(stat)}\n              </div>\n              {getTrendIcon(stat.trend)}\n            </div>\n            \n            <div className=\"text-xs text-gray-500 dark:text-gray-400 uppercase tracking-wide font-medium\">\n              {stat.label}\n            </div>\n            \n            {stat.subValue && (\n              <div className=\"text-xs text-gray-400 dark:text-gray-500 mt-1\">\n                {typeof stat.subValue === 'number' \n                  ? stat.subValue.toLocaleString() \n                  : stat.subValue\n                }\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n});\n\nStatsDisplay.displayName = 'StatsDisplay';\n\n// Pre-configured stat displays for common use cases\nexport const PlayerStatsDisplay = React.memo<{\n  stats: {\n    goals: number;\n    assists: number;\n    gamesPlayed: number;\n    minutesPlayed: number;\n    yellowCards?: number;\n    redCards?: number;\n  };\n  compact?: boolean;\n}>(({ stats, compact = false }) => {\n  const statItems: StatItem[] = [\n    {\n      label: 'Goals',\n      value: stats.goals,\n      formatter: NumberFormatters.formatGoals,\n      highlight: true\n    },\n    {\n      label: 'Assists', \n      value: stats.assists,\n      formatter: NumberFormatters.formatAssists\n    },\n    {\n      label: 'Games',\n      value: stats.gamesPlayed,\n      subValue: `${NumberFormatters.formatMinutes(stats.minutesPlayed)} played`\n    }\n  ];\n\n  if (!compact && (stats.yellowCards || stats.redCards)) {\n    statItems.push({\n      label: 'Cards',\n      value: `${stats.yellowCards || 0}Y/${stats.redCards || 0}R`,\n    });\n  }\n\n  return (\n    <StatsDisplay \n      title=\"Player Statistics\"\n      stats={statItems}\n      variant={compact ? 'compact' : 'default'}\n    />\n  );\n});\n\nPlayerStatsDisplay.displayName = 'PlayerStatsDisplay';\n\nexport const TeamStatsDisplay = React.memo<{\n  stats: {\n    wins: number;\n    draws: number;\n    losses: number;\n    goalsFor: number;\n    goalsAgainst: number;\n    points: number;\n  };\n  position?: number;\n}>(({ stats, position }) => {\n  const totalGames = stats.wins + stats.draws + stats.losses;\n  \n  const statItems: StatItem[] = [\n    {\n      label: 'Points',\n      value: stats.points,\n      formatter: NumberFormatters.formatPoints,\n      highlight: true\n    },\n    {\n      label: 'Record',\n      value: NumberFormatters.formatRecord(stats.wins, stats.draws, stats.losses),\n      subValue: `${NumberFormatters.formatWinPercentage(stats.wins, totalGames)} win rate`\n    },\n    {\n      label: 'Goals',\n      value: `${stats.goalsFor}/${stats.goalsAgainst}`,\n      subValue: `${NumberFormatters.formatGoalDifference(stats.goalsFor, stats.goalsAgainst)} difference`\n    }\n  ];\n\n  if (position) {\n    statItems.unshift({\n      label: 'Position',\n      value: position,\n      highlight: position <= 3\n    });\n  }\n\n  return (\n    <StatsDisplay \n      title=\"Team Performance\"\n      stats={statItems}\n    />\n  );\n});\n\nTeamStatsDisplay.displayName = 'TeamStatsDisplay';"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1074, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/MatchDay/src/components/player/mock-player-dashboard.tsx"],"sourcesContent":["/**\n * Mock Player Dashboard Component\n * \n * Professional dashboard experience using mock data to demonstrate\n * how amateur players feel like professionals on the platform.\n */\n\n'use client';\n\nimport React from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { MockDataService } from '@/lib/services/mock-data.service';\nimport { ProfessionalCard } from '@/components/ui/professional-card';\nimport { StatsDisplay } from '@/components/ui/stats-display';\nimport { NumberFormatters } from '@/lib/utils/formatters';\n\ninterface MockPlayerDashboardProps {\n  userId: string;\n  className?: string;\n}\n\nconst MockMatchCard: React.FC<{ match: any; variant: 'upcoming' | 'result' }> = ({ match, variant }) => {\n  const isWin = variant === 'result' && match.player_team === 'home' \n    ? match.home_score > match.away_score \n    : match.away_score > match.home_score;\n  \n  const resultClass = variant === 'result' \n    ? isWin ? 'border-green-200 bg-green-50' : 'border-red-200 bg-red-50'\n    : 'border-blue-200 bg-blue-50';\n\n  return (\n    <div className={`border-2 ${resultClass} rounded-lg p-4`}>\n      <div className=\"flex justify-between items-center mb-2\">\n        <span className=\"text-sm font-medium text-gray-600\">{match.league_name}</span>\n        <span className=\"text-xs text-gray-500\">\n          {new Date(match.match_date).toLocaleDateString()}\n        </span>\n      </div>\n      \n      <div className=\"flex items-center justify-between\">\n        <div className=\"text-center\">\n          <div className=\"font-bold text-gray-900\">{match.home_team}</div>\n          {variant === 'result' && (\n            <div className=\"text-2xl font-bold text-blue-600\">{match.home_score}</div>\n          )}\n        </div>\n        \n        <div className=\"text-center\">\n          <div className=\"text-gray-400 text-sm\">vs</div>\n          {variant === 'upcoming' && (\n            <div className=\"text-xs text-gray-500\">\n              {new Date(match.match_date).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n            </div>\n          )}\n        </div>\n        \n        <div className=\"text-center\">\n          <div className=\"font-bold text-gray-900\">{match.away_team}</div>\n          {variant === 'result' && (\n            <div className=\"text-2xl font-bold text-blue-600\">{match.away_score}</div>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"mt-2 text-xs text-gray-500 flex items-center\">\n        <span>📍 {match.venue}</span>\n      </div>\n    </div>\n  );\n};\n\nconst MockAchievementCard: React.FC<{ achievement: any }> = ({ achievement }) => (\n  <div className={`p-4 rounded-lg border-2 ${achievement.earned ? 'border-green-200 bg-green-50' : 'border-gray-200 bg-gray-50'}`}>\n    <div className=\"flex items-center space-x-3\">\n      <div className=\"text-2xl\">{achievement.icon}</div>\n      <div className=\"flex-1\">\n        <h4 className=\"font-semibold text-gray-900\">{achievement.title}</h4>\n        <p className=\"text-sm text-gray-600\">{achievement.description}</p>\n        {achievement.progress && (\n          <div className=\"mt-2\">\n            <div className=\"bg-gray-200 rounded-full h-2\">\n              <div \n                className=\"bg-blue-600 h-2 rounded-full\"\n                style={{ width: `${(achievement.progress / achievement.max_progress) * 100}%` }}\n              />\n            </div>\n            <div className=\"text-xs text-gray-500 mt-1\">\n              {achievement.progress}/{achievement.max_progress}\n            </div>\n          </div>\n        )}\n      </div>\n      {achievement.earned && (\n        <div className=\"text-green-600 font-bold\">✓</div>\n      )}\n    </div>\n  </div>\n);\n\nconst MockLeaderboardCard: React.FC<{ leaders: any[] }> = ({ leaders }) => (\n  <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6\">\n    <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-4\">\n      Global Goals Leaderboard\n    </h3>\n    <div className=\"space-y-3\">\n      {leaders.map((leader) => (\n        <div \n          key={leader.rank} \n          className={`flex items-center justify-between p-3 rounded-lg ${\n            leader.is_current_user ? 'bg-blue-50 border border-blue-200' : 'bg-gray-50'\n          }`}\n        >\n          <div className=\"flex items-center space-x-3\">\n            <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ${\n              leader.rank <= 3 ? 'bg-yellow-400 text-yellow-900' : 'bg-gray-200 text-gray-700'\n            }`}>\n              {leader.rank}\n            </div>\n            <span className={`font-medium ${leader.is_current_user ? 'text-blue-700' : 'text-gray-900'}`}>\n              {leader.player_name}\n            </span>\n          </div>\n          <span className=\"font-bold text-gray-900\">{leader.value}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nexport const MockPlayerDashboard: React.FC<MockPlayerDashboardProps> = ({\n  userId,\n  className = ''\n}) => {\n  const mockDataService = MockDataService.getInstance();\n\n  const { data: playerProfile, isLoading: profileLoading } = useQuery({\n    queryKey: ['mock-player-profile', userId],\n    queryFn: () => mockDataService.getPlayerProfile(userId),\n    staleTime: 10 * 60 * 1000,\n  });\n\n  const { data: playerStats, isLoading: statsLoading } = useQuery({\n    queryKey: ['mock-player-stats', userId],\n    queryFn: () => mockDataService.getPlayerStats(userId),\n    staleTime: 5 * 60 * 1000,\n  });\n\n  const { data: upcomingMatches } = useQuery({\n    queryKey: ['mock-upcoming-matches', userId],\n    queryFn: () => mockDataService.getUpcomingMatches(userId),\n    staleTime: 2 * 60 * 1000,\n  });\n\n  const { data: recentMatches } = useQuery({\n    queryKey: ['mock-recent-matches', userId],\n    queryFn: () => mockDataService.getRecentMatches(userId, 3),\n    staleTime: 5 * 60 * 1000,\n  });\n\n  const { data: achievements } = useQuery({\n    queryKey: ['mock-achievements', userId],\n    queryFn: () => mockDataService.getAchievements(userId),\n    staleTime: 10 * 60 * 1000,\n  });\n\n  const { data: leaderboard } = useQuery({\n    queryKey: ['mock-leaderboard'],\n    queryFn: () => mockDataService.getGlobalLeaderboard('goals', 6),\n    staleTime: 10 * 60 * 1000,\n  });\n\n  if (profileLoading || statsLoading) {\n    return (\n      <div className=\"space-y-6 animate-pulse\">\n        <div className=\"h-32 bg-gray-200 dark:bg-gray-700 rounded-xl\"></div>\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n          {Array.from({ length: 4 }).map((_, i) => (\n            <div key={i} className=\"h-24 bg-gray-200 dark:bg-gray-700 rounded-xl\"></div>\n          ))}\n        </div>\n        <div className=\"h-64 bg-gray-200 dark:bg-gray-700 rounded-xl\"></div>\n      </div>\n    );\n  }\n\n  if (!playerProfile || !playerStats) {\n    return (\n      <div className=\"text-center py-12\">\n        <p className=\"text-gray-600 dark:text-gray-400\">\n          Unable to load player dashboard\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`space-y-8 ${className}`}>\n      {/* Header Section */}\n      <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 rounded-2xl p-8 text-white\">\n        <div className=\"flex flex-col md:flex-row md:items-center gap-6\">\n          <div className=\"w-24 h-24 bg-white/20 rounded-full flex items-center justify-center text-3xl font-bold\">\n            {playerProfile.display_name.charAt(0).toUpperCase()}\n          </div>\n          \n          <div className=\"flex-1\">\n            <h1 className=\"text-3xl font-bold mb-2\">{playerProfile.display_name}</h1>\n            <div className=\"flex flex-wrap gap-4 text-white/90\">\n              <span>🏆 {playerStats.leagues_played} League{playerStats.leagues_played !== 1 ? 's' : ''}</span>\n              <span>⚽ {playerStats.total_goals} Goals</span>\n              <span>🅰️ {playerStats.total_assists} Assists</span>\n              <span>🎯 {playerStats.avg_goals_per_game} Goals/Game</span>\n            </div>\n            <p className=\"text-white/80 mt-2\">{playerProfile.bio}</p>\n          </div>\n\n          <div className=\"text-right\">\n            <div className=\"text-2xl font-bold\">#{playerStats.global_rank}</div>\n            <div className=\"text-white/90\">Global Rank</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Quick Stats Overview */}\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <ProfessionalCard\n          title=\"Total Games\"\n          variant=\"player\"\n          stats={[\n            { \n              label: 'Played', \n              value: NumberFormatters.formatNumber(playerStats.total_games), \n              highlight: true \n            }\n          ]}\n        />\n        <ProfessionalCard\n          title=\"Goal Contributions\"\n          variant=\"player\"\n          stats={[\n            { \n              label: 'Goals + Assists', \n              value: NumberFormatters.formatNumber(playerStats.total_goals + playerStats.total_assists), \n              highlight: true \n            }\n          ]}\n        />\n        <ProfessionalCard\n          title=\"Performance Rating\"\n          variant=\"player\"\n          stats={[\n            { \n              label: 'Rating', \n              value: NumberFormatters.formatRating(playerStats.performance_rating || 0), \n              highlight: true \n            }\n          ]}\n        />\n        <ProfessionalCard\n          title=\"Achievement Points\"\n          variant=\"player\"\n          stats={[\n            { \n              label: 'Points', \n              value: NumberFormatters.formatPoints(playerStats.achievement_points || 0), \n              highlight: true \n            }\n          ]}\n        />\n      </div>\n\n      {/* Upcoming & Recent Matches */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        {/* Upcoming Matches */}\n        <div className=\"space-y-4\">\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n            Upcoming Matches\n          </h2>\n          {upcomingMatches && upcomingMatches.length > 0 ? (\n            <div className=\"space-y-3\">\n              {upcomingMatches.slice(0, 3).map((match) => (\n                <MockMatchCard\n                  key={match.id}\n                  match={match}\n                  variant=\"upcoming\"\n                />\n              ))}\n            </div>\n          ) : (\n            <div className=\"bg-gray-50 rounded-lg p-6 text-center\">\n              <p className=\"text-gray-600\">No upcoming matches</p>\n            </div>\n          )}\n        </div>\n\n        {/* Recent Results */}\n        <div className=\"space-y-4\">\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n            Recent Results\n          </h2>\n          {recentMatches && recentMatches.length > 0 ? (\n            <div className=\"space-y-3\">\n              {recentMatches.map((match) => (\n                <MockMatchCard\n                  key={match.id}\n                  match={match}\n                  variant=\"result\"\n                />\n              ))}\n            </div>\n          ) : (\n            <div className=\"bg-gray-50 rounded-lg p-6 text-center\">\n              <p className=\"text-gray-600\">No recent matches</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Achievements & Leaderboard */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">\n            Achievements\n          </h2>\n          {achievements && achievements.length > 0 ? (\n            <div className=\"space-y-3\">\n              {achievements.slice(0, 4).map((achievement) => (\n                <MockAchievementCard key={achievement.id} achievement={achievement} />\n              ))}\n            </div>\n          ) : (\n            <div className=\"bg-gray-50 rounded-lg p-6 text-center\">\n              <p className=\"text-gray-600\">No achievements yet</p>\n            </div>\n          )}\n        </div>\n\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">\n            Global Rankings\n          </h2>\n          {leaderboard ? (\n            <MockLeaderboardCard leaders={leaderboard} />\n          ) : (\n            <div className=\"bg-gray-50 rounded-lg p-6 text-center\">\n              <p className=\"text-gray-600\">Leaderboard unavailable</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Cross-League Statistics */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6\">\n        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">\n          Cross-League Performance\n        </h2>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {playerStats.league_stats?.map((leagueStat) => (\n            <div\n              key={leagueStat.league_id}\n              className=\"border border-gray-200 dark:border-gray-700 rounded-lg p-4\"\n            >\n              <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\">\n                {leagueStat.league_name}\n              </h3>\n              <StatsDisplay\n                stats={[\n                  { label: 'Games', value: leagueStat.games_played },\n                  { label: 'Goals', value: leagueStat.goals },\n                  { label: 'Assists', value: leagueStat.assists },\n                  { label: 'Rank', value: `#${leagueStat.rank_in_league}` }\n                ]}\n                variant=\"compact\"\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1976, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/MatchDay/src/app/demo-dashboard/page.tsx"],"sourcesContent":["/**\n * Demo Dashboard Page\n * \n * Demonstrates the professional player experience using mock data.\n * Shows amateur players what it feels like to use a professional platform.\n */\n\n'use client';\n\nimport React from 'react';\nimport { MockPlayerDashboard } from '@/components/player/mock-player-dashboard';\n\nexport default function DemoDashboardPage() {\n  // For demo purposes, we'll use a mock user ID\n  const mockUserId = 'demo-user-123';\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-blue-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900\">\n      <div className=\"container mx-auto px-4 py-8\">\n        <MockPlayerDashboard userId={mockUserId} />\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;AAKD;AAHA;;;AAKe,SAAS;IACtB,8CAA8C;IAC9C,MAAM,aAAa;IAEnB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,2JAAA,CAAA,sBAAmB;gBAAC,QAAQ;;;;;;;;;;;;;;;;AAIrC","debugId":null}}]
}