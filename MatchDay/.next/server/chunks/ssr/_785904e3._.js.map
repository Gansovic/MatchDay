{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/MatchDay/src/lib/services/player.service.ts"],"sourcesContent":["/**\n * Enhanced Player Service for MatchDay\n * \n * Handles comprehensive player-related operations with focus on:\n * - Player profiles and cross-league statistics\n * - Achievement tracking and progress\n * - Performance analytics and rankings\n * - Team memberships and join requests\n * \n * Optimized for amateur sports leagues with proper error handling,\n * caching strategies, and real-time updates.\n */\n\nimport { SupabaseClient } from '@supabase/supabase-js';\nimport { \n  Database, \n  UserProfile, \n  PlayerStats, \n  PlayerProfileExtended, \n  PlayerCrossLeagueStats,\n  ServiceResponse,\n  ServiceError,\n  PaginatedServiceResponse,\n  TeamJoinRequest,\n  JoinRequestStatus,\n  Achievement,\n  UserAchievement,\n  CacheOptions,\n  RealtimeSubscriptionOptions\n} from '@/lib/types/database.types';\n\nexport class PlayerService {\n  private static instance: PlayerService;\n  private supabase: SupabaseClient<Database>;\n  private cache = new Map<string, { data: any; timestamp: number; ttl: number }>();\n\n  private constructor(supabaseClient: SupabaseClient<Database>) {\n    this.supabase = supabaseClient;\n  }\n\n  static getInstance(supabaseClient?: SupabaseClient<Database>): PlayerService {\n    if (!PlayerService.instance) {\n      if (!supabaseClient) {\n        throw new Error('SupabaseClient required for first initialization');\n      }\n      PlayerService.instance = new PlayerService(supabaseClient);\n    }\n    return PlayerService.instance;\n  }\n\n  /**\n   * Handle service errors consistently\n   */\n  private handleError(error: any, operation: string): ServiceError {\n    console.error(`PlayerService.${operation}:`, error);\n    return {\n      code: error.code || 'UNKNOWN_ERROR',\n      message: error.message || 'An unexpected error occurred',\n      details: error.details || error,\n      timestamp: new Date().toISOString()\n    };\n  }\n\n  /**\n   * Cache management utilities\n   */\n  private getCacheKey(operation: string, params: any): string {\n    return `player_service:${operation}:${JSON.stringify(params)}`;\n  }\n\n  private getFromCache<T>(key: string): T | null {\n    const cached = this.cache.get(key);\n    if (!cached) return null;\n    \n    if (Date.now() - cached.timestamp > cached.ttl * 1000) {\n      this.cache.delete(key);\n      return null;\n    }\n    \n    return cached.data as T;\n  }\n\n  private setCache<T>(key: string, data: T, ttl = 300): void {\n    this.cache.set(key, {\n      data,\n      timestamp: Date.now(),\n      ttl\n    });\n  }\n\n  /**\n   * Get comprehensive player profile with all related data\n   */\n  async getPlayerProfile(userId: string, options: CacheOptions = {}): Promise<ServiceResponse<PlayerProfileExtended>> {\n    try {\n      const cacheKey = this.getCacheKey('getPlayerProfile', { userId });\n      const cached = this.getFromCache<PlayerProfileExtended>(cacheKey);\n      \n      if (cached && !options.revalidateOnBackground) {\n        return { data: cached, error: null, success: true };\n      }\n\n      // Get basic profile\n      const { data: profile, error: profileError } = await this.supabase\n        .from('user_profiles')\n        .select('*')\n        .eq('id', userId)\n        .single();\n\n      if (profileError) {\n        if (profileError.code === 'PGRST116') {\n          return { \n            data: null, \n            error: { code: 'PLAYER_NOT_FOUND', message: 'Player not found', timestamp: new Date().toISOString() }, \n            success: false \n          };\n        }\n        throw profileError;\n      }\n\n      // Get team memberships with league details\n      const { data: teamMemberships, error: teamsError } = await this.supabase\n        .from('team_members')\n        .select(`\n          *,\n          team:teams!inner(\n            *,\n            league:leagues!inner(*)\n          )\n        `)\n        .eq('user_id', userId)\n        .eq('is_active', true);\n\n      if (teamsError) throw teamsError;\n\n      // Get achievements\n      const { data: userAchievements, error: achievementsError } = await this.supabase\n        .from('user_achievements')\n        .select(`\n          *,\n          achievement:achievements!inner(*)\n        `)\n        .eq('user_id', userId)\n        .order('earned_at', { ascending: false });\n\n      if (achievementsError) throw achievementsError;\n\n      // Get cross-league stats\n      const { data: crossLeagueStats, error: crossStatsError } = await this.supabase\n        .from('player_cross_league_stats')\n        .select('*')\n        .eq('player_id', userId)\n        .eq('season_year', new Date().getFullYear())\n        .single();\n\n      // Don't throw error if no cross-league stats exist\n      if (crossStatsError && crossStatsError.code !== 'PGRST116') {\n        throw crossStatsError;\n      }\n\n      // Get global rankings\n      const globalRankings = await this.getPlayerGlobalRankings(userId);\n\n      const playerProfile: PlayerProfileExtended = {\n        ...profile,\n        teams: teamMemberships?.map(tm => ({\n          team: tm.team as any,\n          membership: tm\n        })) || [],\n        achievements: userAchievements?.map(ua => ({\n          achievement: ua.achievement as Achievement,\n          userAchievement: ua\n        })) || [],\n        crossLeagueStats: crossLeagueStats || null,\n        globalRankings: globalRankings.data || {\n          goals: null,\n          assists: null,\n          matches: null\n        }\n      };\n\n      // Cache the result\n      this.setCache(cacheKey, playerProfile, options.ttl || 300);\n\n      return { data: playerProfile, error: null, success: true };\n\n    } catch (error) {\n      return {\n        data: null,\n        error: this.handleError(error, 'getPlayerProfile'),\n        success: false\n      };\n    }\n  }\n\n  /**\n   * Update player profile information\n   */\n  async updatePlayerProfile(\n    userId: string, \n    updates: Partial<Database['public']['Tables']['user_profiles']['Update']>\n  ): Promise<ServiceResponse<UserProfile>> {\n    try {\n      const { data, error } = await this.supabase\n        .from('user_profiles')\n        .update({\n          ...updates,\n          updated_at: new Date().toISOString()\n        })\n        .eq('id', userId)\n        .select()\n        .single();\n\n      if (error) throw error;\n\n      // Invalidate cache\n      const cacheKey = this.getCacheKey('getPlayerProfile', { userId });\n      this.cache.delete(cacheKey);\n\n      return { data, error: null, success: true };\n\n    } catch (error) {\n      return {\n        data: null,\n        error: this.handleError(error, 'updatePlayerProfile'),\n        success: false\n      };\n    }\n  }\n\n  /**\n   * Get player's cross-league statistics aggregation\n   */\n  async getCrossLeagueStats(userId: string, seasonYear?: number): Promise<ServiceResponse<PlayerCrossLeagueStats>> {\n    try {\n      const year = seasonYear || new Date().getFullYear();\n      const cacheKey = this.getCacheKey('getCrossLeagueStats', { userId, year });\n      const cached = this.getFromCache<PlayerCrossLeagueStats>(cacheKey);\n      \n      if (cached) {\n        return { data: cached, error: null, success: true };\n      }\n\n      const { data, error } = await this.supabase\n        .from('player_cross_league_stats')\n        .select('*')\n        .eq('player_id', userId)\n        .eq('season_year', year)\n        .single();\n\n      if (error && error.code !== 'PGRST116') throw error;\n\n      // Cache for 10 minutes\n      this.setCache(cacheKey, data, 600);\n\n      return { data: data || null, error: null, success: true };\n\n    } catch (error) {\n      return {\n        data: null,\n        error: this.handleError(error, 'getCrossLeagueStats'),\n        success: false\n      };\n    }\n  }\n\n  /**\n   * Get player's global rankings across different stats\n   */\n  async getPlayerGlobalRankings(userId: string): Promise<ServiceResponse<{\n    goals: { rank: number; total: number; percentile: number } | null;\n    assists: { rank: number; total: number; percentile: number } | null;\n    matches: { rank: number; total: number; percentile: number } | null;\n  }>> {\n    try {\n      const cacheKey = this.getCacheKey('getPlayerGlobalRankings', { userId });\n      const cached = this.getFromCache<any>(cacheKey);\n      \n      if (cached) {\n        return { data: cached, error: null, success: true };\n      }\n\n      // Get rankings for different stats using stored procedures\n      const [goalsRank, assistsRank, matchesRank] = await Promise.allSettled([\n        this.supabase.rpc('get_player_global_rank', { \n          player_id: userId, \n          stat_column: 'total_goals' \n        }),\n        this.supabase.rpc('get_player_global_rank', { \n          player_id: userId, \n          stat_column: 'total_assists' \n        }),\n        this.supabase.rpc('get_player_global_rank', { \n          player_id: userId, \n          stat_column: 'total_games_played' \n        })\n      ]);\n\n      const rankings = {\n        goals: goalsRank.status === 'fulfilled' && goalsRank.value.data ? {\n          rank: goalsRank.value.data.rank,\n          total: goalsRank.value.data.total_players,\n          percentile: Math.round((1 - (goalsRank.value.data.rank / goalsRank.value.data.total_players)) * 100)\n        } : null,\n        assists: assistsRank.status === 'fulfilled' && assistsRank.value.data ? {\n          rank: assistsRank.value.data.rank,\n          total: assistsRank.value.data.total_players,\n          percentile: Math.round((1 - (assistsRank.value.data.rank / assistsRank.value.data.total_players)) * 100)\n        } : null,\n        matches: matchesRank.status === 'fulfilled' && matchesRank.value.data ? {\n          rank: matchesRank.value.data.rank,\n          total: matchesRank.value.data.total_players,\n          percentile: Math.round((1 - (matchesRank.value.data.rank / matchesRank.value.data.total_players)) * 100)\n        } : null\n      };\n\n      // Cache for 30 minutes\n      this.setCache(cacheKey, rankings, 1800);\n\n      return { data: rankings, error: null, success: true };\n\n    } catch (error) {\n      return {\n        data: null,\n        error: this.handleError(error, 'getPlayerGlobalRankings'),\n        success: false\n      };\n    }\n  }\n\n  /**\n   * Get player's achievements with progress tracking\n   */\n  async getPlayerAchievements(userId: string, options: {\n    category?: string;\n    completed?: boolean;\n    limit?: number;\n    offset?: number;\n  } = {}): Promise<PaginatedServiceResponse<{\n    achievement: Achievement;\n    userAchievement: UserAchievement | null;\n    progress?: {\n      current: number;\n      target: number;\n      percentage: number;\n    };\n  }>> {\n    try {\n      let query = this.supabase\n        .from('achievements')\n        .select(`\n          *,\n          user_achievements!left(*)\n        `)\n        .eq('is_active', true);\n\n      if (options.category) {\n        query = query.eq('category', options.category);\n      }\n\n      if (options.completed !== undefined) {\n        if (options.completed) {\n          query = query.not('user_achievements', 'is', null);\n        } else {\n          query = query.is('user_achievements', null);\n        }\n      }\n\n      const { data: achievements, error, count } = await query\n        .order('sort_order')\n        .range(options.offset || 0, (options.offset || 0) + (options.limit || 50) - 1);\n\n      if (error) throw error;\n\n      // Get current player stats for progress calculation\n      const playerStats = await this.getCrossLeagueStats(userId);\n      const stats = playerStats.data;\n\n      const achievementData = achievements?.map(achievement => {\n        const userAchievement = achievement.user_achievements?.find(\n          (ua: any) => ua.user_id === userId\n        );\n\n        // Calculate progress if not completed\n        let progress;\n        if (!userAchievement && stats) {\n          const requirements = achievement.requirements as any;\n          let current = 0;\n          let target = 0;\n\n          if (requirements.goals) {\n            current = stats.total_goals || 0;\n            target = requirements.goals;\n          } else if (requirements.assists) {\n            current = stats.total_assists || 0;\n            target = requirements.assists;\n          } else if (requirements.matches_played) {\n            current = stats.total_games_played || 0;\n            target = requirements.matches_played;\n          }\n\n          if (target > 0) {\n            progress = {\n              current,\n              target,\n              percentage: Math.min(100, Math.round((current / target) * 100))\n            };\n          }\n        }\n\n        return {\n          achievement,\n          userAchievement: userAchievement || null,\n          progress\n        };\n      }) || [];\n\n      const pagination = {\n        page: Math.floor((options.offset || 0) / (options.limit || 50)) + 1,\n        limit: options.limit || 50,\n        total: count || 0,\n        totalPages: Math.ceil((count || 0) / (options.limit || 50)),\n        hasNext: ((options.offset || 0) + (options.limit || 50)) < (count || 0),\n        hasPrevious: (options.offset || 0) > 0\n      };\n\n      return {\n        data: achievementData,\n        error: null,\n        success: true,\n        pagination\n      };\n\n    } catch (error) {\n      return {\n        data: null,\n        error: this.handleError(error, 'getPlayerAchievements'),\n        success: false\n      };\n    }\n  }\n\n  /**\n   * Get player's team join requests\n   */\n  async getTeamJoinRequests(\n    userId: string,\n    options: { status?: JoinRequestStatus; limit?: number } = {}\n  ): Promise<ServiceResponse<Array<TeamJoinRequest & {\n    team: Database['public']['Tables']['teams']['Row'];\n    league: Database['public']['Tables']['leagues']['Row'];\n  }>>> {\n    try {\n      let query = this.supabase\n        .from('team_join_requests')\n        .select(`\n          *,\n          team:teams!inner(\n            *,\n            league:leagues!inner(*)\n          )\n        `)\n        .eq('user_id', userId);\n\n      if (options.status) {\n        query = query.eq('status', options.status);\n      }\n\n      const { data, error } = await query\n        .order('created_at', { ascending: false })\n        .limit(options.limit || 50);\n\n      if (error) throw error;\n\n      return { data: data || [], error: null, success: true };\n\n    } catch (error) {\n      return {\n        data: null,\n        error: this.handleError(error, 'getTeamJoinRequests'),\n        success: false\n      };\n    }\n  }\n\n  /**\n   * Submit a team join request\n   */\n  async submitTeamJoinRequest(\n    userId: string,\n    teamId: string,\n    options: {\n      message?: string;\n      preferredPosition?: string;\n      requestedJerseyNumber?: number;\n    } = {}\n  ): Promise<ServiceResponse<TeamJoinRequest>> {\n    try {\n      // Check if user already has a pending request for this team\n      const { data: existing, error: checkError } = await this.supabase\n        .from('team_join_requests')\n        .select('id')\n        .eq('user_id', userId)\n        .eq('team_id', teamId)\n        .eq('status', 'pending')\n        .single();\n\n      if (checkError && checkError.code !== 'PGRST116') throw checkError;\n\n      if (existing) {\n        return {\n          data: null,\n          error: {\n            code: 'DUPLICATE_REQUEST',\n            message: 'You already have a pending request for this team',\n            timestamp: new Date().toISOString()\n          },\n          success: false\n        };\n      }\n\n      const { data, error } = await this.supabase\n        .from('team_join_requests')\n        .insert({\n          user_id: userId,\n          team_id: teamId,\n          message: options.message,\n          preferred_position: options.preferredPosition,\n          requested_jersey_number: options.requestedJerseyNumber,\n          status: 'pending',\n          expires_at: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString() // 30 days\n        })\n        .select()\n        .single();\n\n      if (error) throw error;\n\n      return { data, error: null, success: true };\n\n    } catch (error) {\n      return {\n        data: null,\n        error: this.handleError(error, 'submitTeamJoinRequest'),\n        success: false\n      };\n    }\n  }\n\n  /**\n   * Withdraw a team join request\n   */\n  async withdrawTeamJoinRequest(userId: string, requestId: string): Promise<ServiceResponse<boolean>> {\n    try {\n      const { data, error } = await this.supabase\n        .from('team_join_requests')\n        .update({ status: 'withdrawn' })\n        .eq('id', requestId)\n        .eq('user_id', userId)\n        .eq('status', 'pending')\n        .select()\n        .single();\n\n      if (error) throw error;\n\n      return { data: true, error: null, success: true };\n\n    } catch (error) {\n      return {\n        data: null,\n        error: this.handleError(error, 'withdrawTeamJoinRequest'),\n        success: false\n      };\n    }\n  }\n\n  /**\n   * Search for players across leagues\n   */\n  async searchPlayers(options: {\n    query?: string;\n    leagueId?: string;\n    sportType?: string;\n    minGames?: number;\n    limit?: number;\n    offset?: number;\n  } = {}): Promise<PaginatedServiceResponse<PlayerCrossLeagueStats>> {\n    try {\n      let query = this.supabase\n        .from('player_cross_league_stats')\n        .select('*', { count: 'exact' })\n        .eq('season_year', new Date().getFullYear());\n\n      if (options.query) {\n        query = query.ilike('display_name', `%${options.query}%`);\n      }\n\n      if (options.minGames) {\n        query = query.gte('total_games_played', options.minGames);\n      }\n\n      const { data, error, count } = await query\n        .order('total_goals', { ascending: false })\n        .range(options.offset || 0, (options.offset || 0) + (options.limit || 20) - 1);\n\n      if (error) throw error;\n\n      const pagination = {\n        page: Math.floor((options.offset || 0) / (options.limit || 20)) + 1,\n        limit: options.limit || 20,\n        total: count || 0,\n        totalPages: Math.ceil((count || 0) / (options.limit || 20)),\n        hasNext: ((options.offset || 0) + (options.limit || 20)) < (count || 0),\n        hasPrevious: (options.offset || 0) > 0\n      };\n\n      return {\n        data: data || [],\n        error: null,\n        success: true,\n        pagination\n      };\n\n    } catch (error) {\n      return {\n        data: null,\n        error: this.handleError(error, 'searchPlayers'),\n        success: false,\n        pagination: {\n          page: 1,\n          limit: options.limit || 20,\n          total: 0,\n          totalPages: 0,\n          hasNext: false,\n          hasPrevious: false\n        }\n      };\n    }\n  }\n\n  /**\n   * Subscribe to real-time updates for player data\n   */\n  subscribeToPlayerUpdates(\n    userId: string,\n    callback: (payload: any) => void,\n    options: RealtimeSubscriptionOptions = { table: 'user_profiles', event: '*' }\n  ) {\n    return this.supabase\n      .channel(`player-${userId}-updates`)\n      .on(\n        'postgres_changes',\n        {\n          event: options.event,\n          schema: options.schema || 'public',\n          table: options.table,\n          filter: options.filter || `id=eq.${userId}`\n        },\n        callback\n      )\n      .subscribe();\n  }\n\n  /**\n   * Clear cache for specific operations or all cache\n   */\n  clearCache(pattern?: string): void {\n    if (!pattern) {\n      this.cache.clear();\n      return;\n    }\n\n    const keys = Array.from(this.cache.keys());\n    keys.forEach(key => {\n      if (key.includes(pattern)) {\n        this.cache.delete(key);\n      }\n    });\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 527, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/MatchDay/src/lib/utils/formatters.ts"],"sourcesContent":["/**\n * Number and Data Formatters for MatchDay\n * \n * Centralized formatting utilities following LEVER principles.\n * ALL number and data formatting MUST use these utilities.\n * \n * @example\n * ```typescript\n * import { NumberFormatters, DateFormatters } from '@/lib/utils/formatters';\n * \n * <span>{NumberFormatters.formatGoals(15)}</span>\n * <span>{DateFormatters.formatMatchDate(matchDate)}</span>\n * ```\n * \n * These formatters should be used for ALL data display.\n */\n\nexport class NumberFormatters {\n  /**\n   * Format goals with appropriate suffix\n   */\n  static formatGoals(goals: number): string {\n    if (goals === 0) return '0 goals';\n    if (goals === 1) return '1 goal';\n    return `${goals.toLocaleString()} goals`;\n  }\n\n  /**\n   * Format assists with appropriate suffix\n   */\n  static formatAssists(assists: number): string {\n    if (assists === 0) return '0 assists';\n    if (assists === 1) return '1 assist';\n    return `${assists.toLocaleString()} assists`;\n  }\n\n  /**\n   * Format match score\n   */\n  static formatScore(homeScore: number, awayScore: number): string {\n    return `${homeScore} - ${awayScore}`;\n  }\n\n  /**\n   * Format win/loss record\n   */\n  static formatRecord(wins: number, draws: number, losses: number): string {\n    return `${wins}W-${draws}D-${losses}L`;\n  }\n\n  /**\n   * Format percentage with one decimal place\n   */\n  static formatPercentage(value: number, total: number): string {\n    if (total === 0) return '0%';\n    const percentage = (value / total) * 100;\n    return `${percentage.toFixed(1)}%`;\n  }\n\n  /**\n   * Format win percentage\n   */\n  static formatWinPercentage(wins: number, totalGames: number): string {\n    return this.formatPercentage(wins, totalGames);\n  }\n\n  /**\n   * Format goals per game average\n   */\n  static formatGoalsPerGame(goals: number, games: number): string {\n    if (games === 0) return '0.0';\n    return (goals / games).toFixed(1);\n  }\n\n  /**\n   * Format league points\n   */\n  static formatPoints(points: number): string {\n    if (points === 1) return '1 point';\n    return `${points} points`;\n  }\n\n  /**\n   * Format goal difference\n   */\n  static formatGoalDifference(goalsFor: number, goalsAgainst: number): string {\n    const diff = goalsFor - goalsAgainst;\n    if (diff > 0) return `+${diff}`;\n    return diff.toString();\n  }\n\n  /**\n   * Format minutes played\n   */\n  static formatMinutes(minutes: number): string {\n    if (minutes < 60) return `${minutes}m`;\n    const hours = Math.floor(minutes / 60);\n    const remainingMinutes = minutes % 60;\n    return `${hours}h ${remainingMinutes}m`;\n  }\n\n  /**\n   * Format player position\n   */\n  static formatPosition(position: string | null): string {\n    if (!position) return 'Player';\n    \n    const positionMap: Record<string, string> = {\n      'gk': 'Goalkeeper',\n      'def': 'Defender', \n      'mid': 'Midfielder',\n      'for': 'Forward',\n      'goalkeeper': 'Goalkeeper',\n      'defender': 'Defender',\n      'midfielder': 'Midfielder',\n      'forward': 'Forward'\n    };\n    \n    return positionMap[position.toLowerCase()] || position;\n  }\n\n  /**\n   * Format jersey number\n   */\n  static formatJerseyNumber(number: number | null): string {\n    if (!number) return '--';\n    return `#${number}`;\n  }\n\n  /**\n   * Format achievement points (with K/M suffixes for large numbers)\n   */\n  static formatAchievementPoints(points: number): string {\n    if (points >= 1000000) {\n      return `${(points / 1000000).toFixed(1)}M`;\n    }\n    if (points >= 1000) {\n      return `${(points / 1000).toFixed(1)}K`;\n    }\n    return points.toString();\n  }\n\n  /**\n   * Format performance rating\n   */\n  static formatRating(rating: number): string {\n    return `${rating.toFixed(1)}/100`;\n  }\n\n  /**\n   * Format currency values\n   */\n  static formatCurrency(value: number, currency: string = 'USD'): string {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency,\n    }).format(value);\n  }\n\n  /**\n   * Format large numbers with appropriate suffixes\n   */\n  static formatNumber(value: number): string {\n    return new Intl.NumberFormat().format(value);\n  }\n}\n\nexport class DateFormatters {\n  /**\n   * Format match date for display\n   */\n  static formatMatchDate(date: string | Date): string {\n    const matchDate = new Date(date);\n    const now = new Date();\n    const diffTime = matchDate.getTime() - now.getTime();\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n    if (diffDays === 0) {\n      return `Today at ${matchDate.toLocaleTimeString([], { \n        hour: '2-digit', \n        minute: '2-digit' \n      })}`;\n    } else if (diffDays === 1) {\n      return `Tomorrow at ${matchDate.toLocaleTimeString([], { \n        hour: '2-digit', \n        minute: '2-digit' \n      })}`;\n    } else if (diffDays === -1) {\n      return `Yesterday at ${matchDate.toLocaleTimeString([], { \n        hour: '2-digit', \n        minute: '2-digit' \n      })}`;\n    } else if (diffDays > 0 && diffDays <= 7) {\n      return matchDate.toLocaleDateString([], { \n        weekday: 'long',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } else {\n      return matchDate.toLocaleDateString([], {\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    }\n  }\n\n  /**\n   * Format match time for live scores\n   */\n  static formatMatchTime(startTime: string | Date, status: string): string {\n    if (status === 'completed') return 'FT';\n    if (status === 'scheduled') {\n      return this.formatMatchDate(startTime);\n    }\n    if (status === 'in_progress') {\n      const start = new Date(startTime);\n      const now = new Date();\n      const diffMinutes = Math.floor((now.getTime() - start.getTime()) / (1000 * 60));\n      return `${Math.min(diffMinutes, 90)}'`;\n    }\n    return '--';\n  }\n\n  /**\n   * Format season period\n   */\n  static formatSeasonPeriod(startDate: string | Date, endDate: string | Date): string {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    \n    if (start.getFullYear() === end.getFullYear()) {\n      return `${start.getFullYear()} Season`;\n    } else {\n      return `${start.getFullYear()}-${end.getFullYear().toString().slice(-2)} Season`;\n    }\n  }\n\n  /**\n   * Format relative time (e.g., \"2 hours ago\")\n   */\n  static formatRelativeTime(date: string | Date): string {\n    const past = new Date(date);\n    const now = new Date();\n    const diffTime = now.getTime() - past.getTime();\n    const diffMinutes = Math.floor(diffTime / (1000 * 60));\n    const diffHours = Math.floor(diffMinutes / 60);\n    const diffDays = Math.floor(diffHours / 24);\n\n    if (diffMinutes < 1) return 'Just now';\n    if (diffMinutes < 60) return `${diffMinutes}m ago`;\n    if (diffHours < 24) return `${diffHours}h ago`;\n    if (diffDays < 7) return `${diffDays}d ago`;\n    \n    return past.toLocaleDateString([], {\n      month: 'short',\n      day: 'numeric'\n    });\n  }\n\n  /**\n   * Format age from birth date\n   */\n  static formatAge(birthDate: string | Date): string {\n    const birth = new Date(birthDate);\n    const today = new Date();\n    let age = today.getFullYear() - birth.getFullYear();\n    const monthDiff = today.getMonth() - birth.getMonth();\n    \n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {\n      age--;\n    }\n    \n    return `${age} years old`;\n  }\n}\n\nexport class StatusFormatters {\n  /**\n   * Format match status for display\n   */\n  static formatMatchStatus(status: string): { text: string; color: string } {\n    const statusMap: Record<string, { text: string; color: string }> = {\n      'scheduled': { text: 'Scheduled', color: 'bg-blue-100 text-blue-800' },\n      'in_progress': { text: 'Live', color: 'bg-green-100 text-green-800' },\n      'completed': { text: 'Final', color: 'bg-gray-100 text-gray-800' },\n      'cancelled': { text: 'Cancelled', color: 'bg-red-100 text-red-800' },\n      'postponed': { text: 'Postponed', color: 'bg-yellow-100 text-yellow-800' }\n    };\n    \n    return statusMap[status] || { text: status, color: 'bg-gray-100 text-gray-800' };\n  }\n\n  /**\n   * Format league type for display\n   */\n  static formatLeagueType(type: string): string {\n    const typeMap: Record<string, string> = {\n      'recreational': 'Recreational',\n      'competitive': 'Competitive', \n      'semi-pro': 'Semi-Professional',\n      'youth': 'Youth League',\n      'masters': 'Masters League'\n    };\n    \n    return typeMap[type] || type;\n  }\n\n  /**\n   * Format sport type for display\n   */\n  static formatSportType(sport: string): string {\n    const sportMap: Record<string, string> = {\n      'soccer': 'Soccer',\n      'football': 'Football',\n      'basketball': 'Basketball',\n      'volleyball': 'Volleyball',\n      'tennis': 'Tennis',\n      'baseball': 'Baseball',\n      'hockey': 'Hockey'\n    };\n    \n    return sportMap[sport] || sport;\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 820, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/MatchDay/src/components/player/league-discovery.tsx"],"sourcesContent":["/**\n * League Discovery Component\n * \n * Professional interface for players to find and join leagues.\n * Uses intelligent matching to suggest compatible leagues based on\n * player stats, location, and preferences.\n * \n * @example\n * ```typescript\n * <LeagueDiscovery userId={userId} />\n * ```\n */\n\nimport React, { useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { ProfessionalCard } from '@/components/ui/professional-card';\nimport { PlayerService, LeagueMatch } from '@/lib/services/player.service';\nimport { NumberFormatters } from '@/lib/utils/formatters';\n\ninterface LeagueDiscoveryProps {\n  userId: string;\n  className?: string;\n}\n\ninterface SearchFilters {\n  sportType: string;\n  skillLevel: string;\n  location: string;\n  maxDistance: number;\n  entryFeeRange: [number, number];\n}\n\nconst LeagueCard: React.FC<{\n  league: LeagueMatch;\n  onJoinRequest: (leagueId: string) => void;\n  isRequesting: boolean;\n}> = ({ league, onJoinRequest, isRequesting }) => {\n  const getCompatibilityColor = (score: number) => {\n    if (score >= 80) return 'text-green-600 bg-green-100';\n    if (score >= 60) return 'text-yellow-600 bg-yellow-100';\n    return 'text-red-600 bg-red-100';\n  };\n\n  const getSkillLevelIcon = (level: string) => {\n    switch (level) {\n      case 'recreational': return '🌟';\n      case 'competitive': return '🔥';\n      case 'semi-pro': return '⚡';\n      default: return '🏆';\n    }\n  };\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6 hover:shadow-lg transition-shadow\">\n      {/* Header */}\n      <div className=\"flex items-start justify-between mb-4\">\n        <div className=\"flex-1\">\n          <div className=\"flex items-center gap-2 mb-2\">\n            <h3 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n              {league.name}\n            </h3>\n            <span className=\"text-2xl\">\n              {getSkillLevelIcon(league.league_type)}\n            </span>\n          </div>\n          <p className=\"text-gray-600 dark:text-gray-300 text-sm\">\n            {league.description}\n          </p>\n        </div>\n        \n        <div className={`px-3 py-1 rounded-full text-sm font-medium ${getCompatibilityColor(league.compatibility_score)}`}>\n          {league.compatibility_score}% Match\n        </div>\n      </div>\n\n      {/* League Info Grid */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-4\">\n        <div className=\"text-center\">\n          <div className=\"text-lg font-bold text-gray-900 dark:text-white\">\n            {league.sport_type.charAt(0).toUpperCase() + league.sport_type.slice(1)}\n          </div>\n          <div className=\"text-xs text-gray-500\">Sport</div>\n        </div>\n        \n        <div className=\"text-center\">\n          <div className=\"text-lg font-bold text-gray-900 dark:text-white capitalize\">\n            {league.league_type}\n          </div>\n          <div className=\"text-xs text-gray-500\">Level</div>\n        </div>\n        \n        <div className=\"text-center\">\n          <div className=\"text-lg font-bold text-gray-900 dark:text-white\">\n            {league.current_teams}/{league.max_teams}\n          </div>\n          <div className=\"text-xs text-gray-500\">Teams</div>\n        </div>\n        \n        <div className=\"text-center\">\n          <div className=\"text-lg font-bold text-gray-900 dark:text-white\">\n            {NumberFormatters.formatCurrency(league.entry_fee)}\n          </div>\n          <div className=\"text-xs text-gray-500\">Entry Fee</div>\n        </div>\n      </div>\n\n      {/* Location & Schedule */}\n      <div className=\"space-y-2 mb-4\">\n        <div className=\"flex items-center gap-2 text-sm text-gray-600 dark:text-gray-300\">\n          <span>📍</span>\n          <span>{league.location}</span>\n          {league.distance_km && (\n            <span className=\"text-blue-600\">• {league.distance_km.toFixed(1)}km away</span>\n          )}\n        </div>\n        \n        <div className=\"flex items-center gap-2 text-sm text-gray-600 dark:text-gray-300\">\n          <span>📅</span>\n          <span>\n            {new Date(league.season_start).toLocaleDateString()} - {new Date(league.season_end).toLocaleDateString()}\n          </span>\n        </div>\n      </div>\n\n      {/* Compatibility Indicators */}\n      <div className=\"flex gap-2 mb-4\">\n        {league.skill_level_match && (\n          <span className=\"px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full\">\n            ✓ Skill Match\n          </span>\n        )}\n        {league.schedule_compatibility && (\n          <span className=\"px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full\">\n            ✓ Schedule Fit\n          </span>\n        )}\n        {league.available_spots > 0 && (\n          <span className=\"px-2 py-1 bg-purple-100 text-purple-800 text-xs rounded-full\">\n            {league.available_spots} Spots Available\n          </span>\n        )}\n      </div>\n\n      {/* Action Button */}\n      <button\n        onClick={() => onJoinRequest(league.id)}\n        disabled={isRequesting || league.available_spots === 0}\n        className=\"w-full bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white py-2 px-4 rounded-lg font-medium transition-colors\"\n      >\n        {isRequesting ? 'Requesting...' : \n         league.available_spots === 0 ? 'League Full' : 'Request to Join'}\n      </button>\n    </div>\n  );\n};\n\nexport const LeagueDiscovery: React.FC<LeagueDiscoveryProps> = ({\n  userId,\n  className = ''\n}) => {\n  const [filters, setFilters] = useState<SearchFilters>({\n    sportType: '',\n    skillLevel: '',\n    location: '',\n    maxDistance: 50,\n    entryFeeRange: [0, 500]\n  });\n  \n  const [requestingLeague, setRequestingLeague] = useState<string | null>(null);\n\n  const { data: compatibleLeagues, isLoading, refetch } = useQuery({\n    queryKey: ['compatible-leagues', userId, filters],\n    queryFn: () => PlayerService.getInstance().findCompatibleLeagues(userId, {\n      sportType: filters.sportType || undefined,\n      maxDistance: filters.maxDistance,\n      skillLevel: filters.skillLevel || undefined,\n      location: filters.location || undefined,\n    }),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n\n  const handleJoinRequest = async (leagueId: string) => {\n    if (requestingLeague) return;\n    \n    setRequestingLeague(leagueId);\n    try {\n      await PlayerService.getInstance().submitJoinRequest(leagueId, userId, \n        'I would like to join this league and contribute to the team!');\n      \n      // Refetch to update available spots\n      refetch();\n      \n      // Show success message (you might want to add a toast notification here)\n      alert('Join request submitted successfully!');\n    } catch (error) {\n      console.error('Failed to submit join request:', error);\n      alert('Failed to submit join request. Please try again.');\n    } finally {\n      setRequestingLeague(null);\n    }\n  };\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* Header */}\n      <div className=\"text-center\">\n        <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">\n          Discover Leagues\n        </h1>\n        <p className=\"text-gray-600 dark:text-gray-300 max-w-2xl mx-auto\">\n          Find the perfect league that matches your skill level, location, and schedule. \n          Our smart matching algorithm suggests leagues tailored just for you.\n        </p>\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6\">\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n          Filter Leagues\n        </h2>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              Sport Type\n            </label>\n            <select\n              value={filters.sportType}\n              onChange={(e) => setFilters(prev => ({ ...prev, sportType: e.target.value }))}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            >\n              <option value=\"\">All Sports</option>\n              <option value=\"soccer\">Soccer</option>\n              <option value=\"basketball\">Basketball</option>\n              <option value=\"volleyball\">Volleyball</option>\n              <option value=\"softball\">Softball</option>\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              Skill Level\n            </label>\n            <select\n              value={filters.skillLevel}\n              onChange={(e) => setFilters(prev => ({ ...prev, skillLevel: e.target.value }))}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            >\n              <option value=\"\">All Levels</option>\n              <option value=\"recreational\">Recreational</option>\n              <option value=\"competitive\">Competitive</option>\n              <option value=\"semi-pro\">Semi-Professional</option>\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              Location\n            </label>\n            <input\n              type=\"text\"\n              value={filters.location}\n              onChange={(e) => setFilters(prev => ({ ...prev, location: e.target.value }))}\n              placeholder=\"City or ZIP code\"\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              Max Distance (km)\n            </label>\n            <select\n              value={filters.maxDistance}\n              onChange={(e) => setFilters(prev => ({ ...prev, maxDistance: parseInt(e.target.value) }))}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            >\n              <option value={10}>10 km</option>\n              <option value={25}>25 km</option>\n              <option value={50}>50 km</option>\n              <option value={100}>100 km</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Results */}\n      {isLoading ? (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {Array.from({ length: 6 }).map((_, i) => (\n            <div key={i} className=\"bg-gray-200 dark:bg-gray-700 rounded-xl h-64 animate-pulse\"></div>\n          ))}\n        </div>\n      ) : compatibleLeagues && compatibleLeagues.length > 0 ? (\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n              {compatibleLeagues.length} Compatible Leagues Found\n            </h2>\n            <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n              Sorted by compatibility score\n            </div>\n          </div>\n          \n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {compatibleLeagues.map((league) => (\n              <LeagueCard\n                key={league.id}\n                league={league}\n                onJoinRequest={handleJoinRequest}\n                isRequesting={requestingLeague === league.id}\n              />\n            ))}\n          </div>\n        </div>\n      ) : (\n        <div className=\"text-center py-12\">\n          <div className=\"text-6xl mb-4\">🔍</div>\n          <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">\n            No leagues found\n          </h3>\n          <p className=\"text-gray-600 dark:text-gray-300 mb-4\">\n            Try adjusting your search filters to find more options.\n          </p>\n          <button\n            onClick={() => setFilters({\n              sportType: '',\n              skillLevel: '',\n              location: '',\n              maxDistance: 50,\n              entryFeeRange: [0, 500]\n            })}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg font-medium transition-colors\"\n          >\n            Clear Filters\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};"],"names":[],"mappings":"AAAA;;;;;;;;;;;CAWC;;;;AAED;AACA;AAEA;AACA;;;;;;AAeA,MAAM,aAID,CAAC,EAAE,MAAM,EAAE,aAAa,EAAE,YAAY,EAAE;IAC3C,MAAM,wBAAwB,CAAC;QAC7B,IAAI,SAAS,IAAI,OAAO;QACxB,IAAI,SAAS,IAAI,OAAO;QACxB,OAAO;IACT;IAEA,MAAM,oBAAoB,CAAC;QACzB,OAAQ;YACN,KAAK;gBAAgB,OAAO;YAC5B,KAAK;gBAAe,OAAO;YAC3B,KAAK;gBAAY,OAAO;YACxB;gBAAS,OAAO;QAClB;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAG,WAAU;kDACX,OAAO,IAAI;;;;;;kDAEd,8OAAC;wCAAK,WAAU;kDACb,kBAAkB,OAAO,WAAW;;;;;;;;;;;;0CAGzC,8OAAC;gCAAE,WAAU;0CACV,OAAO,WAAW;;;;;;;;;;;;kCAIvB,8OAAC;wBAAI,WAAW,CAAC,2CAA2C,EAAE,sBAAsB,OAAO,mBAAmB,GAAG;;4BAC9G,OAAO,mBAAmB;4BAAC;;;;;;;;;;;;;0BAKhC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CACZ,OAAO,UAAU,CAAC,MAAM,CAAC,GAAG,WAAW,KAAK,OAAO,UAAU,CAAC,KAAK,CAAC;;;;;;0CAEvE,8OAAC;gCAAI,WAAU;0CAAwB;;;;;;;;;;;;kCAGzC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CACZ,OAAO,WAAW;;;;;;0CAErB,8OAAC;gCAAI,WAAU;0CAAwB;;;;;;;;;;;;kCAGzC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;oCACZ,OAAO,aAAa;oCAAC;oCAAE,OAAO,SAAS;;;;;;;0CAE1C,8OAAC;gCAAI,WAAU;0CAAwB;;;;;;;;;;;;kCAGzC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CACZ,iIAAA,CAAA,mBAAgB,CAAC,cAAc,CAAC,OAAO,SAAS;;;;;;0CAEnD,8OAAC;gCAAI,WAAU;0CAAwB;;;;;;;;;;;;;;;;;;0BAK3C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;0CAAK;;;;;;0CACN,8OAAC;0CAAM,OAAO,QAAQ;;;;;;4BACrB,OAAO,WAAW,kBACjB,8OAAC;gCAAK,WAAU;;oCAAgB;oCAAG,OAAO,WAAW,CAAC,OAAO,CAAC;oCAAG;;;;;;;;;;;;;kCAIrE,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;0CAAK;;;;;;0CACN,8OAAC;;oCACE,IAAI,KAAK,OAAO,YAAY,EAAE,kBAAkB;oCAAG;oCAAI,IAAI,KAAK,OAAO,UAAU,EAAE,kBAAkB;;;;;;;;;;;;;;;;;;;0BAM5G,8OAAC;gBAAI,WAAU;;oBACZ,OAAO,iBAAiB,kBACvB,8OAAC;wBAAK,WAAU;kCAA6D;;;;;;oBAI9E,OAAO,sBAAsB,kBAC5B,8OAAC;wBAAK,WAAU;kCAA2D;;;;;;oBAI5E,OAAO,eAAe,GAAG,mBACxB,8OAAC;wBAAK,WAAU;;4BACb,OAAO,eAAe;4BAAC;;;;;;;;;;;;;0BAM9B,8OAAC;gBACC,SAAS,IAAM,cAAc,OAAO,EAAE;gBACtC,UAAU,gBAAgB,OAAO,eAAe,KAAK;gBACrD,WAAU;0BAET,eAAe,kBACf,OAAO,eAAe,KAAK,IAAI,gBAAgB;;;;;;;;;;;;AAIxD;AAEO,MAAM,kBAAkD,CAAC,EAC9D,MAAM,EACN,YAAY,EAAE,EACf;IACC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;QACpD,WAAW;QACX,YAAY;QACZ,UAAU;QACV,aAAa;QACb,eAAe;YAAC;YAAG;SAAI;IACzB;IAEA,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAExE,MAAM,EAAE,MAAM,iBAAiB,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE;QAC/D,UAAU;YAAC;YAAsB;YAAQ;SAAQ;QACjD,SAAS,IAAM,2IAAA,CAAA,gBAAa,CAAC,WAAW,GAAG,qBAAqB,CAAC,QAAQ;gBACvE,WAAW,QAAQ,SAAS,IAAI;gBAChC,aAAa,QAAQ,WAAW;gBAChC,YAAY,QAAQ,UAAU,IAAI;gBAClC,UAAU,QAAQ,QAAQ,IAAI;YAChC;QACA,WAAW,IAAI,KAAK;IACtB;IAEA,MAAM,oBAAoB,OAAO;QAC/B,IAAI,kBAAkB;QAEtB,oBAAoB;QACpB,IAAI;YACF,MAAM,2IAAA,CAAA,gBAAa,CAAC,WAAW,GAAG,iBAAiB,CAAC,UAAU,QAC5D;YAEF,oCAAoC;YACpC;YAEA,yEAAyE;YACzE,MAAM;QACR,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kCAAkC;YAChD,MAAM;QACR,SAAU;YACR,oBAAoB;QACtB;IACF;IAEA,qBACE,8OAAC;QAAI,WAAW,CAAC,UAAU,EAAE,WAAW;;0BAEtC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAwD;;;;;;kCAGtE,8OAAC;wBAAE,WAAU;kCAAqD;;;;;;;;;;;;0BAOpE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA2D;;;;;;kCAIzE,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAAkE;;;;;;kDAGnF,8OAAC;wCACC,OAAO,QAAQ,SAAS;wCACxB,UAAU,CAAC,IAAM,WAAW,CAAA,OAAQ,CAAC;oDAAE,GAAG,IAAI;oDAAE,WAAW,EAAE,MAAM,CAAC,KAAK;gDAAC,CAAC;wCAC3E,WAAU;;0DAEV,8OAAC;gDAAO,OAAM;0DAAG;;;;;;0DACjB,8OAAC;gDAAO,OAAM;0DAAS;;;;;;0DACvB,8OAAC;gDAAO,OAAM;0DAAa;;;;;;0DAC3B,8OAAC;gDAAO,OAAM;0DAAa;;;;;;0DAC3B,8OAAC;gDAAO,OAAM;0DAAW;;;;;;;;;;;;;;;;;;0CAI7B,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAAkE;;;;;;kDAGnF,8OAAC;wCACC,OAAO,QAAQ,UAAU;wCACzB,UAAU,CAAC,IAAM,WAAW,CAAA,OAAQ,CAAC;oDAAE,GAAG,IAAI;oDAAE,YAAY,EAAE,MAAM,CAAC,KAAK;gDAAC,CAAC;wCAC5E,WAAU;;0DAEV,8OAAC;gDAAO,OAAM;0DAAG;;;;;;0DACjB,8OAAC;gDAAO,OAAM;0DAAe;;;;;;0DAC7B,8OAAC;gDAAO,OAAM;0DAAc;;;;;;0DAC5B,8OAAC;gDAAO,OAAM;0DAAW;;;;;;;;;;;;;;;;;;0CAI7B,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAAkE;;;;;;kDAGnF,8OAAC;wCACC,MAAK;wCACL,OAAO,QAAQ,QAAQ;wCACvB,UAAU,CAAC,IAAM,WAAW,CAAA,OAAQ,CAAC;oDAAE,GAAG,IAAI;oDAAE,UAAU,EAAE,MAAM,CAAC,KAAK;gDAAC,CAAC;wCAC1E,aAAY;wCACZ,WAAU;;;;;;;;;;;;0CAId,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAAkE;;;;;;kDAGnF,8OAAC;wCACC,OAAO,QAAQ,WAAW;wCAC1B,UAAU,CAAC,IAAM,WAAW,CAAA,OAAQ,CAAC;oDAAE,GAAG,IAAI;oDAAE,aAAa,SAAS,EAAE,MAAM,CAAC,KAAK;gDAAE,CAAC;wCACvF,WAAU;;0DAEV,8OAAC;gDAAO,OAAO;0DAAI;;;;;;0DACnB,8OAAC;gDAAO,OAAO;0DAAI;;;;;;0DACnB,8OAAC;gDAAO,OAAO;0DAAI;;;;;;0DACnB,8OAAC;gDAAO,OAAO;0DAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAO3B,0BACC,8OAAC;gBAAI,WAAU;0BACZ,MAAM,IAAI,CAAC;oBAAE,QAAQ;gBAAE,GAAG,GAAG,CAAC,CAAC,GAAG,kBACjC,8OAAC;wBAAY,WAAU;uBAAb;;;;;;;;;2DAGZ,qBAAqB,kBAAkB,MAAM,GAAG,kBAClD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;;oCACX,kBAAkB,MAAM;oCAAC;;;;;;;0CAE5B,8OAAC;gCAAI,WAAU;0CAA2C;;;;;;;;;;;;kCAK5D,8OAAC;wBAAI,WAAU;kCACZ,kBAAkB,GAAG,CAAC,CAAC,uBACtB,8OAAC;gCAEC,QAAQ;gCACR,eAAe;gCACf,cAAc,qBAAqB,OAAO,EAAE;+BAHvC,OAAO,EAAE;;;;;;;;;;;;;;;yEAStB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCAAgB;;;;;;kCAC/B,8OAAC;wBAAG,WAAU;kCAA2D;;;;;;kCAGzE,8OAAC;wBAAE,WAAU;kCAAwC;;;;;;kCAGrD,8OAAC;wBACC,SAAS,IAAM,WAAW;gCACxB,WAAW;gCACX,YAAY;gCACZ,UAAU;gCACV,aAAa;gCACb,eAAe;oCAAC;oCAAG;iCAAI;4BACzB;wBACA,WAAU;kCACX;;;;;;;;;;;;;;;;;;AAOX","debugId":null}},
    {"offset": {"line": 1613, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/MatchDay/src/app/leagues/page.tsx"],"sourcesContent":["/**\n * Leagues Discovery Page\n * \n * Professional interface for discovering and joining leagues.\n * Uses mock data to demonstrate the league discovery experience.\n */\n\n'use client';\n\nimport React from 'react';\nimport { LeagueDiscovery } from '@/components/player/league-discovery';\n\nexport default function LeaguesPage() {\n  // For demo purposes, we'll use a mock user ID\n  const mockUserId = 'demo-user-123';\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-blue-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900\">\n      <div className=\"container mx-auto px-4 py-8\">\n        <LeagueDiscovery userId={mockUserId} />\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;AAKD;AAHA;;;AAKe,SAAS;IACtB,8CAA8C;IAC9C,MAAM,aAAa;IAEnB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,mJAAA,CAAA,kBAAe;gBAAC,QAAQ;;;;;;;;;;;;;;;;AAIjC","debugId":null}},
    {"offset": {"line": 1655, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/MatchDay/node_modules/%40tanstack/query-core/src/queryObserver.ts"],"sourcesContent":["import { focusManager } from './focusManager'\nimport { notifyManager } from './notifyManager'\nimport { fetchState } from './query'\nimport { Subscribable } from './subscribable'\nimport { pendingThenable } from './thenable'\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale,\n} from './utils'\nimport type { FetchOptions, Query, QueryState } from './query'\nimport type { QueryClient } from './queryClient'\nimport type { PendingThenable, Thenable } from './thenable'\nimport type {\n  DefaultError,\n  DefaultedQueryObserverOptions,\n  PlaceholderDataFunction,\n  QueryKey,\n  QueryObserverBaseResult,\n  QueryObserverOptions,\n  QueryObserverResult,\n  QueryOptions,\n  RefetchOptions,\n} from './types'\n\ntype QueryObserverListener<TData, TError> = (\n  result: QueryObserverResult<TData, TError>,\n) => void\n\ninterface ObserverFetchOptions extends FetchOptions {\n  throwOnError?: boolean\n}\n\nexport class QueryObserver<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Subscribable<QueryObserverListener<TData, TError>> {\n  #client: QueryClient\n  #currentQuery: Query<TQueryFnData, TError, TQueryData, TQueryKey> = undefined!\n  #currentQueryInitialState: QueryState<TQueryData, TError> = undefined!\n  #currentResult: QueryObserverResult<TData, TError> = undefined!\n  #currentResultState?: QueryState<TQueryData, TError>\n  #currentResultOptions?: QueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >\n  #currentThenable: Thenable<TData>\n  #selectError: TError | null\n  #selectFn?: (data: TQueryData) => TData\n  #selectResult?: TData\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData?: Query<TQueryFnData, TError, TQueryData, TQueryKey>\n  #staleTimeoutId?: ReturnType<typeof setTimeout>\n  #refetchIntervalId?: ReturnType<typeof setInterval>\n  #currentRefetchInterval?: number | false\n  #trackedProps = new Set<keyof QueryObserverResult>()\n\n  constructor(\n    client: QueryClient,\n    public options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ) {\n    super()\n\n    this.#client = client\n    this.#selectError = null\n    this.#currentThenable = pendingThenable()\n    if (!this.options.experimental_prefetchInRender) {\n      this.#currentThenable.reject(\n        new Error('experimental_prefetchInRender feature flag is not enabled'),\n      )\n    }\n\n    this.bindMethods()\n    this.setOptions(options)\n  }\n\n  protected bindMethods(): void {\n    this.refetch = this.refetch.bind(this)\n  }\n\n  protected onSubscribe(): void {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this)\n\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch()\n      } else {\n        this.updateResult()\n      }\n\n      this.#updateTimers()\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.destroy()\n    }\n  }\n\n  shouldFetchOnReconnect(): boolean {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect,\n    )\n  }\n\n  shouldFetchOnWindowFocus(): boolean {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus,\n    )\n  }\n\n  destroy(): void {\n    this.listeners = new Set()\n    this.#clearStaleTimeout()\n    this.#clearRefetchInterval()\n    this.#currentQuery.removeObserver(this)\n  }\n\n  setOptions(\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): void {\n    const prevOptions = this.options\n    const prevQuery = this.#currentQuery\n\n    this.options = this.#client.defaultQueryOptions(options)\n\n    if (\n      this.options.enabled !== undefined &&\n      typeof this.options.enabled !== 'boolean' &&\n      typeof this.options.enabled !== 'function' &&\n      typeof resolveEnabled(this.options.enabled, this.#currentQuery) !==\n        'boolean'\n    ) {\n      throw new Error(\n        'Expected enabled to be a boolean or a callback that returns a boolean',\n      )\n    }\n\n    this.#updateQuery()\n    this.#currentQuery.setOptions(this.options)\n\n    if (\n      prevOptions._defaulted &&\n      !shallowEqualObjects(this.options, prevOptions)\n    ) {\n      this.#client.getQueryCache().notify({\n        type: 'observerOptionsUpdated',\n        query: this.#currentQuery,\n        observer: this,\n      })\n    }\n\n    const mounted = this.hasListeners()\n\n    // Fetch if there are subscribers\n    if (\n      mounted &&\n      shouldFetchOptionally(\n        this.#currentQuery,\n        prevQuery,\n        this.options,\n        prevOptions,\n      )\n    ) {\n      this.#executeFetch()\n    }\n\n    // Update result\n    this.updateResult()\n\n    // Update stale interval if needed\n    if (\n      mounted &&\n      (this.#currentQuery !== prevQuery ||\n        resolveEnabled(this.options.enabled, this.#currentQuery) !==\n          resolveEnabled(prevOptions.enabled, this.#currentQuery) ||\n        resolveStaleTime(this.options.staleTime, this.#currentQuery) !==\n          resolveStaleTime(prevOptions.staleTime, this.#currentQuery))\n    ) {\n      this.#updateStaleTimeout()\n    }\n\n    const nextRefetchInterval = this.#computeRefetchInterval()\n\n    // Update refetch interval if needed\n    if (\n      mounted &&\n      (this.#currentQuery !== prevQuery ||\n        resolveEnabled(this.options.enabled, this.#currentQuery) !==\n          resolveEnabled(prevOptions.enabled, this.#currentQuery) ||\n        nextRefetchInterval !== this.#currentRefetchInterval)\n    ) {\n      this.#updateRefetchInterval(nextRefetchInterval)\n    }\n  }\n\n  getOptimisticResult(\n    options: DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const query = this.#client.getQueryCache().build(this.#client, options)\n\n    const result = this.createResult(query, options)\n\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      // this assigns the optimistic result to the current Observer\n      // because if the query function changes, useQuery will be performing\n      // an effect where it would fetch again.\n      // When the fetch finishes, we perform a deep data cloning in order\n      // to reuse objects references. This deep data clone is performed against\n      // the `observer.currentResult.data` property\n      // When QueryKey changes, we refresh the query and get new `optimistic`\n      // result, while we leave the `observer.currentResult`, so when new data\n      // arrives, it finds the old `observer.currentResult` which is related\n      // to the old QueryKey. Which means that currentResult and selectData are\n      // out of sync already.\n      // To solve this, we move the cursor of the currentResult every time\n      // an observer reads an optimistic value.\n\n      // When keeping the previous data, the result doesn't change until new\n      // data arrives.\n      this.#currentResult = result\n      this.#currentResultOptions = this.options\n      this.#currentResultState = this.#currentQuery.state\n    }\n    return result\n  }\n\n  getCurrentResult(): QueryObserverResult<TData, TError> {\n    return this.#currentResult\n  }\n\n  trackResult(\n    result: QueryObserverResult<TData, TError>,\n    onPropTracked?: (key: keyof QueryObserverResult) => void,\n  ): QueryObserverResult<TData, TError> {\n    return new Proxy(result, {\n      get: (target, key) => {\n        this.trackProp(key as keyof QueryObserverResult)\n        onPropTracked?.(key as keyof QueryObserverResult)\n        return Reflect.get(target, key)\n      },\n    })\n  }\n\n  trackProp(key: keyof QueryObserverResult) {\n    this.#trackedProps.add(key)\n  }\n\n  getCurrentQuery(): Query<TQueryFnData, TError, TQueryData, TQueryKey> {\n    return this.#currentQuery\n  }\n\n  refetch({ ...options }: RefetchOptions = {}): Promise<\n    QueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n    })\n  }\n\n  fetchOptimistic(\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    const defaultedOptions = this.#client.defaultQueryOptions(options)\n\n    const query = this.#client\n      .getQueryCache()\n      .build(this.#client, defaultedOptions)\n\n    return query.fetch().then(() => this.createResult(query, defaultedOptions))\n  }\n\n  protected fetch(\n    fetchOptions: ObserverFetchOptions,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true,\n    }).then(() => {\n      this.updateResult()\n      return this.#currentResult\n    })\n  }\n\n  #executeFetch(\n    fetchOptions?: Omit<ObserverFetchOptions, 'initialPromise'>,\n  ): Promise<TQueryData | undefined> {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.#updateQuery()\n\n    // Fetch\n    let promise: Promise<TQueryData | undefined> = this.#currentQuery.fetch(\n      this.options as QueryOptions<TQueryFnData, TError, TQueryData, TQueryKey>,\n      fetchOptions,\n    )\n\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop)\n    }\n\n    return promise\n  }\n\n  #updateStaleTimeout(): void {\n    this.#clearStaleTimeout()\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery,\n    )\n\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return\n    }\n\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime)\n\n    // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n    const timeout = time + 1\n\n    this.#staleTimeoutId = setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult()\n      }\n    }, timeout)\n  }\n\n  #computeRefetchInterval() {\n    return (\n      (typeof this.options.refetchInterval === 'function'\n        ? this.options.refetchInterval(this.#currentQuery)\n        : this.options.refetchInterval) ?? false\n    )\n  }\n\n  #updateRefetchInterval(nextInterval: number | false): void {\n    this.#clearRefetchInterval()\n\n    this.#currentRefetchInterval = nextInterval\n\n    if (\n      isServer ||\n      resolveEnabled(this.options.enabled, this.#currentQuery) === false ||\n      !isValidTimeout(this.#currentRefetchInterval) ||\n      this.#currentRefetchInterval === 0\n    ) {\n      return\n    }\n\n    this.#refetchIntervalId = setInterval(() => {\n      if (\n        this.options.refetchIntervalInBackground ||\n        focusManager.isFocused()\n      ) {\n        this.#executeFetch()\n      }\n    }, this.#currentRefetchInterval)\n  }\n\n  #updateTimers(): void {\n    this.#updateStaleTimeout()\n    this.#updateRefetchInterval(this.#computeRefetchInterval())\n  }\n\n  #clearStaleTimeout(): void {\n    if (this.#staleTimeoutId) {\n      clearTimeout(this.#staleTimeoutId)\n      this.#staleTimeoutId = undefined\n    }\n  }\n\n  #clearRefetchInterval(): void {\n    if (this.#refetchIntervalId) {\n      clearInterval(this.#refetchIntervalId)\n      this.#refetchIntervalId = undefined\n    }\n  }\n\n  protected createResult(\n    query: Query<TQueryFnData, TError, TQueryData, TQueryKey>,\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const prevQuery = this.#currentQuery\n    const prevOptions = this.options\n    const prevResult = this.#currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n    const prevResultState = this.#currentResultState\n    const prevResultOptions = this.#currentResultOptions\n    const queryChange = query !== prevQuery\n    const queryInitialState = queryChange\n      ? query.state\n      : this.#currentQueryInitialState\n\n    const { state } = query\n    let newState = { ...state }\n    let isPlaceholderData = false\n    let data: TData | undefined\n\n    // Optimistically set result in fetching state if needed\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners()\n\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options)\n\n      const fetchOptionally =\n        mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions)\n\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options),\n        }\n      }\n      if (options._optimisticResults === 'isRestoring') {\n        newState.fetchStatus = 'idle'\n      }\n    }\n\n    let { error, errorUpdatedAt, status } = newState\n\n    // Per default, use query data\n    data = newState.data as unknown as TData\n    let skipSelect = false\n\n    // use placeholderData if needed\n    if (\n      options.placeholderData !== undefined &&\n      data === undefined &&\n      status === 'pending'\n    ) {\n      let placeholderData\n\n      // Memoize placeholder data\n      if (\n        prevResult?.isPlaceholderData &&\n        options.placeholderData === prevResultOptions?.placeholderData\n      ) {\n        placeholderData = prevResult.data\n        // we have to skip select when reading this memoization\n        // because prevResult.data is already \"selected\"\n        skipSelect = true\n      } else {\n        // compute placeholderData\n        placeholderData =\n          typeof options.placeholderData === 'function'\n            ? (\n                options.placeholderData as unknown as PlaceholderDataFunction<TQueryData>\n              )(\n                this.#lastQueryWithDefinedData?.state.data,\n                this.#lastQueryWithDefinedData as any,\n              )\n            : options.placeholderData\n      }\n\n      if (placeholderData !== undefined) {\n        status = 'success'\n        data = replaceData(\n          prevResult?.data,\n          placeholderData as unknown,\n          options,\n        ) as TData\n        isPlaceholderData = true\n      }\n    }\n\n    // Select data if needed\n    // this also runs placeholderData through the select function\n    if (options.select && data !== undefined && !skipSelect) {\n      // Memoize select result\n      if (\n        prevResult &&\n        data === prevResultState?.data &&\n        options.select === this.#selectFn\n      ) {\n        data = this.#selectResult\n      } else {\n        try {\n          this.#selectFn = options.select\n          data = options.select(data as any)\n          data = replaceData(prevResult?.data, data, options)\n          this.#selectResult = data\n          this.#selectError = null\n        } catch (selectError) {\n          this.#selectError = selectError as TError\n        }\n      }\n    }\n\n    if (this.#selectError) {\n      error = this.#selectError as any\n      data = this.#selectResult\n      errorUpdatedAt = Date.now()\n      status = 'error'\n    }\n\n    const isFetching = newState.fetchStatus === 'fetching'\n    const isPending = status === 'pending'\n    const isError = status === 'error'\n\n    const isLoading = isPending && isFetching\n    const hasData = data !== undefined\n\n    const result: QueryObserverBaseResult<TData, TError> = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === 'success',\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount:\n        newState.dataUpdateCount > queryInitialState.dataUpdateCount ||\n        newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === 'paused',\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable,\n      isEnabled: resolveEnabled(options.enabled, query) !== false,\n    }\n\n    const nextResult = result as QueryObserverResult<TData, TError>\n\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable: PendingThenable<TData>) => {\n        if (nextResult.status === 'error') {\n          thenable.reject(nextResult.error)\n        } else if (nextResult.data !== undefined) {\n          thenable.resolve(nextResult.data)\n        }\n      }\n\n      /**\n       * Create a new thenable and result promise when the results have changed\n       */\n      const recreateThenable = () => {\n        const pending =\n          (this.#currentThenable =\n          nextResult.promise =\n            pendingThenable())\n\n        finalizeThenableIfPossible(pending)\n      }\n\n      const prevThenable = this.#currentThenable\n      switch (prevThenable.status) {\n        case 'pending':\n          // Finalize the previous thenable if it was pending\n          // and we are still observing the same query\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable)\n          }\n          break\n        case 'fulfilled':\n          if (\n            nextResult.status === 'error' ||\n            nextResult.data !== prevThenable.value\n          ) {\n            recreateThenable()\n          }\n          break\n        case 'rejected':\n          if (\n            nextResult.status !== 'error' ||\n            nextResult.error !== prevThenable.reason\n          ) {\n            recreateThenable()\n          }\n          break\n      }\n    }\n\n    return nextResult\n  }\n\n  updateResult(): void {\n    const prevResult = this.#currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n\n    const nextResult = this.createResult(this.#currentQuery, this.options)\n\n    this.#currentResultState = this.#currentQuery.state\n    this.#currentResultOptions = this.options\n\n    if (this.#currentResultState.data !== undefined) {\n      this.#lastQueryWithDefinedData = this.#currentQuery\n    }\n\n    // Only notify and update result if something has changed\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return\n    }\n\n    this.#currentResult = nextResult\n\n    const shouldNotifyListeners = (): boolean => {\n      if (!prevResult) {\n        return true\n      }\n\n      const { notifyOnChangeProps } = this.options\n      const notifyOnChangePropsValue =\n        typeof notifyOnChangeProps === 'function'\n          ? notifyOnChangeProps()\n          : notifyOnChangeProps\n\n      if (\n        notifyOnChangePropsValue === 'all' ||\n        (!notifyOnChangePropsValue && !this.#trackedProps.size)\n      ) {\n        return true\n      }\n\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps,\n      )\n\n      if (this.options.throwOnError) {\n        includedProps.add('error')\n      }\n\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key as keyof QueryObserverResult\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey]\n\n        return changed && includedProps.has(typedKey)\n      })\n    }\n\n    this.#notify({ listeners: shouldNotifyListeners() })\n  }\n\n  #updateQuery(): void {\n    const query = this.#client.getQueryCache().build(this.#client, this.options)\n\n    if (query === this.#currentQuery) {\n      return\n    }\n\n    const prevQuery = this.#currentQuery as\n      | Query<TQueryFnData, TError, TQueryData, TQueryKey>\n      | undefined\n    this.#currentQuery = query\n    this.#currentQueryInitialState = query.state\n\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this)\n      query.addObserver(this)\n    }\n  }\n\n  onQueryUpdate(): void {\n    this.updateResult()\n\n    if (this.hasListeners()) {\n      this.#updateTimers()\n    }\n  }\n\n  #notify(notifyOptions: { listeners: boolean }): void {\n    notifyManager.batch(() => {\n      // First, trigger the listeners\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult)\n        })\n      }\n\n      // Then the cache listeners\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: 'observerResultsUpdated',\n      })\n    })\n  }\n}\n\nfunction shouldLoadOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any>,\n): boolean {\n  return (\n    resolveEnabled(options.enabled, query) !== false &&\n    query.state.data === undefined &&\n    !(query.state.status === 'error' && options.retryOnMount === false)\n  )\n}\n\nfunction shouldFetchOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    shouldLoadOnMount(query, options) ||\n    (query.state.data !== undefined &&\n      shouldFetchOn(query, options, options.refetchOnMount))\n  )\n}\n\nfunction shouldFetchOn(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  field: (typeof options)['refetchOnMount'] &\n    (typeof options)['refetchOnWindowFocus'] &\n    (typeof options)['refetchOnReconnect'],\n) {\n  if (\n    resolveEnabled(options.enabled, query) !== false &&\n    resolveStaleTime(options.staleTime, query) !== 'static'\n  ) {\n    const value = typeof field === 'function' ? field(query) : field\n\n    return value === 'always' || (value !== false && isStale(query, options))\n  }\n  return false\n}\n\nfunction shouldFetchOptionally(\n  query: Query<any, any, any, any>,\n  prevQuery: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  prevOptions: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    (query !== prevQuery ||\n      resolveEnabled(prevOptions.enabled, query) === false) &&\n    (!options.suspense || query.state.status !== 'error') &&\n    isStale(query, options)\n  )\n}\n\nfunction isStale(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    resolveEnabled(options.enabled, query) !== false &&\n    query.isStaleByTime(resolveStaleTime(options.staleTime, query))\n  )\n}\n\n// this function would decide if we will update the observer's 'current'\n// properties after an optimistic reading via getOptimisticResult\nfunction shouldAssignObserverCurrentProperties<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  observer: QueryObserver<TQueryFnData, TError, TData, TQueryData, TQueryKey>,\n  optimisticResult: QueryObserverResult<TData, TError>,\n) {\n  // if the newly created result isn't what the observer is holding as current,\n  // then we'll need to update the properties as well\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true\n  }\n\n  // basically, just keep previous properties if nothing changed\n  return false\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2093, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/MatchDay/node_modules/%40tanstack/react-query/src/QueryErrorResetBoundary.tsx"],"sourcesContent":["'use client'\nimport * as React from 'react'\n\n// CONTEXT\nexport type QueryErrorResetFunction = () => void\nexport type QueryErrorIsResetFunction = () => boolean\nexport type QueryErrorClearResetFunction = () => void\n\nexport interface QueryErrorResetBoundaryValue {\n  clearReset: QueryErrorClearResetFunction\n  isReset: QueryErrorIsResetFunction\n  reset: QueryErrorResetFunction\n}\n\nfunction createValue(): QueryErrorResetBoundaryValue {\n  let isReset = false\n  return {\n    clearReset: () => {\n      isReset = false\n    },\n    reset: () => {\n      isReset = true\n    },\n    isReset: () => {\n      return isReset\n    },\n  }\n}\n\nconst QueryErrorResetBoundaryContext = React.createContext(createValue())\n\n// HOOK\n\nexport const useQueryErrorResetBoundary = () =>\n  React.useContext(QueryErrorResetBoundaryContext)\n\n// COMPONENT\n\nexport type QueryErrorResetBoundaryFunction = (\n  value: QueryErrorResetBoundaryValue,\n) => React.ReactNode\n\nexport interface QueryErrorResetBoundaryProps {\n  children: QueryErrorResetBoundaryFunction | React.ReactNode\n}\n\nexport const QueryErrorResetBoundary = ({\n  children,\n}: QueryErrorResetBoundaryProps) => {\n  const [value] = React.useState(() => createValue())\n  return (\n    <QueryErrorResetBoundaryContext.Provider value={value}>\n      {typeof children === 'function' ? children(value) : children}\n    </QueryErrorResetBoundaryContext.Provider>\n  )\n}\n"],"names":[],"mappings":";;;;;AACA,YAAY,WAAW;AAkDnB;;;;AArCJ,SAAS,cAA4C;IACnD,IAAI,UAAU;IACd,OAAO;QACL,YAAY,MAAM;YAChB,UAAU;QACZ;QACA,OAAO,MAAM;YACX,UAAU;QACZ;QACA,SAAS,MAAM;YACb,OAAO;QACT;IACF;AACF;AAEA,IAAM,uOAAuC,gBAAA,CAAc,YAAY,CAAC;AAIjE,IAAM,6BAA6B,0MAClC,aAAA,CAAW,8BAA8B;AAY1C,IAAM,0BAA0B,CAAC,EACtC,QAAA,EACF,KAAoC;IAClC,MAAM,CAAC,KAAK,CAAA,yMAAU,WAAA,CAAS,IAAM,YAAY,CAAC;IAClD,OACE,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,+BAA+B,QAAA,EAA/B;QAAwC;QACtC,UAAA,OAAO,aAAa,aAAa,SAAS,KAAK,IAAI;IAAA,CACtD;AAEJ","debugId":null}},
    {"offset": {"line": 2132, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/MatchDay/node_modules/%40tanstack/react-query/src/errorBoundaryUtils.ts"],"sourcesContent":["'use client'\nimport * as React from 'react'\nimport { shouldThrowError } from '@tanstack/query-core'\nimport type {\n  DefaultedQueryObserverOptions,\n  Query,\n  QueryKey,\n  QueryObserverResult,\n  ThrowOnError,\n} from '@tanstack/query-core'\nimport type { QueryErrorResetBoundaryValue } from './QueryErrorResetBoundary'\n\nexport const ensurePreventErrorBoundaryRetry = <\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) => {\n  if (\n    options.suspense ||\n    options.throwOnError ||\n    options.experimental_prefetchInRender\n  ) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false\n    }\n  }\n}\n\nexport const useClearResetErrorBoundary = (\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset()\n  }, [errorResetBoundary])\n}\n\nexport const getHasError = <\n  TData,\n  TError,\n  TQueryFnData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query,\n  suspense,\n}: {\n  result: QueryObserverResult<TData, TError>\n  errorResetBoundary: QueryErrorResetBoundaryValue\n  throwOnError: ThrowOnError<TQueryFnData, TError, TQueryData, TQueryKey>\n  query: Query<TQueryFnData, TError, TQueryData, TQueryKey> | undefined\n  suspense: boolean | undefined\n}) => {\n  return (\n    result.isError &&\n    !errorResetBoundary.isReset() &&\n    !result.isFetching &&\n    query &&\n    ((suspense && result.data === undefined) ||\n      shouldThrowError(throwOnError, [result.error, query]))\n  )\n}\n"],"names":[],"mappings":";;;;;;AACA,YAAY,WAAW;AACvB,SAAS,wBAAwB;;;;AAU1B,IAAM,kCAAkC,CAO7C,SAOA,uBACG;IACH,IACE,QAAQ,QAAA,IACR,QAAQ,YAAA,IACR,QAAQ,6BAAA,EACR;QAEA,IAAI,CAAC,mBAAmB,OAAA,CAAQ,GAAG;YACjC,QAAQ,YAAA,GAAe;QACzB;IACF;AACF;AAEO,IAAM,6BAA6B,CACxC,uBACG;0MACG,YAAA,CAAU,MAAM;QACpB,mBAAmB,UAAA,CAAW;IAChC,GAAG;QAAC,kBAAkB;KAAC;AACzB;AAEO,IAAM,cAAc,CAMzB,EACA,MAAA,EACA,kBAAA,EACA,YAAA,EACA,KAAA,EACA,QAAA,EACF,KAMM;IACJ,OACE,OAAO,OAAA,IACP,CAAC,mBAAmB,OAAA,CAAQ,KAC5B,CAAC,OAAO,UAAA,IACR,SAAA,CACE,YAAY,OAAO,IAAA,KAAS,KAAA,iLAC5B,mBAAA,EAAiB,cAAc;QAAC,OAAO,KAAA;QAAO,KAAK;KAAC,CAAA;AAE1D","debugId":null}},
    {"offset": {"line": 2169, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/MatchDay/node_modules/%40tanstack/react-query/src/IsRestoringProvider.ts"],"sourcesContent":["'use client'\nimport * as React from 'react'\n\nconst IsRestoringContext = React.createContext(false)\n\nexport const useIsRestoring = () => React.useContext(IsRestoringContext)\nexport const IsRestoringProvider = IsRestoringContext.Provider\n"],"names":[],"mappings":";;;;;AACA,YAAY,WAAW;;;AAEvB,IAAM,2NAA2B,gBAAA,CAAc,KAAK;AAE7C,IAAM,iBAAiB,0MAAY,aAAA,CAAW,kBAAkB;AAChE,IAAM,sBAAsB,mBAAmB,QAAA","debugId":null}},
    {"offset": {"line": 2186, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/MatchDay/node_modules/%40tanstack/react-query/src/suspense.ts"],"sourcesContent":["import type {\n  DefaultError,\n  DefaultedQueryObserverOptions,\n  Query,\n  QueryKey,\n  QueryObserver,\n  QueryObserverResult,\n} from '@tanstack/query-core'\nimport type { QueryErrorResetBoundaryValue } from './QueryErrorResetBoundary'\n\nexport const defaultThrowOnError = <\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  _error: TError,\n  query: Query<TQueryFnData, TError, TData, TQueryKey>,\n) => query.state.data === undefined\n\nexport const ensureSuspenseTimers = (\n  defaultedOptions: DefaultedQueryObserverOptions<any, any, any, any, any>,\n) => {\n  if (defaultedOptions.suspense) {\n    // Handle staleTime to ensure minimum 1000ms in Suspense mode\n    // This prevents unnecessary refetching when components remount after suspending\n\n    const clamp = (value: number | 'static' | undefined) =>\n      value === 'static' ? value : Math.max(value ?? 1000, 1000)\n\n    const originalStaleTime = defaultedOptions.staleTime\n    defaultedOptions.staleTime =\n      typeof originalStaleTime === 'function'\n        ? (...args) => clamp(originalStaleTime(...args))\n        : clamp(originalStaleTime)\n\n    if (typeof defaultedOptions.gcTime === 'number') {\n      defaultedOptions.gcTime = Math.max(defaultedOptions.gcTime, 1000)\n    }\n  }\n}\n\nexport const willFetch = (\n  result: QueryObserverResult<any, any>,\n  isRestoring: boolean,\n) => result.isLoading && result.isFetching && !isRestoring\n\nexport const shouldSuspend = (\n  defaultedOptions:\n    | DefaultedQueryObserverOptions<any, any, any, any, any>\n    | undefined,\n  result: QueryObserverResult<any, any>,\n) => defaultedOptions?.suspense && result.isPending\n\nexport const fetchOptimistic = <\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  defaultedOptions: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  observer: QueryObserver<TQueryFnData, TError, TData, TQueryData, TQueryKey>,\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) =>\n  observer.fetchOptimistic(defaultedOptions).catch(() => {\n    errorResetBoundary.clearReset()\n  })\n"],"names":[],"mappings":";;;;;;;;AAUO,IAAM,sBAAsB,CAMjC,QACA,QACG,MAAM,KAAA,CAAM,IAAA,KAAS,KAAA;AAEnB,IAAM,uBAAuB,CAClC,qBACG;IACH,IAAI,iBAAiB,QAAA,EAAU;QAI7B,MAAM,QAAQ,CAAC,QACb,UAAU,WAAW,QAAQ,KAAK,GAAA,CAAI,SAAS,KAAM,GAAI;QAE3D,MAAM,oBAAoB,iBAAiB,SAAA;QAC3C,iBAAiB,SAAA,GACf,OAAO,sBAAsB,aACzB,CAAA,GAAI,OAAS,MAAM,kBAAkB,GAAG,IAAI,CAAC,IAC7C,MAAM,iBAAiB;QAE7B,IAAI,OAAO,iBAAiB,MAAA,KAAW,UAAU;YAC/C,iBAAiB,MAAA,GAAS,KAAK,GAAA,CAAI,iBAAiB,MAAA,EAAQ,GAAI;QAClE;IACF;AACF;AAEO,IAAM,YAAY,CACvB,QACA,cACG,OAAO,SAAA,IAAa,OAAO,UAAA,IAAc,CAAC;AAExC,IAAM,gBAAgB,CAC3B,kBAGA,SACG,kBAAkB,YAAY,OAAO,SAAA;AAEnC,IAAM,kBAAkB,CAO7B,kBAOA,UACA,qBAEA,SAAS,eAAA,CAAgB,gBAAgB,EAAE,KAAA,CAAM,MAAM;QACrD,mBAAmB,UAAA,CAAW;IAChC,CAAC","debugId":null}},
    {"offset": {"line": 2216, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/MatchDay/node_modules/%40tanstack/react-query/src/useBaseQuery.ts"],"sourcesContent":["'use client'\nimport * as React from 'react'\n\nimport { isServer, noop, notifyManager } from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary'\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary,\n} from './errorBoundaryUtils'\nimport { useIsRestoring } from './IsRestoringProvider'\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch,\n} from './suspense'\nimport type {\n  QueryClient,\n  QueryKey,\n  QueryObserver,\n  QueryObserverResult,\n} from '@tanstack/query-core'\nimport type { UseBaseQueryOptions } from './types'\n\nexport function useBaseQuery<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: UseBaseQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  Observer: typeof QueryObserver,\n  queryClient?: QueryClient,\n): QueryObserverResult<TData, TError> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof options !== 'object' || Array.isArray(options)) {\n      throw new Error(\n        'Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object',\n      )\n    }\n  }\n\n  const isRestoring = useIsRestoring()\n  const errorResetBoundary = useQueryErrorResetBoundary()\n  const client = useQueryClient(queryClient)\n  const defaultedOptions = client.defaultQueryOptions(options)\n\n  ;(client.getDefaultOptions().queries as any)?._experimental_beforeQuery?.(\n    defaultedOptions,\n  )\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!defaultedOptions.queryFn) {\n      console.error(\n        `[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`,\n      )\n    }\n  }\n\n  // Make sure results are optimistically set in fetching state before subscribing or updating options\n  defaultedOptions._optimisticResults = isRestoring\n    ? 'isRestoring'\n    : 'optimistic'\n\n  ensureSuspenseTimers(defaultedOptions)\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary)\n\n  useClearResetErrorBoundary(errorResetBoundary)\n\n  // this needs to be invoked before creating the Observer because that can create a cache entry\n  const isNewCacheEntry = !client\n    .getQueryCache()\n    .get(defaultedOptions.queryHash)\n\n  const [observer] = React.useState(\n    () =>\n      new Observer<TQueryFnData, TError, TData, TQueryData, TQueryKey>(\n        client,\n        defaultedOptions,\n      ),\n  )\n\n  // note: this must be called before useSyncExternalStore\n  const result = observer.getOptimisticResult(defaultedOptions)\n\n  const shouldSubscribe = !isRestoring && options.subscribed !== false\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = shouldSubscribe\n          ? observer.subscribe(notifyManager.batchCalls(onStoreChange))\n          : noop\n\n        // Update result to make sure we did not miss any query updates\n        // between creating the observer and subscribing to it.\n        observer.updateResult()\n\n        return unsubscribe\n      },\n      [observer, shouldSubscribe],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(defaultedOptions)\n  }, [defaultedOptions, observer])\n\n  // Handle suspense\n  if (shouldSuspend(defaultedOptions, result)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n  }\n\n  // Handle error boundary\n  if (\n    getHasError({\n      result,\n      errorResetBoundary,\n      throwOnError: defaultedOptions.throwOnError,\n      query: client\n        .getQueryCache()\n        .get<\n          TQueryFnData,\n          TError,\n          TQueryData,\n          TQueryKey\n        >(defaultedOptions.queryHash),\n      suspense: defaultedOptions.suspense,\n    })\n  ) {\n    throw result.error\n  }\n\n  ;(client.getDefaultOptions().queries as any)?._experimental_afterQuery?.(\n    defaultedOptions,\n    result,\n  )\n\n  if (\n    defaultedOptions.experimental_prefetchInRender &&\n    !isServer &&\n    willFetch(result, isRestoring)\n  ) {\n    const promise = isNewCacheEntry\n      ? // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n        fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n      : // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n        client.getQueryCache().get(defaultedOptions.queryHash)?.promise\n\n    promise?.catch(noop).finally(() => {\n      // `.updateResult()` will trigger `.#currentThenable` to finalize\n      observer.updateResult()\n    })\n  }\n\n  // Handle result property usage tracking\n  return !defaultedOptions.notifyOnChangeProps\n    ? observer.trackResult(result)\n    : result\n}\n"],"names":[],"mappings":";;;;AACA,YAAY,WAAW;AAEvB,SAAS,UAAU,MAAM,qBAAqB;;AAC9C,SAAS,sBAAsB;AAC/B,SAAS,kCAAkC;AAC3C;AAKA,SAAS,sBAAsB;AAC/B;;;;;;;;;AAcO,SAAS,aAOd,OAAA,EAOA,QAAA,EACA,WAAA,EACoC;IACpC,IAAI,QAAQ,IAAI,aAAa,WAAc;QACzC,IAAI,OAAO,YAAY,YAAY,MAAM,OAAA,CAAQ,OAAO,GAAG;YACzD,MAAM,IAAI,MACR;QAEJ;IACF;IAEA,MAAM,yMAAc,iBAAA,CAAe;IACnC,MAAM,oNAAqB,6BAAA,CAA2B;IACtD,MAAM,oMAAS,iBAAA,EAAe,WAAW;IACzC,MAAM,mBAAmB,OAAO,mBAAA,CAAoB,OAAO;IAEzD,OAAO,iBAAA,CAAkB,EAAE,OAAA,EAAiB,4BAC5C;IAGF,IAAI,QAAQ,IAAI,aAAa,WAAc;QACzC,IAAI,CAAC,iBAAiB,OAAA,EAAS;YAC7B,QAAQ,KAAA,CACN,CAAA,CAAA,EAAI,iBAAiB,SAAS,CAAA,kPAAA,CAAA;QAElC;IACF;IAGA,iBAAiB,kBAAA,GAAqB,cAClC,gBACA;IAEJ,CAAA,GAAA,2KAAA,CAAA,uBAAA,EAAqB,gBAAgB;IACrC,CAAA,GAAA,qLAAA,CAAA,kCAAA,EAAgC,kBAAkB,kBAAkB;IAEpE,CAAA,GAAA,qLAAA,CAAA,6BAAA,EAA2B,kBAAkB;IAG7C,MAAM,kBAAkB,CAAC,OACtB,aAAA,CAAc,EACd,GAAA,CAAI,iBAAiB,SAAS;IAEjC,MAAM,CAAC,QAAQ,CAAA,yMAAU,WAAA,CACvB,IACE,IAAI,SACF,QACA;IAKN,MAAM,SAAS,SAAS,mBAAA,CAAoB,gBAAgB;IAE5D,MAAM,kBAAkB,CAAC,eAAe,QAAQ,UAAA,KAAe;0MACzD,uBAAA,uMACE,cAAA,CACJ,CAAC,kBAAkB;QACjB,MAAM,cAAc,kBAChB,SAAS,SAAA,iLAAU,gBAAA,CAAc,UAAA,CAAW,aAAa,CAAC,4KAC1D,OAAA;QAIJ,SAAS,YAAA,CAAa;QAEtB,OAAO;IACT,GACA;QAAC;QAAU,eAAe;KAAA,GAE5B,IAAM,SAAS,gBAAA,CAAiB,GAChC,IAAM,SAAS,gBAAA,CAAiB;0MAG5B,YAAA,CAAU,MAAM;QACpB,SAAS,UAAA,CAAW,gBAAgB;IACtC,GAAG;QAAC;QAAkB,QAAQ;KAAC;IAG/B,KAAI,+LAAA,EAAc,kBAAkB,MAAM,GAAG;QAC3C,sLAAM,kBAAA,EAAgB,kBAAkB,UAAU,kBAAkB;IACtE;IAGA,IACE,wMAAA,EAAY;QACV;QACA;QACA,cAAc,iBAAiB,YAAA;QAC/B,OAAO,OACJ,aAAA,CAAc,EACd,GAAA,CAKC,iBAAiB,SAAS;QAC9B,UAAU,iBAAiB,QAAA;IAC7B,CAAC,GACD;QACA,MAAM,OAAO,KAAA;IACf;;IAEE,OAAO,iBAAA,CAAkB,EAAE,OAAA,EAAiB,2BAC5C,kBACA;IAGF,IACE,iBAAiB,6BAAA,IACjB,yKAAC,WAAA,oLACD,YAAA,EAAU,QAAQ,WAAW,GAC7B;QACA,MAAM,UAAU,kBAAA,2GAAA;wLAEZ,kBAAA,EAAgB,kBAAkB,UAAU,kBAAkB,IAAA,kGAAA;QAE9D,OAAO,aAAA,CAAc,EAAE,GAAA,CAAI,iBAAiB,SAAS,GAAG;QAE5D,SAAS,8KAAM,OAAI,EAAE,QAAQ,MAAM;YAEjC,SAAS,YAAA,CAAa;QACxB,CAAC;IACH;IAGA,OAAO,CAAC,iBAAiB,mBAAA,GACrB,SAAS,WAAA,CAAY,MAAM,IAC3B;AACN","debugId":null}},
    {"offset": {"line": 2304, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/MatchDay/node_modules/%40tanstack/react-query/src/useQuery.ts"],"sourcesContent":["'use client'\nimport { QueryObserver } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport type {\n  DefaultError,\n  NoInfer,\n  QueryClient,\n  QueryKey,\n} from '@tanstack/query-core'\nimport type {\n  DefinedUseQueryResult,\n  UseQueryOptions,\n  UseQueryResult,\n} from './types'\nimport type {\n  DefinedInitialDataOptions,\n  UndefinedInitialDataOptions,\n} from './queryOptions'\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: DefinedInitialDataOptions<TQueryFnData, TError, TData, TQueryKey>,\n  queryClient?: QueryClient,\n): DefinedUseQueryResult<NoInfer<TData>, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UndefinedInitialDataOptions<TQueryFnData, TError, TData, TQueryKey>,\n  queryClient?: QueryClient,\n): UseQueryResult<NoInfer<TData>, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  queryClient?: QueryClient,\n): UseQueryResult<NoInfer<TData>, TError>\n\nexport function useQuery(options: UseQueryOptions, queryClient?: QueryClient) {\n  return useBaseQuery(options, QueryObserver, queryClient)\n}\n"],"names":[],"mappings":";;;;AACA,SAAS,qBAAqB;AAC9B,SAAS,oBAAoB;;;;AA+CtB,SAAS,SAAS,OAAA,EAA0B,WAAA,EAA2B;IAC5E,2LAAO,eAAA,EAAa,yLAAS,gBAAA,EAAe,WAAW;AACzD","debugId":null}}]
}