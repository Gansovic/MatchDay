{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/packages/shared/src/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,yNAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/packages/shared/src/environment/validation.ts"],"sourcesContent":["/**\n * Environment Validation Utility for MatchDay\n * \n * Prevents database confusion by validating and clearly indicating\n * which environment (local/production) is currently active.\n */\n\nexport type Environment = 'development' | 'production' | 'test'\n\nexport interface EnvironmentConfig {\n  env: Environment\n  supabaseUrl: string\n  supabaseAnonKey: string\n  siteUrl: string\n  isDevelopment: boolean\n  isProduction: boolean\n  isLocal: boolean\n  isRemote: boolean\n  databaseType: 'local' | 'production'\n  adminAppUrl?: string\n}\n\nexport interface ValidationResult {\n  isValid: boolean\n  errors: string[]\n  warnings: string[]\n  config: EnvironmentConfig | null\n}\n\n/**\n * Validates environment configuration and returns detailed analysis\n */\nexport function validateEnvironment(): ValidationResult {\n  const errors: string[] = []\n  const warnings: string[] = []\n  \n  // Get environment variables\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\n  const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n  const siteUrl = process.env.NEXT_PUBLIC_SITE_URL\n  const adminAppUrl = process.env.NEXT_PUBLIC_ADMIN_APP_URL\n  const nodeEnv = process.env.NODE_ENV as Environment || 'development'\n  \n  // Validate required variables\n  if (!supabaseUrl) {\n    errors.push('Missing NEXT_PUBLIC_SUPABASE_URL environment variable')\n  }\n  \n  if (!supabaseAnonKey) {\n    errors.push('Missing NEXT_PUBLIC_SUPABASE_ANON_KEY environment variable')\n  }\n  \n  if (!siteUrl) {\n    errors.push('Missing NEXT_PUBLIC_SITE_URL environment variable')\n  }\n  \n  // Early return if critical variables missing\n  if (errors.length > 0) {\n    return {\n      isValid: false,\n      errors,\n      warnings,\n      config: null\n    }\n  }\n  \n  // Determine database type and environment characteristics\n  const isLocal = supabaseUrl?.includes('localhost') || supabaseUrl?.includes('127.0.0.1') || false\n  const isRemote = !isLocal\n  const isDevelopment = nodeEnv === 'development'\n  const isProduction = nodeEnv === 'production'\n  const databaseType: 'local' | 'production' = isLocal ? 'local' : 'production'\n  \n  // Validate URL format\n  try {\n    new URL(supabaseUrl!)\n  } catch {\n    errors.push(`Invalid NEXT_PUBLIC_SUPABASE_URL format: ${supabaseUrl}`)\n  }\n  \n  try {\n    new URL(siteUrl!)\n  } catch {\n    errors.push(`Invalid NEXT_PUBLIC_SITE_URL format: ${siteUrl}`)\n  }\n  \n  // Environment consistency checks\n  if (isDevelopment && isRemote) {\n    warnings.push('‚ö†Ô∏è  DEVELOPMENT mode is using PRODUCTION database - this may be intentional but verify!')\n  }\n  \n  if (isProduction && isLocal) {\n    errors.push('‚ùå PRODUCTION mode cannot use LOCAL database')\n  }\n  \n  // Database URL validation\n  if (isLocal) {\n    if (!supabaseUrl?.match(/localhost:5432\\d/)) {\n      warnings.push(`Local database URL doesn't match expected pattern (localhost:5432x): ${supabaseUrl}`)\n    }\n  } else {\n    if (!supabaseUrl?.includes('.supabase.co')) {\n      warnings.push(`Production database URL doesn't match expected Supabase pattern: ${supabaseUrl}`)\n    }\n  }\n  \n  // Create config object\n  const config: EnvironmentConfig = {\n    env: nodeEnv,\n    supabaseUrl: supabaseUrl!,\n    supabaseAnonKey: supabaseAnonKey!,\n    siteUrl: siteUrl!,\n    isDevelopment,\n    isProduction,\n    isLocal,\n    isRemote,\n    databaseType,\n    adminAppUrl\n  }\n  \n  return {\n    isValid: errors.length === 0,\n    errors,\n    warnings,\n    config\n  }\n}\n\n/**\n * Get current environment configuration (throws if invalid)\n */\nexport function getEnvironmentConfig(): EnvironmentConfig {\n  const result = validateEnvironment()\n  \n  if (!result.isValid || !result.config) {\n    throw new Error(`Invalid environment configuration:\\n${result.errors.join('\\n')}`)\n  }\n  \n  return result.config\n}\n\n/**\n * Check if current environment is safe for destructive operations\n */\nexport function isSafeForDestructiveOperations(): boolean {\n  try {\n    const config = getEnvironmentConfig()\n    return config.isDevelopment || config.isLocal\n  } catch {\n    return false\n  }\n}\n\n/**\n * Get environment display name with visual indicators\n */\nexport function getEnvironmentDisplayName(): string {\n  try {\n    const config = getEnvironmentConfig()\n    \n    if (config.isLocal) {\n      return `üü¢ LOCAL (${config.env})`\n    } else {\n      return `üî¥ PRODUCTION (${config.env})`\n    }\n  } catch {\n    return '‚ùì UNKNOWN'\n  }\n}\n\n/**\n * Get database display name with clear indicators\n */\nexport function getDatabaseDisplayName(): string {\n  try {\n    const config = getEnvironmentConfig()\n    const url = new URL(config.supabaseUrl)\n    \n    if (config.isLocal) {\n      return `üè† Local Database (${url.host})`\n    } else {\n      return `‚òÅÔ∏è  Production Database (${url.hostname})`\n    }\n  } catch {\n    return '‚ùì Unknown Database'\n  }\n}\n\n/**\n * Log environment status to console with visual formatting\n */\nexport function logEnvironmentStatus(): void {\n  const result = validateEnvironment()\n  \n  console.group('üîß Environment Configuration')\n  \n  if (result.config) {\n    const config = result.config\n    \n    console.log(`Environment: ${getEnvironmentDisplayName()}`)\n    console.log(`Database: ${getDatabaseDisplayName()}`)\n    console.log(`Site URL: ${config.siteUrl}`)\n    \n    if (config.adminAppUrl) {\n      console.log(`Admin URL: ${config.adminAppUrl}`)\n    }\n    \n    if (result.warnings.length > 0) {\n      console.group('‚ö†Ô∏è  Warnings')\n      result.warnings.forEach(warning => console.warn(warning))\n      console.groupEnd()\n    }\n  }\n  \n  if (result.errors.length > 0) {\n    console.group('‚ùå Errors')\n    result.errors.forEach(error => console.error(error))\n    console.groupEnd()\n  }\n  \n  console.groupEnd()\n}\n\n/**\n * Create environment validation middleware for Next.js\n */\nexport function createEnvironmentMiddleware() {\n  return () => {\n    const result = validateEnvironment()\n    \n    if (!result.isValid) {\n      throw new Error(`Environment validation failed:\\n${result.errors.join('\\n')}`)\n    }\n    \n    // Log environment status in development\n    if (result.config?.isDevelopment) {\n      logEnvironmentStatus()\n    }\n  }\n}\n\n/**\n * Runtime environment validation (call this at app startup)\n */\nexport function validateEnvironmentAtStartup(): void {\n  try {\n    const middleware = createEnvironmentMiddleware()\n    middleware()\n    \n    const config = getEnvironmentConfig()\n    \n    // Show prominent warning for production database usage\n    if (config.isRemote && config.isDevelopment) {\n      console.warn('\\n' + '='.repeat(60))\n      console.warn('‚ö†Ô∏è  WARNING: USING PRODUCTION DATABASE IN DEVELOPMENT!')\n      console.warn(`Database: ${getDatabaseDisplayName()}`)\n      console.warn('Make sure this is intentional!')\n      console.warn('='.repeat(60) + '\\n')\n    }\n    \n  } catch (error) {\n    console.error('\\n' + '='.repeat(60))\n    console.error('‚ùå ENVIRONMENT VALIDATION FAILED!')\n    console.error(error instanceof Error ? error.message : String(error))\n    console.error('='.repeat(60) + '\\n')\n    throw error\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/packages/shared/src/index.ts"],"sourcesContent":["/**\n * @matchday/shared\n *\n * Shared utilities and helpers for MatchDay monorepo\n */\n\nexport * from './utils';\nexport * from './environment/validation';\n"],"names":[],"mappings":"AAAA;;;;CAIC;AAED;AACA","debugId":null}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/apps/player/src/lib/supabase/client.ts"],"sourcesContent":["/**\n * Supabase Client Configuration for MatchDay\n * \n * Proper Next.js 15 App Router + Supabase Cloud integration using @supabase/ssr\n * Handles client-side, server-side, and SSR authentication consistently\n * \n * Includes environment validation to prevent database confusion\n */\n\nimport { createBrowserClient } from '@supabase/ssr'\nimport { Database } from '@matchday/database'\nimport { validateEnvironmentAtStartup, getEnvironmentConfig } from '@matchday/shared'\n\n// Validate environment at startup to prevent database confusion\nvalidateEnvironmentAtStartup()\n\n// Get validated environment configuration\nconst envConfig = getEnvironmentConfig()\nconst { supabaseUrl, supabaseAnonKey } = envConfig\n\n/**\n * Supabase client for Client Components\n * \n * Uses @supabase/ssr for proper SSR support and Supabase Cloud compatibility.\n * Automatically handles authentication state with cookies for SSR consistency.\n */\nexport const supabase = createBrowserClient<Database>(\n  supabaseUrl,\n  supabaseAnonKey,\n  {\n    cookieOptions: {\n      name: 'matchday-auth',\n      lifetime: 60 * 60 * 24 * 7, // 7 days\n      domain: undefined,\n      path: '/',\n      sameSite: 'lax',\n    },\n  }\n)\n\n/**\n * Type-safe helper for getting the current user\n */\nexport async function getCurrentUser() {\n  try {\n    const { data: { user }, error } = await supabase.auth.getUser()\n    \n    if (error) {\n      console.error('Error getting current user:', error)\n      return null\n    }\n    \n    return user\n  } catch (error) {\n    console.error('Unexpected error getting current user:', error)\n    return null\n  }\n}\n\n/**\n * Type-safe helper for getting the current session\n */\nexport async function getCurrentSession() {\n  try {\n    const { data: { session }, error } = await supabase.auth.getSession()\n    \n    if (error) {\n      console.error('Error getting current session:', error)\n      return null\n    }\n    \n    return session\n  } catch (error) {\n    console.error('Unexpected error getting current session:', error)\n    return null\n  }\n}\n\n/**\n * Utility function to handle Supabase auth redirects\n */\nexport function getAuthRedirectUrl(path: string = '/dashboard') {\n  const baseUrl = process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000'\n  return `${baseUrl}${path}`\n}\n\n/**\n * Cookie management utilities for authentication recovery\n */\nexport function clearAuthCookies() {\n  if (typeof document === 'undefined') return\n\n  // Clear all Supabase auth cookies\n  const cookieNames = [\n    'matchday-auth',\n    'sb-access-token',\n    'sb-refresh-token',\n    'supabase-auth-token',\n    'supabase.auth.token'\n  ]\n\n  cookieNames.forEach(cookieName => {\n    // Clear cookie with various path and domain combinations\n    const clearCookie = (domain?: string, path: string = '/') => {\n      let cookieString = `${cookieName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=${path};`\n      if (domain) cookieString += ` domain=${domain};`\n      document.cookie = cookieString\n    }\n\n    // Clear with different path/domain combinations\n    clearCookie()\n    clearCookie(undefined, '/')\n    clearCookie(window.location.hostname)\n    clearCookie(`.${window.location.hostname}`)\n  })\n\n  // Also clear localStorage auth items\n  if (typeof localStorage !== 'undefined') {\n    const keys = Object.keys(localStorage)\n    keys.forEach(key => {\n      if (key.includes('supabase') || key.includes('auth')) {\n        localStorage.removeItem(key)\n      }\n    })\n  }\n\n  console.log('üßπ Cleared all authentication cookies and localStorage')\n}\n\n/**\n * Detect if a session has an invalid JWT token\n */\nexport function isInvalidJWTError(error: any): boolean {\n  if (!error) return false\n  \n  const message = error.message || error.toString()\n  return message.includes('invalid JWT') || \n         message.includes('signature is invalid') ||\n         message.includes('unable to parse or verify signature')\n}\n\n/**\n * Validate session health - checks if the session is usable\n */\nexport async function validateSessionHealth(session: any): Promise<boolean> {\n  if (!session?.access_token) return false\n  \n  try {\n    // Try a simple authenticated request to validate the token\n    const { data, error } = await supabase.auth.getUser()\n    \n    if (error && isInvalidJWTError(error)) {\n      console.log('üö® Session health check failed: Invalid JWT detected')\n      return false\n    }\n    \n    return !error && !!data.user\n  } catch (error) {\n    if (isInvalidJWTError(error)) {\n      console.log('üö® Session health check failed: Invalid JWT detected')\n      return false\n    }\n    return false\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 441, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/packages/auth/src/auth.service.ts"],"sourcesContent":["/**\n * Authentication Service for MatchDay\n * \n * Handles user authentication and session management following LEVER principles.\n * Integrates with Supabase Auth and manages user profiles automatically.\n * \n * @example\n * ```typescript\n * const { user, session } = await AuthService.getInstance().signInWithEmail(email, password);\n * await AuthService.getInstance().signOut();\n * ```\n * \n * This service should be used for ALL authentication operations.\n */\n\nimport { User, Session, AuthError } from '@supabase/supabase-js';\nimport { EdgeFunctionsService } from '../services/edge-functions.service';\n\nexport interface AuthUser extends User {\n  profile?: {\n    display_name: string;\n    avatar_url?: string;\n    preferred_position?: string;\n    bio?: string;\n    date_of_birth?: string;\n    location?: string;\n  };\n}\n\nexport interface AuthSession extends Session {\n  user: AuthUser;\n}\n\nexport interface SignUpData {\n  email: string;\n  password: string;\n  displayName: string;\n  preferredPosition?: string;\n  location?: string;\n}\n\nexport interface SignInData {\n  email: string;\n  password: string;\n}\n\nexport class AuthService {\n  private static instance: AuthService;\n  private supabase: any;\n  private currentUser: AuthUser | null = null;\n  private currentSession: AuthSession | null = null;\n  private listeners: Array<(user: AuthUser | null) => void> = [];\n  \n  private constructor() {}\n  \n  static getInstance(): AuthService {\n    if (!AuthService.instance) {\n      AuthService.instance = new AuthService();\n    }\n    return AuthService.instance;\n  }\n  \n  setSupabaseClient(client: any) {\n    this.supabase = client;\n    this.initializeAuthListener();\n  }\n  \n  private async initializeAuthListener() {\n    // Listen for auth state changes\n    this.supabase.auth.onAuthStateChange(async (event: string, session: Session | null) => {\n      if (session?.user) {\n        // Fetch user profile\n        const userWithProfile = await this.enrichUserWithProfile(session.user);\n        this.currentUser = userWithProfile;\n        this.currentSession = { ...session, user: userWithProfile } as AuthSession;\n      } else {\n        this.currentUser = null;\n        this.currentSession = null;\n      }\n      \n      // Notify listeners\n      this.listeners.forEach(listener => listener(this.currentUser));\n    });\n    \n    // Get initial session\n    const { data: { session } } = await this.supabase.auth.getSession();\n    if (session?.user) {\n      const userWithProfile = await this.enrichUserWithProfile(session.user);\n      this.currentUser = userWithProfile;\n      this.currentSession = { ...session, user: userWithProfile } as AuthSession;\n    }\n  }\n  \n  private async enrichUserWithProfile(user: User): Promise<AuthUser> {\n    try {\n      const { data: profile } = await this.supabase\n        .from('users')\n        .select('*')\n        .eq('id', user.id)\n        .single();\n      \n      return {\n        ...user,\n        profile: profile || undefined\n      };\n    } catch (error) {\n      console.warn('Failed to fetch user profile:', error);\n      return user as AuthUser;\n    }\n  }\n  \n  /**\n   * Sign up new user with automatic profile creation\n   */\n  async signUp(data: SignUpData): Promise<{\n    user: AuthUser | null;\n    session: AuthSession | null;\n    error: AuthError | null;\n  }> {\n    try {\n      const { data: authData, error: authError } = await this.supabase.auth.signUp({\n        email: data.email,\n        password: data.password\n      });\n      \n      if (authError) {\n        return { user: null, session: null, error: authError };\n      }\n      \n      if (authData.user) {\n        // Create user profile via Edge Function to ensure proper validation and audit logging\n        const profileResult = await EdgeFunctionsService.getInstance().updateUserProfile({\n          display_name: data.displayName,\n          preferred_position: data.preferredPosition,\n          location: data.location\n        });\n        \n        if (!profileResult.success) {\n          console.warn('Failed to create user profile:', profileResult.error);\n        }\n        \n        const enrichedUser = await this.enrichUserWithProfile(authData.user);\n        const enrichedSession = authData.session ? \n          { ...authData.session, user: enrichedUser } as AuthSession : null;\n        \n        return {\n          user: enrichedUser,\n          session: enrichedSession,\n          error: null\n        };\n      }\n      \n      return { user: null, session: null, error: null };\n    } catch (error) {\n      return {\n        user: null,\n        session: null,\n        error: error as AuthError\n      };\n    }\n  }\n  \n  /**\n   * Sign in existing user\n   */\n  async signIn(data: SignInData): Promise<{\n    user: AuthUser | null;\n    session: AuthSession | null;\n    error: AuthError | null;\n  }> {\n    try {\n      const { data: authData, error } = await this.supabase.auth.signInWithPassword({\n        email: data.email,\n        password: data.password\n      });\n      \n      if (error) {\n        return { user: null, session: null, error };\n      }\n      \n      if (authData.user) {\n        const enrichedUser = await this.enrichUserWithProfile(authData.user);\n        const enrichedSession = { ...authData.session, user: enrichedUser } as AuthSession;\n        \n        return {\n          user: enrichedUser,\n          session: enrichedSession,\n          error: null\n        };\n      }\n      \n      return { user: null, session: null, error: null };\n    } catch (error) {\n      return {\n        user: null,\n        session: null,\n        error: error as AuthError\n      };\n    }\n  }\n  \n  /**\n   * Sign in with OAuth providers (Google, etc.)\n   */\n  async signInWithOAuth(provider: 'google' | 'github' | 'discord'): Promise<{\n    error: AuthError | null;\n  }> {\n    try {\n      const { error } = await this.supabase.auth.signInWithOAuth({\n        provider,\n        options: {\n          redirectTo: `${window.location.origin}/auth/callback`\n        }\n      });\n      \n      return { error };\n    } catch (error) {\n      return { error: error as AuthError };\n    }\n  }\n  \n  /**\n   * Sign out current user\n   */\n  async signOut(): Promise<{ error: AuthError | null }> {\n    try {\n      const { error } = await this.supabase.auth.signOut();\n      return { error };\n    } catch (error) {\n      return { error: error as AuthError };\n    }\n  }\n  \n  /**\n   * Reset password\n   */\n  async resetPassword(email: string): Promise<{ error: AuthError | null }> {\n    try {\n      const { error } = await this.supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/auth/reset-password`\n      });\n      \n      return { error };\n    } catch (error) {\n      return { error: error as AuthError };\n    }\n  }\n  \n  /**\n   * Update password\n   */\n  async updatePassword(newPassword: string): Promise<{ error: AuthError | null }> {\n    try {\n      const { error } = await this.supabase.auth.updateUser({\n        password: newPassword\n      });\n      \n      return { error };\n    } catch (error) {\n      return { error: error as AuthError };\n    }\n  }\n  \n  /**\n   * Update user profile\n   */\n  async updateProfile(updates: {\n    display_name?: string;\n    avatar_url?: string;\n    preferred_position?: string;\n    bio?: string;\n    date_of_birth?: string;\n    location?: string;\n  }): Promise<{ error: Error | null }> {\n    try {\n      const result = await EdgeFunctionsService.getInstance().updateUserProfile(updates);\n      \n      if (!result.success) {\n        return { error: new Error(result.error) };\n      }\n      \n      // Refresh current user data\n      if (this.currentUser) {\n        this.currentUser = await this.enrichUserWithProfile(this.currentUser);\n        this.listeners.forEach(listener => listener(this.currentUser));\n      }\n      \n      return { error: null };\n    } catch (error) {\n      return { error: error as Error };\n    }\n  }\n  \n  /**\n   * Get current user\n   */\n  getCurrentUser(): AuthUser | null {\n    return this.currentUser;\n  }\n  \n  /**\n   * Get current session\n   */\n  getCurrentSession(): AuthSession | null {\n    return this.currentSession;\n  }\n  \n  /**\n   * Check if user is authenticated\n   */\n  isAuthenticated(): boolean {\n    return !!this.currentUser;\n  }\n  \n  /**\n   * Subscribe to auth state changes\n   */\n  onAuthStateChange(callback: (user: AuthUser | null) => void): () => void {\n    this.listeners.push(callback);\n    \n    // Return unsubscribe function\n    return () => {\n      const index = this.listeners.indexOf(callback);\n      if (index > -1) {\n        this.listeners.splice(index, 1);\n      }\n    };\n  }\n  \n  /**\n   * Require authentication - throws if not authenticated\n   */\n  requireAuth(): AuthUser {\n    if (!this.currentUser) {\n      throw new Error('Authentication required');\n    }\n    return this.currentUser;\n  }\n  \n  /**\n   * Check if user has specific permissions\n   */\n  hasPermission(permission: 'create_league' | 'manage_team' | 'admin'): boolean {\n    if (!this.currentUser) return false;\n    \n    // For now, all authenticated users can create leagues and manage teams\n    // In the future, this could be enhanced with role-based permissions\n    switch (permission) {\n      case 'create_league':\n      case 'manage_team':\n        return true;\n      case 'admin':\n        // Check if user has admin role (would be stored in user metadata or separate table)\n        return this.currentUser.user_metadata?.role === 'admin';\n      default:\n        return false;\n    }\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 756, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/packages/auth/src/validator.ts"],"sourcesContent":["/**\n * Centralized Authentication Validator\n * \n * Single source of truth for authentication validation across the application.\n * Provides consistent validation logic for both client and server-side usage.\n */\n\nimport { Session } from '@supabase/supabase-js';\nimport { supabase, isInvalidJWTError } from '@/lib/supabase/client';\n\nexport interface AuthValidationResult {\n  isValid: boolean;\n  status: 'healthy' | 'invalid_token' | 'no_session' | 'expired' | 'validation_failed';\n  session: Session | null;\n  user: any | null;\n  reason?: string;\n  shouldClearCookies: boolean;\n  shouldRedirectToLogin: boolean;\n  action: 'none' | 'clear_cookies' | 'refresh_token' | 'redirect_login' | 'retry';\n}\n\n/**\n * Comprehensive authentication state validation\n */\nexport async function validateAuthenticationState(): Promise<AuthValidationResult> {\n  try {\n    console.log('üîç Validating authentication state...');\n    \n    // Step 1: Check if we have a session\n    const { data: { session }, error: sessionError } = await supabase.auth.getSession();\n    \n    if (sessionError) {\n      console.log('üîç Session error:', sessionError.message);\n      \n      if (isInvalidJWTError(sessionError)) {\n        return {\n          isValid: false,\n          status: 'invalid_token',\n          session: null,\n          user: null,\n          reason: sessionError.message,\n          shouldClearCookies: true,\n          shouldRedirectToLogin: true,\n          action: 'clear_cookies'\n        };\n      }\n      \n      return {\n        isValid: false,\n        status: 'validation_failed',\n        session: null,\n        user: null,\n        reason: sessionError.message,\n        shouldClearCookies: false,\n        shouldRedirectToLogin: false,\n        action: 'retry'\n      };\n    }\n    \n    if (!session) {\n      console.log('üîç No session found');\n      return {\n        isValid: false,\n        status: 'no_session',\n        session: null,\n        user: null,\n        shouldClearCookies: false,\n        shouldRedirectToLogin: true,\n        action: 'redirect_login'\n      };\n    }\n    \n    // Step 2: Check token expiry\n    const now = Math.floor(Date.now() / 1000);\n    const expiresAt = session.expires_at || 0;\n    \n    if (expiresAt <= now) {\n      console.log('üîç Token expired');\n      return {\n        isValid: false,\n        status: 'expired',\n        session,\n        user: session.user,\n        reason: 'Token has expired',\n        shouldClearCookies: false,\n        shouldRedirectToLogin: false,\n        action: 'refresh_token'\n      };\n    }\n    \n    // Step 3: Validate token with server (optional during initialization)\n    try {\n      // Add timeout and error handling to prevent blocking initialization\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 3000); // 3 second timeout\n      \n      const healthResponse = await fetch('/api/auth/health', {\n        credentials: 'include',\n        headers: {\n          'Authorization': `Bearer ${session.access_token}`\n        },\n        signal: controller.signal\n      });\n      \n      clearTimeout(timeoutId);\n      \n      if (!healthResponse.ok) {\n        const healthData = await healthResponse.json();\n        console.log('üîç Health check failed:', healthData.status);\n        \n        return {\n          isValid: false,\n          status: healthData.status === 'INVALID_TOKEN' ? 'invalid_token' : 'validation_failed',\n          session,\n          user: session.user,\n          reason: healthData.message,\n          shouldClearCookies: healthData.action === 'CLEAR_COOKIES_AND_REAUTH',\n          shouldRedirectToLogin: healthData.action !== 'RETRY_OR_REAUTH',\n          action: healthData.action === 'CLEAR_COOKIES_AND_REAUTH' ? 'clear_cookies' : 'retry'\n        };\n      }\n      \n      const healthData = await healthResponse.json();\n      console.log('üîç Authentication state is healthy');\n      \n      return {\n        isValid: true,\n        status: 'healthy',\n        session,\n        user: session.user,\n        shouldClearCookies: false,\n        shouldRedirectToLogin: false,\n        action: 'none'\n      };\n      \n    } catch (healthError) {\n      console.log('üîç Health check request failed (gracefully degrading):', healthError);\n      \n      // Graceful degradation: If health check fails during initialization,\n      // assume the session is valid if it passes local validation\n      // This prevents circular dependency issues during app startup\n      if (healthError.name === 'AbortError') {\n        console.log('üîç Health check timed out - assuming valid session for now');\n      } else if (healthError.message?.includes('fetch')) {\n        console.log('üîç Health endpoint not available - assuming valid session for now');\n      }\n      \n      // Fall back to local validation only\n      return {\n        isValid: true, // Assume valid if local checks passed\n        status: 'healthy',\n        session,\n        user: session.user,\n        shouldClearCookies: false,\n        shouldRedirectToLogin: false,\n        action: 'none'\n      };\n    }\n    \n  } catch (error) {\n    console.error('üîç Authentication validation error:', error);\n    \n    return {\n      isValid: false,\n      status: 'validation_failed',\n      session: null,\n      user: null,\n      reason: error instanceof Error ? error.message : 'Unknown validation error',\n      shouldClearCookies: false,\n      shouldRedirectToLogin: false,\n      action: 'retry'\n    };\n  }\n}\n\n/**\n * Quick session health check (lightweight)\n */\nexport async function validateSessionHealth(session: Session | null): Promise<boolean> {\n  if (!session?.access_token) return false;\n  \n  try {\n    // Check token expiry first (local check, no network)\n    const now = Math.floor(Date.now() / 1000);\n    const expiresAt = session.expires_at || 0;\n    \n    if (expiresAt <= now) {\n      console.log('üîç Token expired (local check)');\n      return false;\n    }\n    \n    // Validate with server\n    const { data, error } = await supabase.auth.getUser();\n    \n    if (error && isInvalidJWTError(error)) {\n      console.log('üîç Invalid JWT detected in health check');\n      return false;\n    }\n    \n    return !error && !!data.user;\n  } catch (error) {\n    if (isInvalidJWTError(error)) {\n      console.log('üîç Invalid JWT detected in health check (catch)');\n      return false;\n    }\n    return false;\n  }\n}\n\n/**\n * Check if token is about to expire (within 2 minutes)\n */\nexport function isTokenNearExpiry(session: Session | null): boolean {\n  if (!session?.expires_at) return false;\n  \n  const now = Math.floor(Date.now() / 1000);\n  const expiresAt = session.expires_at;\n  const twoMinutes = 2 * 60;\n  \n  return (expiresAt - now) <= twoMinutes;\n}\n\n/**\n * Attempt to refresh the current session\n */\nexport async function refreshAuthSession(): Promise<{ success: boolean; session: Session | null; error?: string }> {\n  try {\n    console.log('üîÑ Attempting to refresh auth session...');\n    \n    const { data, error } = await supabase.auth.refreshSession();\n    \n    if (error) {\n      console.log('üîÑ Session refresh failed:', error.message);\n      return { success: false, session: null, error: error.message };\n    }\n    \n    console.log('üîÑ Session refreshed successfully');\n    return { success: true, session: data.session };\n    \n  } catch (error) {\n    console.log('üîÑ Session refresh error:', error);\n    return { \n      success: false, \n      session: null, \n      error: error instanceof Error ? error.message : 'Unknown refresh error' \n    };\n  }\n}"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;;;AAGD;;AAgBO,eAAe;IACpB,IAAI;QACF,QAAQ,GAAG,CAAC;QAEZ,qCAAqC;QACrC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,OAAO,YAAY,EAAE,GAAG,MAAM,kJAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,UAAU;QAEjF,IAAI,cAAc;YAChB,QAAQ,GAAG,CAAC,qBAAqB,aAAa,OAAO;YAErD,IAAI,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE,eAAe;gBACnC,OAAO;oBACL,SAAS;oBACT,QAAQ;oBACR,SAAS;oBACT,MAAM;oBACN,QAAQ,aAAa,OAAO;oBAC5B,oBAAoB;oBACpB,uBAAuB;oBACvB,QAAQ;gBACV;YACF;YAEA,OAAO;gBACL,SAAS;gBACT,QAAQ;gBACR,SAAS;gBACT,MAAM;gBACN,QAAQ,aAAa,OAAO;gBAC5B,oBAAoB;gBACpB,uBAAuB;gBACvB,QAAQ;YACV;QACF;QAEA,IAAI,CAAC,SAAS;YACZ,QAAQ,GAAG,CAAC;YACZ,OAAO;gBACL,SAAS;gBACT,QAAQ;gBACR,SAAS;gBACT,MAAM;gBACN,oBAAoB;gBACpB,uBAAuB;gBACvB,QAAQ;YACV;QACF;QAEA,6BAA6B;QAC7B,MAAM,MAAM,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK;QACpC,MAAM,YAAY,QAAQ,UAAU,IAAI;QAExC,IAAI,aAAa,KAAK;YACpB,QAAQ,GAAG,CAAC;YACZ,OAAO;gBACL,SAAS;gBACT,QAAQ;gBACR;gBACA,MAAM,QAAQ,IAAI;gBAClB,QAAQ;gBACR,oBAAoB;gBACpB,uBAAuB;gBACvB,QAAQ;YACV;QACF;QAEA,sEAAsE;QACtE,IAAI;YACF,oEAAoE;YACpE,MAAM,aAAa,IAAI;YACvB,MAAM,YAAY,WAAW,IAAM,WAAW,KAAK,IAAI,OAAO,mBAAmB;YAEjF,MAAM,iBAAiB,MAAM,MAAM,oBAAoB;gBACrD,aAAa;gBACb,SAAS;oBACP,iBAAiB,CAAC,OAAO,EAAE,QAAQ,YAAY,EAAE;gBACnD;gBACA,QAAQ,WAAW,MAAM;YAC3B;YAEA,aAAa;YAEb,IAAI,CAAC,eAAe,EAAE,EAAE;gBACtB,MAAM,aAAa,MAAM,eAAe,IAAI;gBAC5C,QAAQ,GAAG,CAAC,2BAA2B,WAAW,MAAM;gBAExD,OAAO;oBACL,SAAS;oBACT,QAAQ,WAAW,MAAM,KAAK,kBAAkB,kBAAkB;oBAClE;oBACA,MAAM,QAAQ,IAAI;oBAClB,QAAQ,WAAW,OAAO;oBAC1B,oBAAoB,WAAW,MAAM,KAAK;oBAC1C,uBAAuB,WAAW,MAAM,KAAK;oBAC7C,QAAQ,WAAW,MAAM,KAAK,6BAA6B,kBAAkB;gBAC/E;YACF;YAEA,MAAM,aAAa,MAAM,eAAe,IAAI;YAC5C,QAAQ,GAAG,CAAC;YAEZ,OAAO;gBACL,SAAS;gBACT,QAAQ;gBACR;gBACA,MAAM,QAAQ,IAAI;gBAClB,oBAAoB;gBACpB,uBAAuB;gBACvB,QAAQ;YACV;QAEF,EAAE,OAAO,aAAa;YACpB,QAAQ,GAAG,CAAC,0DAA0D;YAEtE,qEAAqE;YACrE,4DAA4D;YAC5D,8DAA8D;YAC9D,IAAI,YAAY,IAAI,KAAK,cAAc;gBACrC,QAAQ,GAAG,CAAC;YACd,OAAO,IAAI,YAAY,OAAO,EAAE,SAAS,UAAU;gBACjD,QAAQ,GAAG,CAAC;YACd;YAEA,qCAAqC;YACrC,OAAO;gBACL,SAAS;gBACT,QAAQ;gBACR;gBACA,MAAM,QAAQ,IAAI;gBAClB,oBAAoB;gBACpB,uBAAuB;gBACvB,QAAQ;YACV;QACF;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uCAAuC;QAErD,OAAO;YACL,SAAS;YACT,QAAQ;YACR,SAAS;YACT,MAAM;YACN,QAAQ,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YACjD,oBAAoB;YACpB,uBAAuB;YACvB,QAAQ;QACV;IACF;AACF;AAKO,eAAe,sBAAsB,OAAuB;IACjE,IAAI,CAAC,SAAS,cAAc,OAAO;IAEnC,IAAI;QACF,qDAAqD;QACrD,MAAM,MAAM,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK;QACpC,MAAM,YAAY,QAAQ,UAAU,IAAI;QAExC,IAAI,aAAa,KAAK;YACpB,QAAQ,GAAG,CAAC;YACZ,OAAO;QACT;QAEA,uBAAuB;QACvB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,kJAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,OAAO;QAEnD,IAAI,SAAS,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE,QAAQ;YACrC,QAAQ,GAAG,CAAC;YACZ,OAAO;QACT;QAEA,OAAO,CAAC,SAAS,CAAC,CAAC,KAAK,IAAI;IAC9B,EAAE,OAAO,OAAO;QACd,IAAI,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE,QAAQ;YAC5B,QAAQ,GAAG,CAAC;YACZ,OAAO;QACT;QACA,OAAO;IACT;AACF;AAKO,SAAS,kBAAkB,OAAuB;IACvD,IAAI,CAAC,SAAS,YAAY,OAAO;IAEjC,MAAM,MAAM,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK;IACpC,MAAM,YAAY,QAAQ,UAAU;IACpC,MAAM,aAAa,IAAI;IAEvB,OAAO,AAAC,YAAY,OAAQ;AAC9B;AAKO,eAAe;IACpB,IAAI;QACF,QAAQ,GAAG,CAAC;QAEZ,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,kJAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,cAAc;QAE1D,IAAI,OAAO;YACT,QAAQ,GAAG,CAAC,8BAA8B,MAAM,OAAO;YACvD,OAAO;gBAAE,SAAS;gBAAO,SAAS;gBAAM,OAAO,MAAM,OAAO;YAAC;QAC/D;QAEA,QAAQ,GAAG,CAAC;QACZ,OAAO;YAAE,SAAS;YAAM,SAAS,KAAK,OAAO;QAAC;IAEhD,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC,6BAA6B;QACzC,OAAO;YACL,SAAS;YACT,SAAS;YACT,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAClD;IACF;AACF","debugId":null}},
    {"offset": {"line": 970, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/apps/player/src/lib/supabase/server-client.ts"],"sourcesContent":["/**\n * Server-side Supabase client utilities for MatchDay\n * \n * Proper Next.js 15 App Router + Supabase Cloud server-side authentication\n * Uses @supabase/ssr for consistent cookie-based authentication\n */\n\nimport { createServerClient } from '@supabase/ssr'\nimport { NextRequest, NextResponse } from 'next/server'\nimport { cookies } from 'next/headers'\nimport { Database } from '@matchday/database'\n\n/**\n * Create a Supabase client for Server Components and API Routes\n * \n * Uses cookies for authentication state, consistent with browser client.\n * This ensures proper SSR and authentication across client/server boundary.\n */\nexport async function createServerSupabaseClient() {\n  const cookieStore = await cookies()\n\n  return createServerClient<Database>(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll()\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) =>\n              cookieStore.set(name, value, options)\n            )\n          } catch {\n            // The `setAll` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n      },\n      cookieOptions: {\n        name: 'matchday-auth',\n        lifetime: 60 * 60 * 24 * 7, // 7 days\n        domain: undefined,\n        path: '/',\n        sameSite: 'lax',\n      },\n    }\n  )\n}\n\n/**\n * Create a Supabase client for API Routes with request/response handling\n * \n * This version can modify cookies in the response, necessary for auth operations\n * like login/logout in API routes.\n */\nexport function createUserSupabaseClient(request: NextRequest, response?: NextResponse) {\n  return createServerClient<Database>(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return request.cookies.getAll()\n        },\n        setAll(cookiesToSet) {\n          // Set cookies in the response if available\n          if (response) {\n            cookiesToSet.forEach(({ name, value, options }) => {\n              response.cookies.set(name, value, options)\n            })\n          }\n          // Also set in request for immediate use\n          cookiesToSet.forEach(({ name, value }) => {\n            request.cookies.set(name, value)\n          })\n        },\n      },\n      cookieOptions: {\n        name: 'matchday-auth',\n        lifetime: 60 * 60 * 24 * 7, // 7 days\n        domain: undefined,\n        path: '/',\n        sameSite: 'lax',\n      },\n    }\n  )\n}\n\n/**\n * Create an admin client with service role for elevated operations\n * \n * WARNING: Only use this in secure server-side contexts (API routes, server actions)\n * Never expose the service role key to the client!\n */\nexport function createAdminSupabaseClient() {\n  const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY\n  \n  if (!supabaseServiceKey) {\n    throw new Error('Missing SUPABASE_SERVICE_ROLE_KEY environment variable')\n  }\n  \n  return createServerClient<Database>(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    supabaseServiceKey,\n    {\n      cookies: {\n        getAll() {\n          return []\n        },\n        setAll() {\n          // Admin client doesn't need cookies\n        },\n      },\n      auth: {\n        persistSession: false,\n        autoRefreshToken: false,\n      },\n    }\n  )\n}\n\n/**\n * Get authenticated user from server-side context\n * \n * Returns the user if authenticated, null otherwise\n */\nexport async function getServerUser() {\n  try {\n    const supabase = await createServerSupabaseClient()\n    const { data: { user }, error } = await supabase.auth.getUser()\n    \n    if (error || !user) {\n      return null\n    }\n    \n    return user\n  } catch (error) {\n    console.error('Error getting server user:', error)\n    return null\n  }\n}"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;;;AAED;AAAA;AAEA;;;AASO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,gSAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,sRAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,0DAA0D;gBAC1D,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;QACA,eAAe;YACb,MAAM;YACN,UAAU,KAAK,KAAK,KAAK;YACzB,QAAQ;YACR,MAAM;YACN,UAAU;QACZ;IACF;AAEJ;AAQO,SAAS,yBAAyB,OAAoB,EAAE,QAAuB;IACpF,OAAO,CAAA,GAAA,sRAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP;gBACE,OAAO,QAAQ,OAAO,CAAC,MAAM;YAC/B;YACA,QAAO,YAAY;gBACjB,2CAA2C;gBAC3C,IAAI,UAAU;oBACZ,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE;wBAC5C,SAAS,OAAO,CAAC,GAAG,CAAC,MAAM,OAAO;oBACpC;gBACF;gBACA,wCAAwC;gBACxC,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;oBACnC,QAAQ,OAAO,CAAC,GAAG,CAAC,MAAM;gBAC5B;YACF;QACF;QACA,eAAe;YACb,MAAM;YACN,UAAU,KAAK,KAAK,KAAK;YACzB,QAAQ;YACR,MAAM;YACN,UAAU;QACZ;IACF;AAEJ;AAQO,SAAS;IACd,MAAM,qBAAqB,QAAQ,GAAG,CAAC,yBAAyB;IAEhE,IAAI,CAAC,oBAAoB;QACvB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,CAAA,GAAA,sRAAA,CAAA,qBAAkB,AAAD,gFAEtB,oBACA;QACE,SAAS;YACP;gBACE,OAAO,EAAE;YACX;YACA;YACE,oCAAoC;YACtC;QACF;QACA,MAAM;YACJ,gBAAgB;YAChB,kBAAkB;QACpB;IACF;AAEJ;AAOO,eAAe;IACpB,IAAI;QACF,MAAM,WAAW,MAAM;QACvB,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;QAE7D,IAAI,SAAS,CAAC,MAAM;YAClB,OAAO;QACT;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 1077, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/packages/auth/src/api-auth.ts"],"sourcesContent":["/**\n * API Authentication Utilities\n * \n * Consistent authentication validation for API routes.\n * Provides unified error handling and token validation across all endpoints.\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createUserSupabaseClient } from '@/lib/supabase/server-client';\nimport { isInvalidJWTError } from '@/lib/supabase/client';\n\nexport interface AuthValidationResult {\n  success: boolean;\n  user?: {\n    id: string;\n    email: string | undefined;\n  };\n  error?: string;\n  response?: NextResponse;\n}\n\n/**\n * Validate API request authentication\n * Returns consistent authentication state for API routes\n */\nexport async function validateApiAuth(request: NextRequest): Promise<AuthValidationResult> {\n  try {\n    console.log('üîç Validating API authentication...');\n    console.log('üîç Request URL:', request.url);\n    console.log('üîç Request method:', request.method);\n    console.log('üîç Authorization header:', request.headers.get('authorization') ? 'Present' : 'Missing');\n    console.log('üîç Cookie header:', request.headers.get('cookie') ? 'Present' : 'Missing');\n    \n    // Create user-scoped Supabase client\n    const supabaseUserClient = createUserSupabaseClient(request);\n    const { data: { user }, error: userError } = await supabaseUserClient.auth.getUser();\n    \n    if (userError) {\n      console.log('üîç Authentication error:', userError.message);\n      \n      // Check for invalid JWT specifically\n      if (isInvalidJWTError(userError)) {\n        console.log('üö® Invalid JWT detected - token corrupted or expired');\n        return {\n          success: false,\n          error: 'Invalid or corrupted authentication token',\n          response: NextResponse.json({\n            error: 'Authentication failed',\n            message: 'Your session has expired or is invalid. Please sign in again.',\n            action: 'CLEAR_COOKIES_AND_REAUTH'\n          }, { \n            status: 401,\n            headers: {\n              'Clear-Site-Data': '\"cookies\", \"storage\"'\n            }\n          })\n        };\n      }\n      \n      return {\n        success: false,\n        error: userError.message,\n        response: NextResponse.json({\n          error: 'Authentication failed',\n          message: 'Please sign in to access this resource.',\n          action: 'REDIRECT_TO_LOGIN'\n        }, { status: 401 })\n      };\n    }\n    \n    if (!user) {\n      console.log('üîç No user found in session');\n      return {\n        success: false,\n        error: 'No authenticated user',\n        response: NextResponse.json({\n          error: 'Authentication required',\n          message: 'Please sign in to access this resource.',\n          action: 'REDIRECT_TO_LOGIN'\n        }, { status: 401 })\n      };\n    }\n    \n    console.log('‚úÖ API authentication successful:', user.id, user.email);\n    \n    return {\n      success: true,\n      user: {\n        id: user.id,\n        email: user.email || undefined\n      }\n    };\n    \n  } catch (error) {\n    console.error('üîç API authentication error:', error);\n    \n    // Check if this is an invalid JWT error in catch block\n    if (isInvalidJWTError(error)) {\n      return {\n        success: false,\n        error: 'Invalid JWT token',\n        response: NextResponse.json({\n          error: 'Authentication failed',\n          message: 'Your session has expired or is invalid. Please sign in again.',\n          action: 'CLEAR_COOKIES_AND_REAUTH'\n        }, { \n          status: 401,\n          headers: {\n            'Clear-Site-Data': '\"cookies\", \"storage\"'\n          }\n        })\n      };\n    }\n    \n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'Unknown authentication error',\n      response: NextResponse.json({\n        error: 'Authentication failed',\n        message: 'Unable to verify authentication. Please try again.',\n        action: 'RETRY_OR_REAUTH'\n      }, { status: 500 })\n    };\n  }\n}\n\n/**\n * Middleware-style authentication helper\n * Use this for routes that require authentication\n */\nexport async function requireAuth(\n  request: NextRequest,\n  handler: (request: NextRequest, user: { id: string; email: string | undefined }) => Promise<NextResponse>\n): Promise<NextResponse> {\n  const authResult = await validateApiAuth(request);\n  \n  if (!authResult.success) {\n    return authResult.response!;\n  }\n  \n  return handler(request, authResult.user!);\n}"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;AAED;AACA;AACA;;;;AAgBO,eAAe,gBAAgB,OAAoB;IACxD,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC,mBAAmB,QAAQ,GAAG;QAC1C,QAAQ,GAAG,CAAC,sBAAsB,QAAQ,MAAM;QAChD,QAAQ,GAAG,CAAC,4BAA4B,QAAQ,OAAO,CAAC,GAAG,CAAC,mBAAmB,YAAY;QAC3F,QAAQ,GAAG,CAAC,qBAAqB,QAAQ,OAAO,CAAC,GAAG,CAAC,YAAY,YAAY;QAE7E,qCAAqC;QACrC,MAAM,qBAAqB,CAAA,GAAA,4JAAA,CAAA,2BAAwB,AAAD,EAAE;QACpD,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,OAAO,SAAS,EAAE,GAAG,MAAM,mBAAmB,IAAI,CAAC,OAAO;QAElF,IAAI,WAAW;YACb,QAAQ,GAAG,CAAC,4BAA4B,UAAU,OAAO;YAEzD,qCAAqC;YACrC,IAAI,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE,YAAY;gBAChC,QAAQ,GAAG,CAAC;gBACZ,OAAO;oBACL,SAAS;oBACT,OAAO;oBACP,UAAU,+RAAA,CAAA,eAAY,CAAC,IAAI,CAAC;wBAC1B,OAAO;wBACP,SAAS;wBACT,QAAQ;oBACV,GAAG;wBACD,QAAQ;wBACR,SAAS;4BACP,mBAAmB;wBACrB;oBACF;gBACF;YACF;YAEA,OAAO;gBACL,SAAS;gBACT,OAAO,UAAU,OAAO;gBACxB,UAAU,+RAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBAC1B,OAAO;oBACP,SAAS;oBACT,QAAQ;gBACV,GAAG;oBAAE,QAAQ;gBAAI;YACnB;QACF;QAEA,IAAI,CAAC,MAAM;YACT,QAAQ,GAAG,CAAC;YACZ,OAAO;gBACL,SAAS;gBACT,OAAO;gBACP,UAAU,+RAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBAC1B,OAAO;oBACP,SAAS;oBACT,QAAQ;gBACV,GAAG;oBAAE,QAAQ;gBAAI;YACnB;QACF;QAEA,QAAQ,GAAG,CAAC,oCAAoC,KAAK,EAAE,EAAE,KAAK,KAAK;QAEnE,OAAO;YACL,SAAS;YACT,MAAM;gBACJ,IAAI,KAAK,EAAE;gBACX,OAAO,KAAK,KAAK,IAAI;YACvB;QACF;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAE9C,uDAAuD;QACvD,IAAI,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE,QAAQ;YAC5B,OAAO;gBACL,SAAS;gBACT,OAAO;gBACP,UAAU,+RAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBAC1B,OAAO;oBACP,SAAS;oBACT,QAAQ;gBACV,GAAG;oBACD,QAAQ;oBACR,SAAS;wBACP,mBAAmB;oBACrB;gBACF;YACF;QACF;QAEA,OAAO;YACL,SAAS;YACT,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAChD,UAAU,+RAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAC1B,OAAO;gBACP,SAAS;gBACT,QAAQ;YACV,GAAG;gBAAE,QAAQ;YAAI;QACnB;IACF;AACF;AAMO,eAAe,YACpB,OAAoB,EACpB,OAAyG;IAEzG,MAAM,aAAa,MAAM,gBAAgB;IAEzC,IAAI,CAAC,WAAW,OAAO,EAAE;QACvB,OAAO,WAAW,QAAQ;IAC5B;IAEA,OAAO,QAAQ,SAAS,WAAW,IAAI;AACzC","debugId":null}},
    {"offset": {"line": 1199, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/packages/auth/src/role.service.ts"],"sourcesContent":["/**\n * Role Service\n * \n * Handles role-based authentication and authorization across the application.\n * Provides utilities for checking user roles and permissions.\n */\n\nimport { supabase } from '@/lib/supabase/client';\nimport { UserRole } from '@/lib/types/database.types';\n\nexport interface RoleCheckResult {\n  hasAccess: boolean;\n  userRole: UserRole | null;\n  redirectTo?: string;\n}\n\nexport class RoleService {\n  /**\n   * Get the current user's role from their profile with timeout and retries\n   */\n  static async getCurrentUserRole(): Promise<UserRole | null> {\n    try {\n      console.log('[RoleService] Getting current user...');\n      \n      // Add timeout to getUser call\n      const userResult = await Promise.race([\n        supabase.auth.getUser(),\n        new Promise<never>((_, reject) => \n          setTimeout(() => reject(new Error('getUser timeout')), 2000)\n        )\n      ]);\n      \n      const user = userResult.data?.user;\n      if (!user) {\n        console.log('[RoleService] No authenticated user found');\n        return null;\n      }\n\n      console.log('[RoleService] Fetching user profile for:', user.id);\n      \n      // Add timeout to profile query with retry logic\n      let lastError: any;\n      for (let attempt = 1; attempt <= 2; attempt++) {\n        try {\n          const { data: profile, error } = await Promise.race([\n            supabase\n              .from('users')\n              .select('role')\n              .eq('id', user.id)\n              .single(),\n            new Promise<never>((_, reject) => \n              setTimeout(() => reject(new Error('Profile query timeout')), 1500)\n            )\n          ]);\n\n          if (error) {\n            console.error(`[RoleService] Error fetching user role (attempt ${attempt}):`, error);\n            lastError = error;\n            if (attempt < 2) {\n              await new Promise(resolve => setTimeout(resolve, 500)); // Wait before retry\n              continue;\n            }\n            // On final attempt, check if it's a \"no rows\" error vs connection error\n            if (error.code === 'PGRST116') {\n              console.warn('[RoleService] User profile not found - user may need to complete onboarding');\n              return 'player'; // Default role for users without profiles\n            }\n            throw error;\n          }\n\n          const role = profile?.role || 'player';\n          console.log('[RoleService] User role found:', role);\n          return role;\n        } catch (err) {\n          lastError = err;\n          if (attempt < 2) {\n            console.warn(`[RoleService] Attempt ${attempt} failed, retrying...`, err);\n            await new Promise(resolve => setTimeout(resolve, 500));\n            continue;\n          }\n          throw err;\n        }\n      }\n      \n      throw lastError;\n    } catch (error) {\n      console.error('[RoleService] Error getting current user role:', error);\n      // For admin access, be more permissive on errors to prevent lockout\n      return null;\n    }\n  }\n\n  /**\n   * Check if user has any of the specified roles with timeout protection\n   */\n  static async hasRole(allowedRoles: UserRole[]): Promise<RoleCheckResult> {\n    console.log('[RoleService] Checking roles:', allowedRoles);\n    \n    try {\n      const userRole = await Promise.race([\n        this.getCurrentUserRole(),\n        new Promise<UserRole | null>((_, reject) => \n          setTimeout(() => reject(new Error('Role check timeout')), 2000)\n        )\n      ]);\n      \n      console.log('[RoleService] User role retrieved:', userRole);\n      \n      if (!userRole) {\n        console.log('[RoleService] No user role found - redirecting to login');\n        return {\n          hasAccess: false,\n          userRole: null,\n          redirectTo: '/auth/login'\n        };\n      }\n\n      const hasAccess = allowedRoles.includes(userRole);\n      console.log('[RoleService] Access check result:', { userRole, allowedRoles, hasAccess });\n      \n      return {\n        hasAccess,\n        userRole,\n        redirectTo: hasAccess ? undefined : '/unauthorized'\n      };\n    } catch (error) {\n      console.error('[RoleService] Error in hasRole check:', error);\n      \n      // For admin roles, be more permissive on timeout/error to prevent lockout\n      const isAdminCheck = allowedRoles.includes('league_admin') || allowedRoles.includes('app_admin');\n      if (isAdminCheck) {\n        console.warn('[RoleService] Admin role check failed - failing open to prevent lockout');\n        return {\n          hasAccess: true,\n          userRole: 'league_admin', // Assume admin access on error\n          redirectTo: undefined\n        };\n      }\n      \n      return {\n        hasAccess: false,\n        userRole: null,\n        redirectTo: '/auth/login'\n      };\n    }\n  }\n\n  /**\n   * Check if user can access player features\n   */\n  static async canAccessPlayerApp(): Promise<RoleCheckResult> {\n    return this.hasRole(['player', 'captain', 'admin', 'league_admin', 'app_admin']);\n  }\n\n  /**\n   * Check if user can access admin features\n   */\n  static async canAccessAdminApp(): Promise<RoleCheckResult> {\n    return this.hasRole(['league_admin', 'app_admin']);\n  }\n\n  /**\n   * Check if user is a league administrator\n   */\n  static async isLeagueAdmin(): Promise<boolean> {\n    const result = await this.hasRole(['league_admin', 'app_admin']);\n    return result.hasAccess;\n  }\n\n  /**\n   * Check if user is an app administrator\n   */\n  static async isAppAdmin(): Promise<boolean> {\n    const result = await this.hasRole(['app_admin']);\n    return result.hasAccess;\n  }\n\n  /**\n   * Check if user can manage a specific league\n   */\n  static async canManageLeague(leagueId: string): Promise<boolean> {\n    try {\n      const userRole = await this.getCurrentUserRole();\n      \n      if (!userRole) return false;\n      \n      // App admins can manage any league\n      if (userRole === 'app_admin') {\n        return true;\n      }\n      \n      // League admins can manage leagues they created\n      if (userRole === 'league_admin') {\n        const { data: { user } } = await supabase.auth.getUser();\n        if (!user) return false;\n\n        const { data: league } = await supabase\n          .from('leagues')\n          .select('created_by')\n          .eq('id', leagueId)\n          .single();\n\n        return league?.created_by === user.id;\n      }\n      \n      return false;\n    } catch (error) {\n      console.error('Error checking league management permission:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Check if user can manage a specific team\n   */\n  static async canManageTeam(teamId: string): Promise<boolean> {\n    try {\n      const userRole = await this.getCurrentUserRole();\n      \n      if (!userRole) return false;\n      \n      // App admins can manage any team\n      if (userRole === 'app_admin') {\n        return true;\n      }\n      \n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) return false;\n\n      // Team captains and admins can manage their team\n      if (['captain', 'admin'].includes(userRole)) {\n        const { data: team } = await supabase\n          .from('teams')\n          .select('captain_id')\n          .eq('id', teamId)\n          .single();\n\n        if (team?.captain_id === user.id) {\n          return true;\n        }\n      }\n\n      // League admins can manage teams in their leagues\n      if (userRole === 'league_admin') {\n        const { data: team } = await supabase\n          .from('teams')\n          .select('league_id, leagues!inner(created_by)')\n          .eq('id', teamId)\n          .single();\n\n        return (team?.leagues as any)?.created_by === user.id;\n      }\n      \n      return false;\n    } catch (error) {\n      console.error('Error checking team management permission:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get user role display name\n   */\n  static getRoleDisplayName(role: UserRole): string {\n    const roleNames: Record<UserRole, string> = {\n      player: 'Player',\n      captain: 'Team Captain',\n      admin: 'Team Admin',\n      league_admin: 'League Administrator',\n      app_admin: 'App Administrator'\n    };\n    \n    return roleNames[role] || 'Unknown';\n  }\n\n  /**\n   * Get role permissions description\n   */\n  static getRolePermissions(role: UserRole): string[] {\n    const permissions: Record<UserRole, string[]> = {\n      player: [\n        'Join teams',\n        'View leagues',\n        'View personal stats',\n        'Receive team invitations'\n      ],\n      captain: [\n        'All player permissions',\n        'Manage team roster',\n        'Invite players',\n        'Request league membership'\n      ],\n      admin: [\n        'All captain permissions',\n        'Manage team settings',\n        'View team analytics'\n      ],\n      league_admin: [\n        'Create and manage leagues',\n        'Approve team requests',\n        'Schedule matches',\n        'Manage league settings'\n      ],\n      app_admin: [\n        'All permissions',\n        'Manage all users',\n        'System administration',\n        'Global settings'\n      ]\n    };\n    \n    return permissions[role] || [];\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1461, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/packages/auth/src/index.ts"],"sourcesContent":["/**\n * @matchday/auth\n *\n * Shared authentication utilities for MatchDay monorepo\n */\n\nexport * from './auth.service';\nexport * from './validator';\nexport * from './api-auth';\nexport * from './role.service';\n"],"names":[],"mappings":"AAAA;;;;CAIC;AAED;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 1488, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/apps/player/src/components/auth/supabase-auth-provider.tsx"],"sourcesContent":["/**\n * Robust Supabase Authentication Provider\n * \n * Advanced authentication system with:\n * - Atomic state management (no split-brain issues)\n * - Proactive health monitoring\n * - Automatic token refresh and recovery\n * - Consistent frontend/backend authentication state\n */\n\n'use client'\n\nimport React, { createContext, useContext, useEffect, useState, useCallback, useRef } from 'react'\nimport { User, Session, AuthError } from '@supabase/supabase-js'\nimport { supabase, clearAuthCookies, isInvalidJWTError } from '@/lib/supabase/client'\nimport { \n  validateAuthenticationState, \n  validateSessionHealth, \n  isTokenNearExpiry, \n  refreshAuthSession,\n  AuthValidationResult \n} from '@matchday/auth'\n\ninterface AuthState {\n  user: User | null\n  session: Session | null\n  isValid: boolean\n  isLoading: boolean\n  lastValidated: Date | null\n  validationStatus: string\n}\n\ninterface AuthContextType {\n  // State\n  user: User | null\n  session: Session | null\n  isLoading: boolean\n  isAuthenticated: boolean\n  isValid: boolean\n  lastValidated: Date | null\n  \n  // Actions\n  signUp: (data: {\n    email: string\n    password: string\n    displayName?: string\n    preferredPosition?: string\n    location?: string\n  }) => Promise<{ success: boolean; error?: string }>\n  signIn: (data: {\n    email: string\n    password: string\n  }) => Promise<{ success: boolean; error?: string }>\n  signInWithOAuth: (provider: 'google' | 'github' | 'discord') => Promise<{ success: boolean; error?: string }>\n  signOut: () => Promise<{ success: boolean; error?: string }>\n  resetPassword: (email: string) => Promise<{ success: boolean; error?: string }>\n  \n  // Advanced\n  validateAuth: () => Promise<AuthValidationResult>\n  refreshSession: () => Promise<boolean>\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\ninterface AuthProviderProps {\n  children: React.ReactNode\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  // Atomic authentication state\n  const [authState, setAuthState] = useState<AuthState>({\n    user: null,\n    session: null,\n    isValid: false,\n    isLoading: true,\n    lastValidated: null,\n    validationStatus: 'initial'\n  })\n  \n  // Refs for cleanup\n  const mounted = useRef(true)\n  const healthCheckInterval = useRef<NodeJS.Timeout>()\n  const refreshCheckInterval = useRef<NodeJS.Timeout>()\n\n  // Atomic state update function\n  const updateAuthState = useCallback(async (validation: AuthValidationResult) => {\n    if (!mounted.current) return\n    \n    console.log('üîÑ Updating auth state:', validation.status)\n    \n    setAuthState({\n      user: validation.user,\n      session: validation.session,\n      isValid: validation.isValid,\n      isLoading: false,\n      lastValidated: new Date(),\n      validationStatus: validation.status\n    })\n    \n    // Handle recovery actions\n    if (validation.shouldClearCookies) {\n      console.log('üßπ Clearing corrupted cookies')\n      clearAuthCookies()\n    }\n  }, [])\n\n  // Comprehensive authentication validation\n  const validateAuth = useCallback(async (): Promise<AuthValidationResult> => {\n    const validation = await validateAuthenticationState()\n    await updateAuthState(validation)\n    return validation\n  }, [updateAuthState])\n\n  // Refresh session manually\n  const refreshSession = useCallback(async (): Promise<boolean> => {\n    try {\n      const { success, session: newSession } = await refreshAuthSession()\n      \n      if (success && newSession) {\n        // Validate the new session\n        const validation = await validateAuthenticationState()\n        await updateAuthState(validation)\n        return validation.isValid\n      }\n      \n      return false\n    } catch (error) {\n      console.error('Manual session refresh failed:', error)\n      return false\n    }\n  }, [updateAuthState])\n\n  // Initial authentication setup\n  useEffect(() => {\n    mounted.current = true\n    \n    const initializeAuth = async () => {\n      console.log('üöÄ Initializing robust authentication...')\n      await validateAuth()\n    }\n    \n    initializeAuth()\n    \n    // Listen for auth state changes from Supabase\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(async (event, session) => {\n      if (!mounted.current) return\n      \n      console.log('üîë Auth event:', event, !!session)\n      \n      // Re-validate after any auth state change\n      setTimeout(() => validateAuth(), 100)\n    })\n    \n    return () => {\n      mounted.current = false\n      subscription.unsubscribe()\n    }\n  }, [validateAuth])\n\n  // Proactive health monitoring\n  useEffect(() => {\n    if (!authState.session || !authState.isValid) {\n      // Clear intervals if no valid session\n      if (healthCheckInterval.current) clearInterval(healthCheckInterval.current)\n      if (refreshCheckInterval.current) clearInterval(refreshCheckInterval.current)\n      return\n    }\n    \n    // Health check every 5 minutes\n    healthCheckInterval.current = setInterval(async () => {\n      if (!mounted.current) return\n      \n      console.log('üè• Running periodic health check...')\n      await validateAuth()\n    }, 5 * 60 * 1000)\n    \n    // Refresh check every minute (check if token needs refresh)\n    refreshCheckInterval.current = setInterval(async () => {\n      if (!mounted.current || !authState.session) return\n      \n      if (isTokenNearExpiry(authState.session)) {\n        console.log('üîÑ Token near expiry, refreshing...')\n        await refreshSession()\n      }\n    }, 60 * 1000)\n    \n    return () => {\n      if (healthCheckInterval.current) clearInterval(healthCheckInterval.current)\n      if (refreshCheckInterval.current) clearInterval(refreshCheckInterval.current)\n    }\n  }, [authState.session, authState.isValid, validateAuth, refreshSession])\n\n  const isAuthenticated = authState.isValid && !!authState.user && !!authState.session\n\n  // Sign up with email/password\n  const signUp = async (data: {\n    email: string\n    password: string\n    displayName?: string\n    preferredPosition?: string\n    location?: string\n  }) => {\n    try {\n      setAuthState(prev => ({ ...prev, isLoading: true }))\n      \n      const { data: authData, error } = await supabase.auth.signUp({\n        email: data.email,\n        password: data.password,\n        options: {\n          data: {\n            display_name: data.displayName || '',\n            preferred_position: data.preferredPosition || '',\n            location: data.location || ''\n          }\n        }\n      })\n\n      if (error) {\n        console.error('Sign up error:', error)\n        return { success: false, error: error.message }\n      }\n\n      // Validate the new auth state\n      await validateAuth()\n      return { success: true }\n    } catch (error) {\n      console.error('Sign up error:', error)\n      return { success: false, error: 'An unexpected error occurred' }\n    }\n  }\n\n  // Sign in with email/password\n  const signIn = async (data: { email: string; password: string }) => {\n    try {\n      setAuthState(prev => ({ ...prev, isLoading: true }))\n      \n      const { data: authData, error } = await supabase.auth.signInWithPassword({\n        email: data.email,\n        password: data.password,\n      })\n\n      if (error) {\n        console.error('Sign in error:', error)\n        setAuthState(prev => ({ ...prev, isLoading: false }))\n        \n        // Return user-friendly error messages\n        if (error.message.includes('Invalid login credentials')) {\n          return { success: false, error: 'Invalid email or password. Please try again.' }\n        }\n        if (error.message.includes('Email not confirmed')) {\n          return { success: false, error: 'Please confirm your email before signing in.' }\n        }\n        \n        return { success: false, error: error.message }\n      }\n\n      // Validate the new auth state\n      await validateAuth()\n      return { success: true }\n    } catch (error: any) {\n      console.error('Sign in error:', error)\n      setAuthState(prev => ({ ...prev, isLoading: false }))\n      \n      // Handle network errors\n      if (error?.message?.includes('fetch')) {\n        return { success: false, error: 'Network error. Please check your connection.' }\n      }\n      \n      return { success: false, error: 'An unexpected error occurred. Please try again.' }\n    } finally {\n      // Ensure loading state is cleared\n      setAuthState(prev => ({ ...prev, isLoading: false }))\n    }\n  }\n\n  // Sign in with OAuth\n  const signInWithOAuth = async (provider: 'google' | 'github' | 'discord') => {\n    try {\n      setAuthState(prev => ({ ...prev, isLoading: true }))\n      \n      const { data, error } = await supabase.auth.signInWithOAuth({\n        provider,\n        options: {\n          redirectTo: `${window.location.origin}/dashboard`\n        }\n      })\n\n      if (error) {\n        console.error('OAuth sign in error:', error)\n        return { success: false, error: error.message }\n      }\n\n      return { success: true }\n    } catch (error) {\n      console.error('OAuth sign in error:', error)\n      return { success: false, error: 'An unexpected error occurred' }\n    }\n  }\n\n  // Sign out\n  const signOut = async () => {\n    try {\n      setAuthState(prev => ({ ...prev, isLoading: true }))\n      \n      const { error } = await supabase.auth.signOut()\n\n      if (error) {\n        console.error('Sign out error:', error)\n        return { success: false, error: error.message }\n      }\n\n      // Clear all auth state\n      setAuthState({\n        user: null,\n        session: null,\n        isValid: false,\n        isLoading: false,\n        lastValidated: null,\n        validationStatus: 'signed_out'\n      })\n      \n      // Clear cookies as well\n      clearAuthCookies()\n\n      return { success: true }\n    } catch (error) {\n      console.error('Sign out error:', error)\n      return { success: false, error: 'An unexpected error occurred' }\n    }\n  }\n\n  // Reset password\n  const resetPassword = async (email: string) => {\n    try {\n      const { error } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/auth/reset-password`\n      })\n\n      if (error) {\n        console.error('Password reset error:', error)\n        return { success: false, error: error.message }\n      }\n\n      return { success: true }\n    } catch (error) {\n      console.error('Password reset error:', error)\n      return { success: false, error: 'An unexpected error occurred' }\n    }\n  }\n\n  const value: AuthContextType = {\n    // State\n    user: authState.user,\n    session: authState.session,\n    isLoading: authState.isLoading,\n    isAuthenticated,\n    isValid: authState.isValid,\n    lastValidated: authState.lastValidated,\n    \n    // Actions\n    signUp,\n    signIn,\n    signInWithOAuth,\n    signOut,\n    resetPassword,\n    \n    // Advanced\n    validateAuth,\n    refreshSession,\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider')\n  }\n  return context\n}\n\n// Export a helper for getting session in client components\nexport const getSession = async () => {\n  try {\n    const { data: { session }, error } = await supabase.auth.getSession()\n    if (error) {\n      console.error('Error getting session:', error)\n      return null\n    }\n    return session\n  } catch (error) {\n    console.error('Error getting session:', error)\n    return null\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1871, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/apps/player/src/components/layout/header.tsx"],"sourcesContent":["/**\n * Professional Header Component\n * \n * Main navigation header that makes amateur players feel like they're using\n * a professional sports platform. Includes MatchDay branding and key navigation.\n */\n\n'use client';\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { usePathname, useRouter } from 'next/navigation';\nimport { LogIn, LogOut, User } from 'lucide-react';\nimport { useAuth } from '@/components/auth/supabase-auth-provider';\n\ninterface HeaderProps {\n  className?: string;\n}\n\nexport const Header: React.FC<HeaderProps> = ({ className = '' }) => {\n  const pathname = usePathname();\n  const router = useRouter();\n  const { user, isLoading, signOut, forceSignOut } = useAuth();\n\n  // Debug logging for auth state\n  console.log('üé® Header render - Loading:', isLoading, 'User:', user?.email || 'null', 'Will show:', \n    isLoading ? 'loading' : user ? 'logout button' : 'login button');\n\n  const navItems = [\n    { href: '/dashboard', label: 'My Dashboard', icon: 'üìä' },\n    { href: '/leagues', label: 'Explore Leagues', icon: 'üèÜ' },\n    { href: '/teams', label: 'My Teams', icon: 'üë•' },\n    { href: '/matches', label: 'Matches', icon: '‚öΩ' },\n    { href: '/profile', label: 'Profile Settings', icon: '‚öôÔ∏è' },\n  ];\n\n  const isActive = (href: string) => {\n    if (href === '/') {\n      return pathname === '/';\n    }\n    return pathname.startsWith(href);\n  };\n\n  const handleLogin = () => {\n    router.push('/auth/login');\n  };\n\n  const handleLogout = async () => {\n    try {\n      console.log('üé® Header: Starting logout...');\n      const result = await signOut();\n      \n      if (result.success) {\n        console.log('üé® Header: Logout succeeded, redirecting...');\n        // Only redirect if logout actually succeeded\n        if (typeof window !== 'undefined') {\n          window.location.href = '/';\n        } else {\n          router.push('/');\n        }\n      } else {\n        console.error('üé® Header: Logout failed:', result.error);\n        \n        // If logout failed due to network issues, offer force logout\n        if (result.canForceLogout) {\n          const forceLogout = confirm(\n            `${result.error}\\n\\nWould you like to force logout? This will clear your local session but the server session may remain active.`\n          );\n          \n          if (forceLogout) {\n            console.log('üé® Header: User chose force logout');\n            const forceResult = await forceSignOut();\n            \n            if (forceResult.success) {\n              console.log('üé® Header: Force logout succeeded');\n              if (forceResult.error) {\n                // Show warning about potential server session\n                alert(`Force logout completed. ${forceResult.error}`);\n              }\n              window.location.href = '/';\n            } else {\n              alert(`Force logout failed: ${forceResult.error}`);\n            }\n          }\n        } else {\n          // Regular error message for non-network issues\n          alert(`Logout failed: ${result.error}`);\n        }\n      }\n    } catch (error) {\n      console.error('üé® Header: Logout exception:', error);\n      alert('Logout failed due to unexpected error. Please try again.');\n    }\n  };\n\n  return (\n    <header className={`bg-white dark:bg-gray-900 border-b border-gray-200 dark:border-gray-700 ${className}`}>\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex items-center justify-between h-16\">\n          {/* Logo */}\n          <Link href=\"/\" className=\"flex items-center space-x-2\">\n            <div className=\"w-8 h-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\">\n              <span className=\"text-white font-bold text-sm\">M</span>\n            </div>\n            <span className=\"text-xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\">\n              MatchDay\n            </span>\n          </Link>\n\n          {/* Navigation */}\n          <nav className=\"hidden md:flex items-center space-x-1\">\n            {navItems.map((item) => (\n              <Link\n                key={item.href}\n                href={item.href}\n                className={`flex items-center space-x-2 px-4 py-2 rounded-lg transition-colors ${\n                  isActive(item.href)\n                    ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'\n                    : 'text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800'\n                }`}\n              >\n                <span className=\"text-lg\">{item.icon}</span>\n                <span className=\"font-medium\">{item.label}</span>\n              </Link>\n            ))}\n          </nav>\n\n          {/* Mobile menu button and action */}\n          <div className=\"flex items-center space-x-4\">\n            {/* Authentication Controls */}\n            {isLoading ? (\n              <div className=\"animate-pulse bg-gray-200 dark:bg-gray-700 h-8 w-20 rounded\"></div>\n            ) : user ? (\n              <div className=\"flex items-center space-x-3\">\n                {/* User Info */}\n                <div className=\"hidden sm:flex items-center space-x-2\">\n                  <User className=\"w-5 h-5 text-gray-600 dark:text-gray-300\" />\n                  <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                    {user.profile?.display_name || user.email}\n                  </span>\n                </div>\n                \n                {/* Logout Button */}\n                <button\n                  onClick={handleLogout}\n                  className=\"flex items-center space-x-2 px-3 py-2 bg-red-600 hover:bg-red-700 text-white font-medium rounded-lg transition-colors\"\n                >\n                  <LogOut className=\"w-4 h-4\" />\n                  <span className=\"hidden sm:inline\">Logout</span>\n                </button>\n              </div>\n            ) : (\n              <button\n                onClick={handleLogin}\n                className=\"flex items-center space-x-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white px-4 py-2 rounded-lg font-medium hover:from-blue-700 hover:to-purple-700 transition-colors\"\n              >\n                <LogIn className=\"w-4 h-4\" />\n                <span>Login</span>\n              </button>\n            )}\n\n            {/* Mobile Navigation */}\n            <div className=\"md:hidden\">\n              <div className=\"flex items-center space-x-1\">\n                {navItems.slice(1).map((item) => (\n                  <Link\n                    key={item.href}\n                    href={item.href}\n                    className={`p-2 rounded-lg transition-colors ${\n                      isActive(item.href)\n                        ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'\n                        : 'text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800'\n                    }`}\n                  >\n                    <span className=\"text-xl\">{item.icon}</span>\n                  </Link>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2195, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/apps/player/src/components/providers/query-provider.tsx"],"sourcesContent":["/**\n * React Query Provider\n * \n * Sets up React Query for the application to enable data fetching\n * and caching throughout the app.\n */\n\n'use client';\n\nimport React from 'react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n\ninterface QueryProviderProps {\n  children: React.ReactNode;\n}\n\nexport const QueryProvider: React.FC<QueryProviderProps> = ({ children }) => {\n  const [queryClient] = React.useState(() => new QueryClient({\n    defaultOptions: {\n      queries: {\n        staleTime: 5 * 60 * 1000, // 5 minutes\n        refetchOnWindowFocus: false,\n        retry: 1,\n      },\n    },\n  }));\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n    </QueryClientProvider>\n  );\n};"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;AAID;AACA;AAAA;AAHA;;;;AASO,MAAM,gBAA8C,CAAC,EAAE,QAAQ,EAAE;IACtE,MAAM,CAAC,YAAY,GAAG,sWAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,IAAM,IAAI,sPAAA,CAAA,cAAW,CAAC;YACzD,gBAAgB;gBACd,SAAS;oBACP,WAAW,IAAI,KAAK;oBACpB,sBAAsB;oBACtB,OAAO;gBACT;YACF;QACF;IAEA,qBACE,+YAAC,sRAAA,CAAA,sBAAmB;QAAC,QAAQ;kBAC1B;;;;;;AAGP","debugId":null}}]
}