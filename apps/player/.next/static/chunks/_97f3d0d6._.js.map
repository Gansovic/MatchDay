{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/packages/shared/src/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,CAAA,GAAA,4NAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,yLAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/packages/shared/src/environment/validation.ts"],"sourcesContent":["/**\n * Environment Validation Utility for MatchDay\n * \n * Prevents database confusion by validating and clearly indicating\n * which environment (local/production) is currently active.\n */\n\nexport type Environment = 'development' | 'production' | 'test'\n\nexport interface EnvironmentConfig {\n  env: Environment\n  supabaseUrl: string\n  supabaseAnonKey: string\n  siteUrl: string\n  isDevelopment: boolean\n  isProduction: boolean\n  isLocal: boolean\n  isRemote: boolean\n  databaseType: 'local' | 'production'\n  adminAppUrl?: string\n}\n\nexport interface ValidationResult {\n  isValid: boolean\n  errors: string[]\n  warnings: string[]\n  config: EnvironmentConfig | null\n}\n\n/**\n * Validates environment configuration and returns detailed analysis\n */\nexport function validateEnvironment(): ValidationResult {\n  const errors: string[] = []\n  const warnings: string[] = []\n  \n  // Get environment variables\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\n  const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n  const siteUrl = process.env.NEXT_PUBLIC_SITE_URL\n  const adminAppUrl = process.env.NEXT_PUBLIC_ADMIN_APP_URL\n  const nodeEnv = process.env.NODE_ENV as Environment || 'development'\n  \n  // Validate required variables\n  if (!supabaseUrl) {\n    errors.push('Missing NEXT_PUBLIC_SUPABASE_URL environment variable')\n  }\n  \n  if (!supabaseAnonKey) {\n    errors.push('Missing NEXT_PUBLIC_SUPABASE_ANON_KEY environment variable')\n  }\n  \n  if (!siteUrl) {\n    errors.push('Missing NEXT_PUBLIC_SITE_URL environment variable')\n  }\n  \n  // Early return if critical variables missing\n  if (errors.length > 0) {\n    return {\n      isValid: false,\n      errors,\n      warnings,\n      config: null\n    }\n  }\n  \n  // Determine database type and environment characteristics\n  const isLocal = supabaseUrl?.includes('localhost') || supabaseUrl?.includes('127.0.0.1') || false\n  const isRemote = !isLocal\n  const isDevelopment = nodeEnv === 'development'\n  const isProduction = nodeEnv === 'production'\n  const databaseType: 'local' | 'production' = isLocal ? 'local' : 'production'\n  \n  // Validate URL format\n  try {\n    new URL(supabaseUrl!)\n  } catch {\n    errors.push(`Invalid NEXT_PUBLIC_SUPABASE_URL format: ${supabaseUrl}`)\n  }\n  \n  try {\n    new URL(siteUrl!)\n  } catch {\n    errors.push(`Invalid NEXT_PUBLIC_SITE_URL format: ${siteUrl}`)\n  }\n  \n  // Environment consistency checks\n  if (isDevelopment && isRemote) {\n    warnings.push('‚ö†Ô∏è  DEVELOPMENT mode is using PRODUCTION database - this may be intentional but verify!')\n  }\n  \n  if (isProduction && isLocal) {\n    errors.push('‚ùå PRODUCTION mode cannot use LOCAL database')\n  }\n  \n  // Database URL validation\n  if (isLocal) {\n    if (!supabaseUrl?.match(/localhost:5432\\d/)) {\n      warnings.push(`Local database URL doesn't match expected pattern (localhost:5432x): ${supabaseUrl}`)\n    }\n  } else {\n    if (!supabaseUrl?.includes('.supabase.co')) {\n      warnings.push(`Production database URL doesn't match expected Supabase pattern: ${supabaseUrl}`)\n    }\n  }\n  \n  // Create config object\n  const config: EnvironmentConfig = {\n    env: nodeEnv,\n    supabaseUrl: supabaseUrl!,\n    supabaseAnonKey: supabaseAnonKey!,\n    siteUrl: siteUrl!,\n    isDevelopment,\n    isProduction,\n    isLocal,\n    isRemote,\n    databaseType,\n    adminAppUrl\n  }\n  \n  return {\n    isValid: errors.length === 0,\n    errors,\n    warnings,\n    config\n  }\n}\n\n/**\n * Get current environment configuration (throws if invalid)\n */\nexport function getEnvironmentConfig(): EnvironmentConfig {\n  const result = validateEnvironment()\n  \n  if (!result.isValid || !result.config) {\n    throw new Error(`Invalid environment configuration:\\n${result.errors.join('\\n')}`)\n  }\n  \n  return result.config\n}\n\n/**\n * Check if current environment is safe for destructive operations\n */\nexport function isSafeForDestructiveOperations(): boolean {\n  try {\n    const config = getEnvironmentConfig()\n    return config.isDevelopment || config.isLocal\n  } catch {\n    return false\n  }\n}\n\n/**\n * Get environment display name with visual indicators\n */\nexport function getEnvironmentDisplayName(): string {\n  try {\n    const config = getEnvironmentConfig()\n    \n    if (config.isLocal) {\n      return `üü¢ LOCAL (${config.env})`\n    } else {\n      return `üî¥ PRODUCTION (${config.env})`\n    }\n  } catch {\n    return '‚ùì UNKNOWN'\n  }\n}\n\n/**\n * Get database display name with clear indicators\n */\nexport function getDatabaseDisplayName(): string {\n  try {\n    const config = getEnvironmentConfig()\n    const url = new URL(config.supabaseUrl)\n    \n    if (config.isLocal) {\n      return `üè† Local Database (${url.host})`\n    } else {\n      return `‚òÅÔ∏è  Production Database (${url.hostname})`\n    }\n  } catch {\n    return '‚ùì Unknown Database'\n  }\n}\n\n/**\n * Log environment status to console with visual formatting\n */\nexport function logEnvironmentStatus(): void {\n  const result = validateEnvironment()\n  \n  console.group('üîß Environment Configuration')\n  \n  if (result.config) {\n    const config = result.config\n    \n    console.log(`Environment: ${getEnvironmentDisplayName()}`)\n    console.log(`Database: ${getDatabaseDisplayName()}`)\n    console.log(`Site URL: ${config.siteUrl}`)\n    \n    if (config.adminAppUrl) {\n      console.log(`Admin URL: ${config.adminAppUrl}`)\n    }\n    \n    if (result.warnings.length > 0) {\n      console.group('‚ö†Ô∏è  Warnings')\n      result.warnings.forEach(warning => console.warn(warning))\n      console.groupEnd()\n    }\n  }\n  \n  if (result.errors.length > 0) {\n    console.group('‚ùå Errors')\n    result.errors.forEach(error => console.error(error))\n    console.groupEnd()\n  }\n  \n  console.groupEnd()\n}\n\n/**\n * Create environment validation middleware for Next.js\n */\nexport function createEnvironmentMiddleware() {\n  return () => {\n    const result = validateEnvironment()\n    \n    if (!result.isValid) {\n      throw new Error(`Environment validation failed:\\n${result.errors.join('\\n')}`)\n    }\n    \n    // Log environment status in development\n    if (result.config?.isDevelopment) {\n      logEnvironmentStatus()\n    }\n  }\n}\n\n/**\n * Runtime environment validation (call this at app startup)\n */\nexport function validateEnvironmentAtStartup(): void {\n  try {\n    const middleware = createEnvironmentMiddleware()\n    middleware()\n    \n    const config = getEnvironmentConfig()\n    \n    // Show prominent warning for production database usage\n    if (config.isRemote && config.isDevelopment) {\n      console.warn('\\n' + '='.repeat(60))\n      console.warn('‚ö†Ô∏è  WARNING: USING PRODUCTION DATABASE IN DEVELOPMENT!')\n      console.warn(`Database: ${getDatabaseDisplayName()}`)\n      console.warn('Make sure this is intentional!')\n      console.warn('='.repeat(60) + '\\n')\n    }\n    \n  } catch (error) {\n    console.error('\\n' + '='.repeat(60))\n    console.error('‚ùå ENVIRONMENT VALIDATION FAILED!')\n    console.error(error instanceof Error ? error.message : String(error))\n    console.error('='.repeat(60) + '\\n')\n    throw error\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/packages/shared/src/index.ts"],"sourcesContent":["/**\n * @matchday/shared\n *\n * Shared utilities and helpers for MatchDay monorepo\n */\n\nexport * from './utils';\nexport * from './environment/validation';\n"],"names":[],"mappings":"AAAA;;;;CAIC;AAED;AACA","debugId":null}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/apps/player/src/lib/supabase/client.ts"],"sourcesContent":["/**\n * Supabase Client Configuration for MatchDay\n * \n * Proper Next.js 15 App Router + Supabase Cloud integration using @supabase/ssr\n * Handles client-side, server-side, and SSR authentication consistently\n * \n * Includes environment validation to prevent database confusion\n */\n\nimport { createBrowserClient } from '@supabase/ssr'\nimport { Database } from '@matchday/database'\nimport { validateEnvironmentAtStartup, getEnvironmentConfig } from '@matchday/shared'\n\n// Validate environment at startup to prevent database confusion\nvalidateEnvironmentAtStartup()\n\n// Get validated environment configuration\nconst envConfig = getEnvironmentConfig()\nconst { supabaseUrl, supabaseAnonKey } = envConfig\n\n/**\n * Supabase client for Client Components\n * \n * Uses @supabase/ssr for proper SSR support and Supabase Cloud compatibility.\n * Automatically handles authentication state with cookies for SSR consistency.\n */\nexport const supabase = createBrowserClient<Database>(\n  supabaseUrl,\n  supabaseAnonKey,\n  {\n    cookieOptions: {\n      name: 'matchday-auth',\n      lifetime: 60 * 60 * 24 * 7, // 7 days\n      domain: undefined,\n      path: '/',\n      sameSite: 'lax',\n    },\n  }\n)\n\n/**\n * Type-safe helper for getting the current user\n */\nexport async function getCurrentUser() {\n  try {\n    const { data: { user }, error } = await supabase.auth.getUser()\n    \n    if (error) {\n      console.error('Error getting current user:', error)\n      return null\n    }\n    \n    return user\n  } catch (error) {\n    console.error('Unexpected error getting current user:', error)\n    return null\n  }\n}\n\n/**\n * Type-safe helper for getting the current session\n */\nexport async function getCurrentSession() {\n  try {\n    const { data: { session }, error } = await supabase.auth.getSession()\n    \n    if (error) {\n      console.error('Error getting current session:', error)\n      return null\n    }\n    \n    return session\n  } catch (error) {\n    console.error('Unexpected error getting current session:', error)\n    return null\n  }\n}\n\n/**\n * Utility function to handle Supabase auth redirects\n */\nexport function getAuthRedirectUrl(path: string = '/dashboard') {\n  const baseUrl = process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000'\n  return `${baseUrl}${path}`\n}\n\n/**\n * Cookie management utilities for authentication recovery\n */\nexport function clearAuthCookies() {\n  if (typeof document === 'undefined') return\n\n  // Clear all Supabase auth cookies\n  const cookieNames = [\n    'matchday-auth',\n    'sb-access-token',\n    'sb-refresh-token',\n    'supabase-auth-token',\n    'supabase.auth.token'\n  ]\n\n  cookieNames.forEach(cookieName => {\n    // Clear cookie with various path and domain combinations\n    const clearCookie = (domain?: string, path: string = '/') => {\n      let cookieString = `${cookieName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=${path};`\n      if (domain) cookieString += ` domain=${domain};`\n      document.cookie = cookieString\n    }\n\n    // Clear with different path/domain combinations\n    clearCookie()\n    clearCookie(undefined, '/')\n    clearCookie(window.location.hostname)\n    clearCookie(`.${window.location.hostname}`)\n  })\n\n  // Also clear localStorage auth items\n  if (typeof localStorage !== 'undefined') {\n    const keys = Object.keys(localStorage)\n    keys.forEach(key => {\n      if (key.includes('supabase') || key.includes('auth')) {\n        localStorage.removeItem(key)\n      }\n    })\n  }\n\n  console.log('üßπ Cleared all authentication cookies and localStorage')\n}\n\n/**\n * Detect if a session has an invalid JWT token\n */\nexport function isInvalidJWTError(error: any): boolean {\n  if (!error) return false\n  \n  const message = error.message || error.toString()\n  return message.includes('invalid JWT') || \n         message.includes('signature is invalid') ||\n         message.includes('unable to parse or verify signature')\n}\n\n/**\n * Validate session health - checks if the session is usable\n */\nexport async function validateSessionHealth(session: any): Promise<boolean> {\n  if (!session?.access_token) return false\n  \n  try {\n    // Try a simple authenticated request to validate the token\n    const { data, error } = await supabase.auth.getUser()\n    \n    if (error && isInvalidJWTError(error)) {\n      console.log('üö® Session health check failed: Invalid JWT detected')\n      return false\n    }\n    \n    return !error && !!data.user\n  } catch (error) {\n    if (isInvalidJWTError(error)) {\n      console.log('üö® Session health check failed: Invalid JWT detected')\n      return false\n    }\n    return false\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/apps/player/src/lib/auth/validator.ts"],"sourcesContent":["/**\n * Centralized Authentication Validator\n * \n * Single source of truth for authentication validation across the application.\n * Provides consistent validation logic for both client and server-side usage.\n */\n\nimport { Session } from '@supabase/supabase-js';\nimport { supabase, isInvalidJWTError } from '@/lib/supabase/client';\n\nexport interface AuthValidationResult {\n  isValid: boolean;\n  status: 'healthy' | 'invalid_token' | 'no_session' | 'expired' | 'validation_failed';\n  session: Session | null;\n  user: any | null;\n  reason?: string;\n  shouldClearCookies: boolean;\n  shouldRedirectToLogin: boolean;\n  action: 'none' | 'clear_cookies' | 'refresh_token' | 'redirect_login' | 'retry';\n}\n\n/**\n * Comprehensive authentication state validation\n */\nexport async function validateAuthenticationState(): Promise<AuthValidationResult> {\n  try {\n    console.log('üîç Validating authentication state...');\n    \n    // Step 1: Check if we have a session\n    const { data: { session }, error: sessionError } = await supabase.auth.getSession();\n    \n    if (sessionError) {\n      console.log('üîç Session error:', sessionError.message);\n      \n      if (isInvalidJWTError(sessionError)) {\n        return {\n          isValid: false,\n          status: 'invalid_token',\n          session: null,\n          user: null,\n          reason: sessionError.message,\n          shouldClearCookies: true,\n          shouldRedirectToLogin: true,\n          action: 'clear_cookies'\n        };\n      }\n      \n      return {\n        isValid: false,\n        status: 'validation_failed',\n        session: null,\n        user: null,\n        reason: sessionError.message,\n        shouldClearCookies: false,\n        shouldRedirectToLogin: false,\n        action: 'retry'\n      };\n    }\n    \n    if (!session) {\n      console.log('üîç No session found');\n      return {\n        isValid: false,\n        status: 'no_session',\n        session: null,\n        user: null,\n        shouldClearCookies: false,\n        shouldRedirectToLogin: true,\n        action: 'redirect_login'\n      };\n    }\n    \n    // Step 2: Check token expiry\n    const now = Math.floor(Date.now() / 1000);\n    const expiresAt = session.expires_at || 0;\n    \n    if (expiresAt <= now) {\n      console.log('üîç Token expired');\n      return {\n        isValid: false,\n        status: 'expired',\n        session,\n        user: session.user,\n        reason: 'Token has expired',\n        shouldClearCookies: false,\n        shouldRedirectToLogin: false,\n        action: 'refresh_token'\n      };\n    }\n    \n    // Step 3: Validate token with server (optional during initialization)\n    try {\n      // Add timeout and error handling to prevent blocking initialization\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 3000); // 3 second timeout\n      \n      const healthResponse = await fetch('/api/auth/health', {\n        credentials: 'include',\n        headers: {\n          'Authorization': `Bearer ${session.access_token}`\n        },\n        signal: controller.signal\n      });\n      \n      clearTimeout(timeoutId);\n      \n      if (!healthResponse.ok) {\n        const healthData = await healthResponse.json();\n        console.log('üîç Health check failed:', healthData.status);\n        \n        return {\n          isValid: false,\n          status: healthData.status === 'INVALID_TOKEN' ? 'invalid_token' : 'validation_failed',\n          session,\n          user: session.user,\n          reason: healthData.message,\n          shouldClearCookies: healthData.action === 'CLEAR_COOKIES_AND_REAUTH',\n          shouldRedirectToLogin: healthData.action !== 'RETRY_OR_REAUTH',\n          action: healthData.action === 'CLEAR_COOKIES_AND_REAUTH' ? 'clear_cookies' : 'retry'\n        };\n      }\n      \n      const healthData = await healthResponse.json();\n      console.log('üîç Authentication state is healthy');\n      \n      return {\n        isValid: true,\n        status: 'healthy',\n        session,\n        user: session.user,\n        shouldClearCookies: false,\n        shouldRedirectToLogin: false,\n        action: 'none'\n      };\n      \n    } catch (healthError) {\n      console.log('üîç Health check request failed (gracefully degrading):', healthError);\n      \n      // Graceful degradation: If health check fails during initialization,\n      // assume the session is valid if it passes local validation\n      // This prevents circular dependency issues during app startup\n      if (healthError.name === 'AbortError') {\n        console.log('üîç Health check timed out - assuming valid session for now');\n      } else if (healthError.message?.includes('fetch')) {\n        console.log('üîç Health endpoint not available - assuming valid session for now');\n      }\n      \n      // Fall back to local validation only\n      return {\n        isValid: true, // Assume valid if local checks passed\n        status: 'healthy',\n        session,\n        user: session.user,\n        shouldClearCookies: false,\n        shouldRedirectToLogin: false,\n        action: 'none'\n      };\n    }\n    \n  } catch (error) {\n    console.error('üîç Authentication validation error:', error);\n    \n    return {\n      isValid: false,\n      status: 'validation_failed',\n      session: null,\n      user: null,\n      reason: error instanceof Error ? error.message : 'Unknown validation error',\n      shouldClearCookies: false,\n      shouldRedirectToLogin: false,\n      action: 'retry'\n    };\n  }\n}\n\n/**\n * Quick session health check (lightweight)\n */\nexport async function validateSessionHealth(session: Session | null): Promise<boolean> {\n  if (!session?.access_token) return false;\n  \n  try {\n    // Check token expiry first (local check, no network)\n    const now = Math.floor(Date.now() / 1000);\n    const expiresAt = session.expires_at || 0;\n    \n    if (expiresAt <= now) {\n      console.log('üîç Token expired (local check)');\n      return false;\n    }\n    \n    // Validate with server\n    const { data, error } = await supabase.auth.getUser();\n    \n    if (error && isInvalidJWTError(error)) {\n      console.log('üîç Invalid JWT detected in health check');\n      return false;\n    }\n    \n    return !error && !!data.user;\n  } catch (error) {\n    if (isInvalidJWTError(error)) {\n      console.log('üîç Invalid JWT detected in health check (catch)');\n      return false;\n    }\n    return false;\n  }\n}\n\n/**\n * Check if token is about to expire (within 2 minutes)\n */\nexport function isTokenNearExpiry(session: Session | null): boolean {\n  if (!session?.expires_at) return false;\n  \n  const now = Math.floor(Date.now() / 1000);\n  const expiresAt = session.expires_at;\n  const twoMinutes = 2 * 60;\n  \n  return (expiresAt - now) <= twoMinutes;\n}\n\n/**\n * Attempt to refresh the current session\n */\nexport async function refreshAuthSession(): Promise<{ success: boolean; session: Session | null; error?: string }> {\n  try {\n    console.log('üîÑ Attempting to refresh auth session...');\n    \n    const { data, error } = await supabase.auth.refreshSession();\n    \n    if (error) {\n      console.log('üîÑ Session refresh failed:', error.message);\n      return { success: false, session: null, error: error.message };\n    }\n    \n    console.log('üîÑ Session refreshed successfully');\n    return { success: true, session: data.session };\n    \n  } catch (error) {\n    console.log('üîÑ Session refresh error:', error);\n    return { \n      success: false, \n      session: null, \n      error: error instanceof Error ? error.message : 'Unknown refresh error' \n    };\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 603, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/apps/player/src/components/auth/supabase-auth-provider.tsx"],"sourcesContent":["/**\n * Robust Supabase Authentication Provider\n * \n * Advanced authentication system with:\n * - Atomic state management (no split-brain issues)\n * - Proactive health monitoring\n * - Automatic token refresh and recovery\n * - Consistent frontend/backend authentication state\n */\n\n'use client'\n\nimport React, { createContext, useContext, useEffect, useState, useCallback, useRef } from 'react'\nimport { User, Session, AuthError } from '@supabase/supabase-js'\nimport { supabase, clearAuthCookies, isInvalidJWTError } from '@/lib/supabase/client'\nimport {\n  validateAuthenticationState,\n  validateSessionHealth,\n  isTokenNearExpiry,\n  refreshAuthSession,\n  AuthValidationResult\n} from '@/lib/auth/validator'\n\ninterface AuthState {\n  user: User | null\n  session: Session | null\n  isValid: boolean\n  isLoading: boolean\n  lastValidated: Date | null\n  validationStatus: string\n}\n\ninterface AuthContextType {\n  // State\n  user: User | null\n  session: Session | null\n  isLoading: boolean\n  isAuthenticated: boolean\n  isValid: boolean\n  lastValidated: Date | null\n  \n  // Actions\n  signUp: (data: {\n    email: string\n    password: string\n    displayName?: string\n    preferredPosition?: string\n    location?: string\n  }) => Promise<{ success: boolean; error?: string }>\n  signIn: (data: {\n    email: string\n    password: string\n  }) => Promise<{ success: boolean; error?: string }>\n  signInWithOAuth: (provider: 'google' | 'github' | 'discord') => Promise<{ success: boolean; error?: string }>\n  signOut: () => Promise<{ success: boolean; error?: string }>\n  resetPassword: (email: string) => Promise<{ success: boolean; error?: string }>\n  \n  // Advanced\n  validateAuth: () => Promise<AuthValidationResult>\n  refreshSession: () => Promise<boolean>\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\ninterface AuthProviderProps {\n  children: React.ReactNode\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  // Atomic authentication state\n  const [authState, setAuthState] = useState<AuthState>({\n    user: null,\n    session: null,\n    isValid: false,\n    isLoading: true,\n    lastValidated: null,\n    validationStatus: 'initial'\n  })\n  \n  // Refs for cleanup\n  const mounted = useRef(true)\n  const healthCheckInterval = useRef<NodeJS.Timeout>()\n  const refreshCheckInterval = useRef<NodeJS.Timeout>()\n\n  // Atomic state update function\n  const updateAuthState = useCallback(async (validation: AuthValidationResult) => {\n    if (!mounted.current) return\n    \n    console.log('üîÑ Updating auth state:', validation.status)\n    \n    setAuthState({\n      user: validation.user,\n      session: validation.session,\n      isValid: validation.isValid,\n      isLoading: false,\n      lastValidated: new Date(),\n      validationStatus: validation.status\n    })\n    \n    // Handle recovery actions\n    if (validation.shouldClearCookies) {\n      console.log('üßπ Clearing corrupted cookies')\n      clearAuthCookies()\n    }\n  }, [])\n\n  // Comprehensive authentication validation\n  const validateAuth = useCallback(async (): Promise<AuthValidationResult> => {\n    const validation = await validateAuthenticationState()\n    await updateAuthState(validation)\n    return validation\n  }, [updateAuthState])\n\n  // Refresh session manually\n  const refreshSession = useCallback(async (): Promise<boolean> => {\n    try {\n      const { success, session: newSession } = await refreshAuthSession()\n      \n      if (success && newSession) {\n        // Validate the new session\n        const validation = await validateAuthenticationState()\n        await updateAuthState(validation)\n        return validation.isValid\n      }\n      \n      return false\n    } catch (error) {\n      console.error('Manual session refresh failed:', error)\n      return false\n    }\n  }, [updateAuthState])\n\n  // Initial authentication setup\n  useEffect(() => {\n    mounted.current = true\n    \n    const initializeAuth = async () => {\n      console.log('üöÄ Initializing robust authentication...')\n      await validateAuth()\n    }\n    \n    initializeAuth()\n    \n    // Listen for auth state changes from Supabase\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(async (event, session) => {\n      if (!mounted.current) return\n      \n      console.log('üîë Auth event:', event, !!session)\n      \n      // Re-validate after any auth state change\n      setTimeout(() => validateAuth(), 100)\n    })\n    \n    return () => {\n      mounted.current = false\n      subscription.unsubscribe()\n    }\n  }, [validateAuth])\n\n  // Proactive health monitoring\n  useEffect(() => {\n    if (!authState.session || !authState.isValid) {\n      // Clear intervals if no valid session\n      if (healthCheckInterval.current) clearInterval(healthCheckInterval.current)\n      if (refreshCheckInterval.current) clearInterval(refreshCheckInterval.current)\n      return\n    }\n    \n    // Health check every 5 minutes\n    healthCheckInterval.current = setInterval(async () => {\n      if (!mounted.current) return\n      \n      console.log('üè• Running periodic health check...')\n      await validateAuth()\n    }, 5 * 60 * 1000)\n    \n    // Refresh check every minute (check if token needs refresh)\n    refreshCheckInterval.current = setInterval(async () => {\n      if (!mounted.current || !authState.session) return\n      \n      if (isTokenNearExpiry(authState.session)) {\n        console.log('üîÑ Token near expiry, refreshing...')\n        await refreshSession()\n      }\n    }, 60 * 1000)\n    \n    return () => {\n      if (healthCheckInterval.current) clearInterval(healthCheckInterval.current)\n      if (refreshCheckInterval.current) clearInterval(refreshCheckInterval.current)\n    }\n  }, [authState.session, authState.isValid, validateAuth, refreshSession])\n\n  const isAuthenticated = authState.isValid && !!authState.user && !!authState.session\n\n  // Sign up with email/password\n  const signUp = async (data: {\n    email: string\n    password: string\n    displayName?: string\n    preferredPosition?: string\n    location?: string\n  }) => {\n    try {\n      setAuthState(prev => ({ ...prev, isLoading: true }))\n      \n      const { data: authData, error } = await supabase.auth.signUp({\n        email: data.email,\n        password: data.password,\n        options: {\n          data: {\n            display_name: data.displayName || '',\n            preferred_position: data.preferredPosition || '',\n            location: data.location || ''\n          }\n        }\n      })\n\n      if (error) {\n        console.error('Sign up error:', error)\n        return { success: false, error: error.message }\n      }\n\n      // Validate the new auth state\n      await validateAuth()\n      return { success: true }\n    } catch (error) {\n      console.error('Sign up error:', error)\n      return { success: false, error: 'An unexpected error occurred' }\n    }\n  }\n\n  // Sign in with email/password\n  const signIn = async (data: { email: string; password: string }) => {\n    try {\n      setAuthState(prev => ({ ...prev, isLoading: true }))\n      \n      const { data: authData, error } = await supabase.auth.signInWithPassword({\n        email: data.email,\n        password: data.password,\n      })\n\n      if (error) {\n        console.error('Sign in error:', error)\n        setAuthState(prev => ({ ...prev, isLoading: false }))\n        \n        // Return user-friendly error messages\n        if (error.message.includes('Invalid login credentials')) {\n          return { success: false, error: 'Invalid email or password. Please try again.' }\n        }\n        if (error.message.includes('Email not confirmed')) {\n          return { success: false, error: 'Please confirm your email before signing in.' }\n        }\n        \n        return { success: false, error: error.message }\n      }\n\n      // Validate the new auth state\n      await validateAuth()\n      return { success: true }\n    } catch (error: any) {\n      console.error('Sign in error:', error)\n      setAuthState(prev => ({ ...prev, isLoading: false }))\n      \n      // Handle network errors\n      if (error?.message?.includes('fetch')) {\n        return { success: false, error: 'Network error. Please check your connection.' }\n      }\n      \n      return { success: false, error: 'An unexpected error occurred. Please try again.' }\n    } finally {\n      // Ensure loading state is cleared\n      setAuthState(prev => ({ ...prev, isLoading: false }))\n    }\n  }\n\n  // Sign in with OAuth\n  const signInWithOAuth = async (provider: 'google' | 'github' | 'discord') => {\n    try {\n      setAuthState(prev => ({ ...prev, isLoading: true }))\n      \n      const { data, error } = await supabase.auth.signInWithOAuth({\n        provider,\n        options: {\n          redirectTo: `${window.location.origin}/dashboard`\n        }\n      })\n\n      if (error) {\n        console.error('OAuth sign in error:', error)\n        return { success: false, error: error.message }\n      }\n\n      return { success: true }\n    } catch (error) {\n      console.error('OAuth sign in error:', error)\n      return { success: false, error: 'An unexpected error occurred' }\n    }\n  }\n\n  // Sign out\n  const signOut = async () => {\n    try {\n      setAuthState(prev => ({ ...prev, isLoading: true }))\n      \n      const { error } = await supabase.auth.signOut()\n\n      if (error) {\n        console.error('Sign out error:', error)\n        return { success: false, error: error.message }\n      }\n\n      // Clear all auth state\n      setAuthState({\n        user: null,\n        session: null,\n        isValid: false,\n        isLoading: false,\n        lastValidated: null,\n        validationStatus: 'signed_out'\n      })\n      \n      // Clear cookies as well\n      clearAuthCookies()\n\n      return { success: true }\n    } catch (error) {\n      console.error('Sign out error:', error)\n      return { success: false, error: 'An unexpected error occurred' }\n    }\n  }\n\n  // Reset password\n  const resetPassword = async (email: string) => {\n    try {\n      const { error } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/auth/reset-password`\n      })\n\n      if (error) {\n        console.error('Password reset error:', error)\n        return { success: false, error: error.message }\n      }\n\n      return { success: true }\n    } catch (error) {\n      console.error('Password reset error:', error)\n      return { success: false, error: 'An unexpected error occurred' }\n    }\n  }\n\n  const value: AuthContextType = {\n    // State\n    user: authState.user,\n    session: authState.session,\n    isLoading: authState.isLoading,\n    isAuthenticated,\n    isValid: authState.isValid,\n    lastValidated: authState.lastValidated,\n    \n    // Actions\n    signUp,\n    signIn,\n    signInWithOAuth,\n    signOut,\n    resetPassword,\n    \n    // Advanced\n    validateAuth,\n    refreshSession,\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider')\n  }\n  return context\n}\n\n// Export a helper for getting session in client components\nexport const getSession = async () => {\n  try {\n    const { data: { session }, error } = await supabase.auth.getSession()\n    if (error) {\n      console.error('Error getting session:', error)\n      return null\n    }\n    return session\n  } catch (error) {\n    console.error('Error getting session:', error)\n    return null\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1024, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/apps/player/src/components/layout/header.tsx"],"sourcesContent":["/**\n * Professional Header Component\n * \n * Main navigation header that makes amateur players feel like they're using\n * a professional sports platform. Includes MatchDay branding and key navigation.\n */\n\n'use client';\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { usePathname, useRouter } from 'next/navigation';\nimport { LogIn, LogOut, User } from 'lucide-react';\nimport { useAuth } from '@/components/auth/supabase-auth-provider';\n\ninterface HeaderProps {\n  className?: string;\n}\n\nexport const Header: React.FC<HeaderProps> = ({ className = '' }) => {\n  const pathname = usePathname();\n  const router = useRouter();\n  const { user, isLoading, signOut, forceSignOut } = useAuth();\n\n  // Debug logging for auth state\n  console.log('üé® Header render - Loading:', isLoading, 'User:', user?.email || 'null', 'Will show:', \n    isLoading ? 'loading' : user ? 'logout button' : 'login button');\n\n  const navItems = [\n    { href: '/dashboard', label: 'My Dashboard', icon: 'üìä' },\n    { href: '/leagues', label: 'Explore Leagues', icon: 'üèÜ' },\n    { href: '/teams', label: 'My Teams', icon: 'üë•' },\n    { href: '/matches', label: 'Matches', icon: '‚öΩ' },\n    { href: '/profile', label: 'Profile Settings', icon: '‚öôÔ∏è' },\n  ];\n\n  const isActive = (href: string) => {\n    if (href === '/') {\n      return pathname === '/';\n    }\n    return pathname.startsWith(href);\n  };\n\n  const handleLogin = () => {\n    router.push('/auth/login');\n  };\n\n  const handleLogout = async () => {\n    try {\n      console.log('üé® Header: Starting logout...');\n      const result = await signOut();\n      \n      if (result.success) {\n        console.log('üé® Header: Logout succeeded, redirecting...');\n        // Only redirect if logout actually succeeded\n        if (typeof window !== 'undefined') {\n          window.location.href = '/';\n        } else {\n          router.push('/');\n        }\n      } else {\n        console.error('üé® Header: Logout failed:', result.error);\n        \n        // If logout failed due to network issues, offer force logout\n        if (result.canForceLogout) {\n          const forceLogout = confirm(\n            `${result.error}\\n\\nWould you like to force logout? This will clear your local session but the server session may remain active.`\n          );\n          \n          if (forceLogout) {\n            console.log('üé® Header: User chose force logout');\n            const forceResult = await forceSignOut();\n            \n            if (forceResult.success) {\n              console.log('üé® Header: Force logout succeeded');\n              if (forceResult.error) {\n                // Show warning about potential server session\n                alert(`Force logout completed. ${forceResult.error}`);\n              }\n              window.location.href = '/';\n            } else {\n              alert(`Force logout failed: ${forceResult.error}`);\n            }\n          }\n        } else {\n          // Regular error message for non-network issues\n          alert(`Logout failed: ${result.error}`);\n        }\n      }\n    } catch (error) {\n      console.error('üé® Header: Logout exception:', error);\n      alert('Logout failed due to unexpected error. Please try again.');\n    }\n  };\n\n  return (\n    <header className={`bg-white dark:bg-gray-900 border-b border-gray-200 dark:border-gray-700 ${className}`}>\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex items-center justify-between h-16\">\n          {/* Logo */}\n          <Link href=\"/\" className=\"flex items-center space-x-2\">\n            <div className=\"w-8 h-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\">\n              <span className=\"text-white font-bold text-sm\">M</span>\n            </div>\n            <span className=\"text-xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\">\n              MatchDay\n            </span>\n          </Link>\n\n          {/* Navigation */}\n          <nav className=\"hidden md:flex items-center space-x-1\">\n            {navItems.map((item) => (\n              <Link\n                key={item.href}\n                href={item.href}\n                className={`flex items-center space-x-2 px-4 py-2 rounded-lg transition-colors ${\n                  isActive(item.href)\n                    ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'\n                    : 'text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800'\n                }`}\n              >\n                <span className=\"text-lg\">{item.icon}</span>\n                <span className=\"font-medium\">{item.label}</span>\n              </Link>\n            ))}\n          </nav>\n\n          {/* Mobile menu button and action */}\n          <div className=\"flex items-center space-x-4\">\n            {/* Authentication Controls */}\n            {isLoading ? (\n              <div className=\"animate-pulse bg-gray-200 dark:bg-gray-700 h-8 w-20 rounded\"></div>\n            ) : user ? (\n              <div className=\"flex items-center space-x-3\">\n                {/* User Info */}\n                <div className=\"hidden sm:flex items-center space-x-2\">\n                  <User className=\"w-5 h-5 text-gray-600 dark:text-gray-300\" />\n                  <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                    {user.profile?.display_name || user.email}\n                  </span>\n                </div>\n                \n                {/* Logout Button */}\n                <button\n                  onClick={handleLogout}\n                  className=\"flex items-center space-x-2 px-3 py-2 bg-red-600 hover:bg-red-700 text-white font-medium rounded-lg transition-colors\"\n                >\n                  <LogOut className=\"w-4 h-4\" />\n                  <span className=\"hidden sm:inline\">Logout</span>\n                </button>\n              </div>\n            ) : (\n              <button\n                onClick={handleLogin}\n                className=\"flex items-center space-x-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white px-4 py-2 rounded-lg font-medium hover:from-blue-700 hover:to-purple-700 transition-colors\"\n              >\n                <LogIn className=\"w-4 h-4\" />\n                <span>Login</span>\n              </button>\n            )}\n\n            {/* Mobile Navigation */}\n            <div className=\"md:hidden\">\n              <div className=\"flex items-center space-x-1\">\n                {navItems.slice(1).map((item) => (\n                  <Link\n                    key={item.href}\n                    href={item.href}\n                    className={`p-2 rounded-lg transition-colors ${\n                      isActive(item.href)\n                        ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'\n                        : 'text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800'\n                    }`}\n                  >\n                    <span className=\"text-xl\">{item.icon}</span>\n                  </Link>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1366, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/apps/player/src/components/providers/query-provider.tsx"],"sourcesContent":["/**\n * React Query Provider\n * \n * Sets up React Query for the application to enable data fetching\n * and caching throughout the app.\n */\n\n'use client';\n\nimport React from 'react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n\ninterface QueryProviderProps {\n  children: React.ReactNode;\n}\n\nexport const QueryProvider: React.FC<QueryProviderProps> = ({ children }) => {\n  const [queryClient] = React.useState(() => new QueryClient({\n    defaultOptions: {\n      queries: {\n        staleTime: 5 * 60 * 1000, // 5 minutes\n        refetchOnWindowFocus: false,\n        retry: 1,\n      },\n    },\n  }));\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n    </QueryClientProvider>\n  );\n};"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;AAID;AACA;AAAA;;;AAHA;;;AASO,MAAM,gBAA8C;QAAC,EAAE,QAAQ,EAAE;;IACtE,MAAM,CAAC,YAAY,GAAG,8TAAA,CAAA,UAAK,CAAC,QAAQ;kCAAC,IAAM,IAAI,yPAAA,CAAA,cAAW,CAAC;gBACzD,gBAAgB;oBACd,SAAS;wBACP,WAAW,IAAI,KAAK;wBACpB,sBAAsB;wBACtB,OAAO;oBACT;gBACF;YACF;;IAEA,qBACE,8VAAC,yRAAA,CAAA,sBAAmB;QAAC,QAAQ;kBAC1B;;;;;;AAGP;GAhBa;KAAA","debugId":null}},
    {"offset": {"line": 1419, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/apps/player/src/components/ui/toast.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, createContext, useContext, ReactNode } from 'react';\nimport { CheckCircle, XCircle, AlertCircle, Info, X } from 'lucide-react';\n\nexport type ToastType = 'success' | 'error' | 'warning' | 'info';\n\nexport interface Toast {\n  id: string;\n  type: ToastType;\n  title?: string;\n  message: string;\n  duration?: number;\n  action?: {\n    label: string;\n    onClick: () => void;\n  };\n}\n\ninterface ToastContextType {\n  toasts: Toast[];\n  showToast: (toast: Omit<Toast, 'id'>) => void;\n  hideToast: (id: string) => void;\n}\n\nconst ToastContext = createContext<ToastContextType | null>(null);\n\nexport function useToast() {\n  const context = useContext(ToastContext);\n  if (!context) {\n    throw new Error('useToast must be used within a ToastProvider');\n  }\n  return context;\n}\n\ninterface ToastProviderProps {\n  children: ReactNode;\n}\n\nexport function ToastProvider({ children }: ToastProviderProps) {\n  const [toasts, setToasts] = useState<Toast[]>([]);\n\n  const showToast = (toast: Omit<Toast, 'id'>) => {\n    const id = Math.random().toString(36).substring(2, 9);\n    const newToast: Toast = {\n      ...toast,\n      id,\n      duration: toast.duration ?? 5000\n    };\n\n    setToasts(prev => [...prev, newToast]);\n\n    if (newToast.duration > 0) {\n      setTimeout(() => {\n        hideToast(id);\n      }, newToast.duration);\n    }\n  };\n\n  const hideToast = (id: string) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  };\n\n  return (\n    <ToastContext.Provider value={{ toasts, showToast, hideToast }}>\n      {children}\n      <ToastContainer toasts={toasts} onHideToast={hideToast} />\n    </ToastContext.Provider>\n  );\n}\n\ninterface ToastContainerProps {\n  toasts: Toast[];\n  onHideToast: (id: string) => void;\n}\n\nfunction ToastContainer({ toasts, onHideToast }: ToastContainerProps) {\n  if (toasts.length === 0) return null;\n\n  return (\n    <div className=\"fixed top-4 right-4 z-50 space-y-2\">\n      {toasts.map(toast => (\n        <ToastItem\n          key={toast.id}\n          toast={toast}\n          onHide={() => onHideToast(toast.id)}\n        />\n      ))}\n    </div>\n  );\n}\n\ninterface ToastItemProps {\n  toast: Toast;\n  onHide: () => void;\n}\n\nfunction ToastItem({ toast, onHide }: ToastItemProps) {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setIsVisible(true), 50);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const handleHide = () => {\n    setIsVisible(false);\n    setTimeout(onHide, 200); // Wait for animation\n  };\n\n  const getIcon = () => {\n    const iconClass = \"w-5 h-5 flex-shrink-0\";\n    switch (toast.type) {\n      case 'success':\n        return <CheckCircle className={`${iconClass} text-green-600`} />;\n      case 'error':\n        return <XCircle className={`${iconClass} text-red-600`} />;\n      case 'warning':\n        return <AlertCircle className={`${iconClass} text-yellow-600`} />;\n      case 'info':\n        return <Info className={`${iconClass} text-blue-600`} />;\n      default:\n        return <Info className={`${iconClass} text-gray-600`} />;\n    }\n  };\n\n  const getBackgroundColor = () => {\n    switch (toast.type) {\n      case 'success':\n        return 'bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800';\n      case 'error':\n        return 'bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-800';\n      case 'warning':\n        return 'bg-yellow-50 dark:bg-yellow-900/20 border-yellow-200 dark:border-yellow-800';\n      case 'info':\n        return 'bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800';\n      default:\n        return 'bg-gray-50 dark:bg-gray-800 border-gray-200 dark:border-gray-700';\n    }\n  };\n\n  return (\n    <div\n      className={`\n        max-w-md p-4 rounded-lg border shadow-lg transition-all duration-200 transform\n        ${isVisible ? 'translate-x-0 opacity-100' : 'translate-x-full opacity-0'}\n        ${getBackgroundColor()}\n      `}\n    >\n      <div className=\"flex items-start gap-3\">\n        {getIcon()}\n        <div className=\"flex-1 min-w-0\">\n          {toast.title && (\n            <p className=\"font-medium text-gray-900 dark:text-gray-100 mb-1\">\n              {toast.title}\n            </p>\n          )}\n          <p className=\"text-sm text-gray-700 dark:text-gray-300\">\n            {toast.message}\n          </p>\n          {toast.action && (\n            <button\n              onClick={toast.action.onClick}\n              className=\"mt-2 text-sm font-medium text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300\"\n            >\n              {toast.action.label}\n            </button>\n          )}\n        </div>\n        <button\n          onClick={handleHide}\n          className=\"flex-shrink-0 text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300\"\n        >\n          <X className=\"w-4 h-4\" />\n        </button>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}