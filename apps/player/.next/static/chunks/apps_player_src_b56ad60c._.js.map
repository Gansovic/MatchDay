{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/apps/player/src/lib/hooks/use-realtime-leagues.ts"],"sourcesContent":["/**\n * Real-time Leagues Hook\n * \n * Provides real-time updates for league data using Supabase subscriptions.\n * Ensures leagues are always synchronized across all components and apps.\n * \n * @example\n * ```typescript\n * const { leagues, isConnected } = useRealtimeLeagues();\n * const { league, teams, requests } = useRealtimeLeagueDetail(leagueId);\n * ```\n */\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { supabase } from '@/lib/supabase/client';\n\nexport interface RealtimeLeagueUpdate {\n  id: string;\n  name: string;\n  description?: string;\n  sport_type: string;\n  league_type: 'recreational' | 'competitive' | 'semi-pro';\n  location?: string;\n  max_teams?: number;\n  entry_fee?: number;\n  is_active: boolean;\n  is_public: boolean;\n  auto_approve_teams?: boolean;\n  registration_deadline?: string;\n  updated_at: string;\n}\n\nexport interface RealtimeTeamJoinRequest {\n  id: string;\n  team_id: string;\n  league_id: string;\n  requested_by: string;\n  message?: string;\n  status: 'pending' | 'approved' | 'rejected' | 'withdrawn';\n  created_at: string;\n  updated_at: string;\n}\n\n/**\n * Hook for real-time leagues list with automatic synchronization\n */\nexport function useRealtimeLeagues(filters?: {\n  sportType?: string;\n  leagueType?: string;\n  isActive?: boolean;\n  isPublic?: boolean;\n}) {\n  const [isConnected, setIsConnected] = useState(false);\n  const [lastUpdate, setLastUpdate] = useState<string | null>(null);\n  const queryClient = useQueryClient();\n\n  // Build API URL with filters\n  const buildApiUrl = useCallback(() => {\n    const params = new URLSearchParams();\n    params.set('includeStats', 'true');\n    \n    if (filters?.sportType && filters.sportType !== 'all') {\n      params.set('sportType', filters.sportType);\n    }\n    if (filters?.leagueType && filters.leagueType !== 'all') {\n      params.set('leagueType', filters.leagueType);\n    }\n    if (filters?.isActive !== undefined) {\n      params.set('isActive', filters.isActive.toString());\n    }\n    if (filters?.isPublic !== undefined) {\n      params.set('isPublic', filters.isPublic.toString());\n    }\n\n    return `/api/leagues?${params.toString()}`;\n  }, [filters]);\n\n  // Get initial leagues data\n  const { data: leagues = [], isLoading, error, refetch } = useQuery({\n    queryKey: ['leagues', filters],\n    queryFn: async () => {\n      const response = await fetch(buildApiUrl());\n      if (!response.ok) {\n        throw new Error(`Failed to fetch leagues: ${response.status}`);\n      }\n      const result = await response.json();\n      if (!result.success) {\n        throw new Error(result.error || 'Failed to load leagues');\n      }\n      return result.data || [];\n    },\n    refetchInterval: isConnected ? false : 60000, // Fallback polling when not connected\n    staleTime: 30000, // Consider data stale after 30 seconds\n  });\n\n  const isVisible = usePageVisibility();\n\n  // Real-time subscription effect with page visibility optimization\n  useEffect(() => {\n    let channel: any;\n    \n    const setupLeaguesSubscription = async () => {\n      try {\n        console.log('🔄 Setting up real-time leagues subscription');\n        \n        channel = supabase\n          .channel('leagues-updates')\n          .on(\n            'postgres_changes',\n            {\n              event: '*',\n              schema: 'public',\n              table: 'leagues'\n            },\n            (payload) => {\n              console.log('🏆 League update received:', {\n                event: payload.eventType,\n                leagueId: payload.new?.id || payload.old?.id,\n                leagueName: payload.new?.name || payload.old?.name\n              });\n              \n              setLastUpdate(new Date().toISOString());\n              \n              // Invalidate leagues query to trigger refetch\n              queryClient.invalidateQueries({ queryKey: ['leagues'] });\n              \n              // Also invalidate specific league if we have the ID\n              const leagueId = payload.new?.id || payload.old?.id;\n              if (leagueId) {\n                queryClient.invalidateQueries({ \n                  queryKey: ['league', leagueId] \n                });\n                queryClient.invalidateQueries({ \n                  queryKey: ['league-detail', leagueId] \n                });\n              }\n            }\n          )\n          .on(\n            'postgres_changes',\n            {\n              event: '*',\n              schema: 'public',\n              table: 'seasons'\n            },\n            (payload) => {\n              console.log('📅 Season update received:', {\n                event: payload.eventType,\n                seasonId: payload.new?.id || payload.old?.id,\n                leagueId: payload.new?.league_id || payload.old?.league_id\n              });\n              \n              setLastUpdate(new Date().toISOString());\n              \n              // Invalidate leagues query since season changes affect league stats\n              queryClient.invalidateQueries({ queryKey: ['leagues'] });\n              \n              // Invalidate specific league if we have league_id\n              const leagueId = payload.new?.league_id || payload.old?.league_id;\n              if (leagueId) {\n                queryClient.invalidateQueries({ \n                  queryKey: ['league', leagueId] \n                });\n                queryClient.invalidateQueries({ \n                  queryKey: ['league-seasons', leagueId] \n                });\n              }\n            }\n          )\n          .on(\n            'postgres_changes',\n            {\n              event: '*',\n              schema: 'public',\n              table: 'season_teams'\n            },\n            (payload) => {\n              console.log('👥 Season team update received:', {\n                event: payload.eventType,\n                teamId: payload.new?.team_id || payload.old?.team_id,\n                seasonId: payload.new?.season_id || payload.old?.season_id\n              });\n              \n              setLastUpdate(new Date().toISOString());\n              \n              // Invalidate leagues query since team registrations affect league stats\n              queryClient.invalidateQueries({ queryKey: ['leagues'] });\n              queryClient.invalidateQueries({ queryKey: ['user', 'teams'] });\n            }\n          )\n          .subscribe((status) => {\n            if (status === 'SUBSCRIBED') {\n              setIsConnected(true);\n              console.log('✅ Connected to real-time leagues updates');\n            } else if (status === 'CLOSED') {\n              setIsConnected(false);\n              console.log('❌ Disconnected from real-time leagues updates');\n            }\n          });\n      } catch (error) {\n        console.error('Failed to setup leagues subscription:', error);\n        setIsConnected(false);\n      }\n    };\n\n    // Only setup subscription when page is visible\n    if (isVisible) {\n      setupLeaguesSubscription();\n    } else {\n      console.log('📱 Page not visible, skipping subscription setup');\n    }\n\n    return () => {\n      if (channel) {\n        channel.unsubscribe();\n        setIsConnected(false);\n        console.log('🔌 Unsubscribed from leagues updates');\n      }\n    };\n  }, [queryClient, isVisible]);\n\n  const forceRefresh = useCallback(() => {\n    console.log('🔄 Force refreshing leagues data');\n    queryClient.invalidateQueries({ queryKey: ['leagues'] });\n  }, [queryClient]);\n\n  return {\n    leagues,\n    isLoading,\n    error,\n    isConnected,\n    lastUpdate,\n    refetch,\n    forceRefresh\n  };\n}\n\n/**\n * Hook for real-time updates on a specific league with detailed data\n */\nexport function useRealtimeLeagueDetail(leagueId: string | null) {\n  const [isConnected, setIsConnected] = useState(false);\n  const [lastUpdate, setLastUpdate] = useState<string | null>(null);\n  const queryClient = useQueryClient();\n\n  // Get league details\n  const { data: league, isLoading: leagueLoading } = useQuery({\n    queryKey: ['league', leagueId],\n    queryFn: async () => {\n      if (!leagueId) return null;\n      const response = await fetch(`/api/leagues/${leagueId}`);\n      if (!response.ok) throw new Error('Failed to fetch league');\n      const result = await response.json();\n      return result.success ? result.data : null;\n    },\n    enabled: !!leagueId,\n    refetchInterval: isConnected ? false : 30000,\n    staleTime: 15000,\n  });\n\n  // Get league seasons\n  const { data: seasons } = useQuery({\n    queryKey: ['league-seasons', leagueId],\n    queryFn: async () => {\n      if (!leagueId) return [];\n      const response = await fetch(`/api/leagues/${leagueId}/seasons`);\n      if (!response.ok) throw new Error('Failed to fetch seasons');\n      const result = await response.json();\n      return result.success ? result.data : [];\n    },\n    enabled: !!leagueId,\n    refetchInterval: isConnected ? false : 60000,\n    staleTime: 30000,\n  });\n\n  const isVisible = usePageVisibility();\n\n  // Real-time subscription for specific league with page visibility optimization\n  useEffect(() => {\n    if (!leagueId) return;\n\n    let channel: any;\n\n    const setupLeagueSubscription = async () => {\n      try {\n        console.log(`🔄 Setting up real-time subscription for league ${leagueId}`);\n        \n        channel = supabase\n          .channel(`league-${leagueId}`)\n          .on(\n            'postgres_changes',\n            {\n              event: '*',\n              schema: 'public',\n              table: 'leagues',\n              filter: `id=eq.${leagueId}`\n            },\n            (payload) => {\n              console.log(`🏆 League ${leagueId} update:`, {\n                event: payload.eventType,\n                changes: payload.new ? Object.keys(payload.new) : []\n              });\n              \n              setLastUpdate(new Date().toISOString());\n              \n              // Invalidate specific league queries\n              queryClient.invalidateQueries({ queryKey: ['league', leagueId] });\n              queryClient.invalidateQueries({ queryKey: ['leagues'] });\n            }\n          )\n          .on(\n            'postgres_changes',\n            {\n              event: '*',\n              schema: 'public',\n              table: 'seasons',\n              filter: `league_id=eq.${leagueId}`\n            },\n            (payload) => {\n              console.log(`📅 Season update for league ${leagueId}:`, {\n                event: payload.eventType,\n                seasonId: payload.new?.id || payload.old?.id\n              });\n              \n              setLastUpdate(new Date().toISOString());\n              \n              queryClient.invalidateQueries({ \n                queryKey: ['league-seasons', leagueId] \n              });\n              queryClient.invalidateQueries({ queryKey: ['leagues'] });\n            }\n          )\n          .subscribe((status) => {\n            if (status === 'SUBSCRIBED') {\n              setIsConnected(true);\n              console.log(`✅ Connected to league ${leagueId} updates`);\n            } else if (status === 'CLOSED') {\n              setIsConnected(false);\n              console.log(`❌ Disconnected from league ${leagueId} updates`);\n            }\n          });\n      } catch (error) {\n        console.error('Failed to setup league subscription:', error);\n        setIsConnected(false);\n      }\n    };\n\n    // Only setup subscription when page is visible\n    if (isVisible) {\n      setupLeagueSubscription();\n    } else {\n      console.log(`📱 Page not visible, skipping league ${leagueId} subscription setup`);\n    }\n\n    return () => {\n      if (channel) {\n        channel.unsubscribe();\n        setIsConnected(false);\n        console.log(`🔌 Unsubscribed from league ${leagueId} updates`);\n      }\n    };\n  }, [leagueId, queryClient, isVisible]);\n\n  const forceRefresh = useCallback(() => {\n    if (leagueId) {\n      console.log(`🔄 Force refreshing league ${leagueId} data`);\n      queryClient.invalidateQueries({ queryKey: ['league', leagueId] });\n      queryClient.invalidateQueries({ queryKey: ['league-seasons', leagueId] });\n    }\n  }, [leagueId, queryClient]);\n\n  return {\n    league,\n    seasons,\n    isLoading: leagueLoading,\n    isConnected,\n    lastUpdate,\n    forceRefresh\n  };\n}\n\n/**\n * Hook for real-time team join requests updates\n */\nexport function useRealtimeTeamRequests(leagueId?: string | null) {\n  const [isConnected, setIsConnected] = useState(false);\n  const [recentRequests, setRecentRequests] = useState<RealtimeTeamJoinRequest[]>([]);\n  const queryClient = useQueryClient();\n\n  useEffect(() => {\n    let channel: any;\n\n    const setupRequestsSubscription = async () => {\n      try {\n        console.log('🔄 Setting up real-time team requests subscription');\n        \n        const channelName = leagueId ? `requests-league-${leagueId}` : 'requests-global';\n        \n        channel = supabase\n          .channel(channelName)\n          .on(\n            'postgres_changes',\n            {\n              event: '*',\n              schema: 'public',\n              table: 'team_join_requests',\n              ...(leagueId ? { filter: `league_id=eq.${leagueId}` } : {})\n            },\n            (payload) => {\n              console.log('📋 Team request update:', {\n                event: payload.eventType,\n                requestId: payload.new?.id || payload.old?.id,\n                status: payload.new?.status || payload.old?.status,\n                leagueId: payload.new?.league_id || payload.old?.league_id\n              });\n              \n              // Invalidate relevant queries\n              queryClient.invalidateQueries({ queryKey: ['team-requests'] });\n              queryClient.invalidateQueries({ queryKey: ['pending-requests'] });\n              queryClient.invalidateQueries({ queryKey: ['leagues'] });\n              \n              // Add to recent requests for notifications\n              if (payload.new && payload.eventType === 'INSERT') {\n                const newRequest: RealtimeTeamJoinRequest = {\n                  id: payload.new.id,\n                  team_id: payload.new.team_id,\n                  league_id: payload.new.league_id,\n                  requested_by: payload.new.requested_by,\n                  message: payload.new.message,\n                  status: payload.new.status,\n                  created_at: payload.new.created_at,\n                  updated_at: payload.new.updated_at\n                };\n                \n                setRecentRequests(prev => [newRequest, ...prev.slice(0, 9)]);\n                \n                // Auto-remove after 30 seconds\n                setTimeout(() => {\n                  setRecentRequests(prev => prev.filter(r => r.id !== newRequest.id));\n                }, 30000);\n              }\n            }\n          )\n          .subscribe((status) => {\n            if (status === 'SUBSCRIBED') {\n              setIsConnected(true);\n              console.log('✅ Connected to team requests updates');\n            } else if (status === 'CLOSED') {\n              setIsConnected(false);\n              console.log('❌ Disconnected from team requests updates');\n            }\n          });\n      } catch (error) {\n        console.error('Failed to setup requests subscription:', error);\n        setIsConnected(false);\n      }\n    };\n\n    setupRequestsSubscription();\n\n    return () => {\n      if (channel) {\n        channel.unsubscribe();\n        setIsConnected(false);\n        console.log('🔌 Unsubscribed from team requests updates');\n      }\n    };\n  }, [leagueId, queryClient]);\n\n  const clearRecentRequests = useCallback(() => {\n    setRecentRequests([]);\n  }, []);\n\n  return {\n    isConnected,\n    recentRequests,\n    clearRecentRequests\n  };\n}\n\n/**\n * Page visibility hook to optimize subscriptions\n */\nexport function usePageVisibility() {\n  const [isVisible, setIsVisible] = useState(() => {\n    if (typeof document === 'undefined') return true;\n    return !document.hidden;\n  });\n\n  useEffect(() => {\n    if (typeof document === 'undefined') return;\n\n    const handleVisibilityChange = () => {\n      setIsVisible(!document.hidden);\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    \n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, []);\n\n  return isVisible;\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 593, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/apps/player/src/components/leagues/league-management.tsx"],"sourcesContent":["/**\n * League Management Component\n * \n * Comprehensive league discovery and team management interface that allows:\n * - Browsing available leagues\n * - Joining leagues with teams\n * - Leaving leagues\n * - Managing team participation in leagues\n */\n\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { \n  Trophy, \n  Users, \n  Calendar, \n  MapPin, \n  Star,\n  Search,\n  Filter,\n  X,\n  Check,\n  Clock,\n  Target,\n  ChevronRight,\n  Loader2,\n  AlertCircle,\n  UserPlus,\n  UserMinus,\n  Eye,\n  Wifi,\n  WifiOff,\n  RefreshCw\n} from 'lucide-react';\nimport { useRealtimeLeagues, usePageVisibility } from '@/lib/hooks/use-realtime-leagues';\n\nexport interface League {\n  id: string;\n  name: string;\n  description?: string;\n  sport_type: string;\n  league_type: 'recreational' | 'competitive' | 'semi-pro';\n  location?: string;\n  season_start?: string;\n  season_end?: string;\n  max_teams?: number;\n  entry_fee?: number;\n  is_active: boolean;\n  is_public: boolean;\n  created_at: string;\n  teamCount: number;\n  availableSpots: number;\n  teams?: {\n    id: string;\n    name: string;\n    team_color?: string;\n    is_recruiting: boolean;\n  }[];\n  userTeams?: {\n    id: string;\n    name: string;\n    isInLeague: boolean;\n    canJoin: boolean;\n    canLeave: boolean;\n  }[];\n}\n\nexport interface UserTeam {\n  id: string;\n  name: string;\n  team_color?: string;\n  is_captain: boolean;\n  league_id?: string;\n  league_name?: string;\n}\n\ninterface LeagueManagementProps {\n  userId?: string;\n  onTeamJoinedLeague?: (teamId: string, leagueId: string) => void;\n  onTeamLeftLeague?: (teamId: string, leagueId: string) => void;\n}\n\nexport const LeagueManagement: React.FC<LeagueManagementProps> = ({\n  userId,\n  onTeamJoinedLeague,\n  onTeamLeftLeague\n}) => {\n  const [userTeams, setUserTeams] = useState<UserTeam[]>([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedLeagueType, setSelectedLeagueType] = useState<string>('all');\n  const [selectedSport, setSelectedSport] = useState<string>('all');\n  const [showJoinModal, setShowJoinModal] = useState(false);\n  const [selectedLeague, setSelectedLeague] = useState<League | null>(null);\n  const [selectedTeam, setSelectedTeam] = useState<string>('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [success, setSuccess] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Navigation\n  const router = useRouter();\n\n  // Page visibility for optimized subscriptions\n  const isPageVisible = usePageVisibility();\n  \n  // Real-time leagues data with filters\n  const {\n    leagues: realtimeLeagues,\n    isLoading,\n    isConnected,\n    lastUpdate,\n    forceRefresh\n  } = useRealtimeLeagues({\n    sportType: selectedSport,\n    leagueType: selectedLeagueType,\n    isActive: true,\n    isPublic: true\n  });\n\n  // Load user teams only (leagues now come from real-time hook)\n  useEffect(() => {\n    if (userId) {\n      loadUserTeams();\n    }\n  }, [userId]);\n\n  const loadUserTeams = async () => {\n    if (!userId) return;\n    \n    try {\n      const response = await fetch(`/api/user/teams`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        if (response.status === 404) {\n          setUserTeams([]);\n          return;\n        }\n        throw new Error(`Failed to fetch user teams: ${response.status}`);\n      }\n\n      const result = await response.json();\n      \n      if (!result.success) {\n        throw new Error(result.error || 'Failed to load user teams');\n      }\n\n      // Transform API data to match component interface\n      const teams = (result.data || []).map(membership => ({\n        id: membership.team.id,\n        name: membership.team.name,\n        team_color: membership.team.team_color,\n        is_captain: membership.role === 'captain',\n        league_id: membership.team.league?.id || null,\n        league_name: membership.team.league?.name || null\n      }));\n      \n      setUserTeams(teams);\n    } catch (error) {\n      console.error('Failed to load user teams:', error);\n      // Don't throw here, just set empty teams so leagues can still load\n      setUserTeams([]);\n    }\n  };\n\n\n  const leagueTypes = [\n    { value: 'all', label: 'All Levels' },\n    { value: 'recreational', label: 'Recreational', icon: '🌟' },\n    { value: 'competitive', label: 'Competitive', icon: '🔥' },\n    { value: 'semi-pro', label: 'Semi-Pro', icon: '⚡' }\n  ];\n\n  const sports = [\n    { value: 'all', label: 'All Sports' },\n    { value: 'football', label: 'Football', icon: '⚽' }\n  ];\n\n  // Process leagues with user team information and apply search filtering\n  const processedLeagues = realtimeLeagues.map(league => ({\n    ...league,\n    userTeams: userTeams.map(team => ({\n      id: team.id,\n      name: team.name,\n      isInLeague: team.league_id === league.id,\n      canJoin: !team.league_id && league.availableSpots > 0,\n      canLeave: team.league_id === league.id\n    }))\n  }));\n\n  // Apply search filter (league type and sport filtering is done by the hook)\n  const filteredLeagues = processedLeagues.filter(league => {\n    if (!searchQuery) return true;\n    \n    const searchLower = searchQuery.toLowerCase();\n    return league.name.toLowerCase().includes(searchLower) ||\n           league.description?.toLowerCase().includes(searchLower) ||\n           league.location?.toLowerCase().includes(searchLower);\n  });\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  const getLeagueTypeIcon = (type: string) => {\n    switch (type) {\n      case 'recreational': return '🌟';\n      case 'competitive': return '🔥';\n      case 'semi-pro': return '⚡';\n      default: return '🏆';\n    }\n  };\n\n  const handleJoinLeague = (league: League) => {\n    setSelectedLeague(league);\n    setSelectedTeam('');\n    setShowJoinModal(true);\n  };\n\n  const handleViewLeague = (league: League) => {\n    router.push(`/leagues/${league.id}`);\n  };\n\n  const handleConfirmJoin = async () => {\n    if (!selectedLeague || !selectedTeam) return;\n\n    setIsSubmitting(true);\n    setError(null);\n    \n    try {\n      // First, get the league details to check if it requires manual approval\n      const leagueResponse = await fetch(`/api/leagues/${selectedLeague.id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      const leagueResult = await leagueResponse.json();\n      \n      if (!leagueResult.success) {\n        throw new Error(leagueResult.error || 'Failed to get league details');\n      }\n\n      const leagueDetails = leagueResult.data;\n      \n      // Check if league requires manual approval\n      if (!leagueDetails.auto_approve_teams) {\n        // Create join request instead of directly joining\n        const requestResponse = await fetch(`/api/teams/${selectedTeam}/request-league-join`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            leagueId: selectedLeague.id,\n            requestedBy: userId,\n            message: `Request to join ${selectedLeague.name} league`\n          }),\n        });\n\n        const requestResult = await requestResponse.json();\n\n        if (!requestResult.success) {\n          // Handle specific request error types\n          if (requestResult.error?.includes('already has a')) {\n            setError(requestResult.error);\n            setShowJoinModal(false);\n          } else {\n            throw new Error(requestResult.error || 'Failed to create join request');\n          }\n          return;\n        }\n\n        setShowJoinModal(false);\n        setSuccess(requestResult.data?.message || `Join request submitted for ${selectedLeague.name}! Please wait for admin approval.`);\n        setTimeout(() => setSuccess(null), 5000);\n        return;\n      }\n\n      // League has auto-approval, proceed with direct join\n      const response = await fetch(`/api/teams/${selectedTeam}/join-league`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          leagueId: selectedLeague.id\n        }),\n      });\n\n      const result = await response.json();\n\n      if (!result.success) {\n        // Check for specific error types\n        if (result.error?.includes('already registered')) {\n          // Team is already in this season\n          setError(result.error);\n          setShowJoinModal(false);\n        } else if (result.error?.includes('No active season')) {\n          // No active season available\n          setError(result.error);\n        } else if (result.error?.includes('is full')) {\n          // Season is full\n          setError(result.error);\n        } else if (result.redirect_to_auto_join) {\n          // Redirect error from request endpoint\n          setError('This league requires manual approval. Please wait for admin approval.');\n        } else {\n          // Generic error\n          throw new Error(result.error || 'Failed to join league');\n        }\n        return;\n      }\n      \n      // Update local user teams state - real-time hook will handle league updates\n      const seasonInfo = result.data?.season;\n      setUserTeams(prev => prev.map(team => \n        team.id === selectedTeam \n          ? { ...team, league_id: selectedLeague.id, league_name: selectedLeague.name }\n          : team\n      ));\n\n      setShowJoinModal(false);\n      \n      // Show success message with season information\n      const successMessage = result.data?.message || \n        (seasonInfo \n          ? `Successfully joined ${selectedLeague.name} for the ${seasonInfo.display_name} season!`\n          : `Successfully joined ${selectedLeague.name}!`);\n      \n      setSuccess(successMessage);\n      onTeamJoinedLeague?.(selectedTeam, selectedLeague.id);\n      \n      // Real-time hook will automatically update league data, so no manual refresh needed\n      console.log('✅ Team joined league - real-time updates will handle data sync');\n      \n      setTimeout(() => setSuccess(null), 5000);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to join league. Please try again.';\n      setError(errorMessage);\n      setTimeout(() => setError(null), 7000);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleLeaveLeague = async (teamId: string, leagueId: string) => {\n    if (!confirm('Are you sure you want to leave this league? This will remove your team from the current season.')) return;\n\n    setError(null);\n    \n    try {\n      // Real API call to leave league (now leaves the season)\n      const response = await fetch(`/api/teams/${teamId}/leave-league`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      const result = await response.json();\n\n      if (!result.success) {\n        throw new Error(result.error || 'Failed to leave league');\n      }\n      \n      const league = filteredLeagues.find(l => l.id === leagueId);\n      const seasonInfo = result.data?.season;\n      \n      // Update local user teams state - real-time hook will handle league updates\n      setUserTeams(prev => prev.map(team => \n        team.id === teamId \n          ? { ...team, league_id: undefined, league_name: undefined }\n          : team\n      ));\n\n      // Show success message with season information\n      const successMessage = result.data?.message || \n        (seasonInfo \n          ? `Left the ${seasonInfo.display_name} season of ${league?.name} successfully!`\n          : `Left ${league?.name} successfully!`);\n      \n      setSuccess(successMessage);\n      onTeamLeftLeague?.(teamId, leagueId);\n      \n      // Real-time hook will automatically update league data\n      console.log('✅ Team left league - real-time updates will handle data sync');\n      \n      setTimeout(() => setSuccess(null), 5000);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to leave league. Please try again.';\n      setError(errorMessage);\n      setTimeout(() => setError(null), 5000);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-8\">\n        <div className=\"flex items-center justify-center\">\n          <Loader2 className=\"w-8 h-8 animate-spin text-blue-600\" />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">\n            League Management\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            Join leagues with your teams and manage your competition participation\n          </p>\n        </div>\n        \n        {/* Real-time Status Indicator */}\n        <div className=\"flex items-center gap-3\">\n          <div className=\"flex items-center gap-2 px-3 py-1 rounded-full bg-gray-100 dark:bg-gray-800\">\n            {isConnected ? (\n              <>\n                <Wifi className=\"w-4 h-4 text-green-500\" />\n                <span className=\"text-sm text-green-600 dark:text-green-400\">Live</span>\n              </>\n            ) : (\n              <>\n                <WifiOff className=\"w-4 h-4 text-orange-500\" />\n                <span className=\"text-sm text-orange-600 dark:text-orange-400\">Offline</span>\n              </>\n            )}\n          </div>\n          \n          {/* Manual Refresh Button */}\n          <button\n            onClick={forceRefresh}\n            className=\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg transition-colors\"\n            title=\"Refresh leagues\"\n          >\n            <RefreshCw className=\"w-4 h-4\" />\n          </button>\n        </div>\n      </div>\n\n      {/* Success/Error Messages */}\n      {success && (\n        <div className=\"p-4 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg\">\n          <div className=\"flex items-center gap-2 text-green-800 dark:text-green-300\">\n            <Check className=\"w-4 h-4\" />\n            {success}\n          </div>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-red-800 dark:text-red-300\">\n              <AlertCircle className=\"w-4 h-4\" />\n              {error}\n            </div>\n            <button onClick={() => setError(null)} className=\"text-red-600\">\n              <X className=\"w-4 h-4\" />\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* My Teams in Leagues */}\n      {userTeams.some(team => team.league_id) && (\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6\">\n          <h2 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">\n            My Teams in Leagues\n          </h2>\n          <div className=\"space-y-3\">\n            {userTeams\n              .filter(team => team.league_id)\n              .map(team => (\n                <div key={team.id} className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-900/20 rounded-lg\">\n                  <div className=\"flex items-center gap-3\">\n                    <div \n                      className=\"w-8 h-8 rounded-full flex items-center justify-center text-white font-bold text-sm\"\n                      style={{ backgroundColor: team.team_color }}\n                    >\n                      {team.name.charAt(0)}\n                    </div>\n                    <div>\n                      <div className=\"font-medium text-gray-900 dark:text-white\">\n                        {team.name}\n                      </div>\n                      <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        in {team.league_name}\n                      </div>\n                    </div>\n                  </div>\n                  <button\n                    onClick={() => handleLeaveLeague(team.id, team.league_id!)}\n                    className=\"flex items-center gap-2 px-3 py-1 text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-lg transition-colors text-sm\"\n                  >\n                    <UserMinus className=\"w-4 h-4\" />\n                    Leave League\n                  </button>\n                </div>\n              ))}\n          </div>\n        </div>\n      )}\n\n      {/* Search and Filters */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search leagues...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n\n          <select\n            value={selectedLeagueType}\n            onChange={(e) => setSelectedLeagueType(e.target.value)}\n            className=\"px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            {leagueTypes.map(type => (\n              <option key={type.value} value={type.value}>\n                {type.icon ? `${type.icon} ${type.label}` : type.label}\n              </option>\n            ))}\n          </select>\n\n          <select\n            value={selectedSport}\n            onChange={(e) => setSelectedSport(e.target.value)}\n            className=\"px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            {sports.map(sport => (\n              <option key={sport.value} value={sport.value}>\n                {sport.icon ? `${sport.icon} ${sport.label}` : sport.label}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* Leagues Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {filteredLeagues.map((league) => (\n          <div key={league.id} className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6 hover:shadow-lg transition-shadow\">\n            {/* League Header */}\n            <div className=\"flex items-start justify-between mb-4\">\n              <div className=\"flex-1\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <h3 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                    {league.name}\n                  </h3>\n                  <span className=\"text-xl\">\n                    {getLeagueTypeIcon(league.league_type)}\n                  </span>\n                </div>\n                {league.description && (\n                  <p className=\"text-gray-600 dark:text-gray-400 text-sm mb-2\">\n                    {league.description}\n                  </p>\n                )}\n              </div>\n            </div>\n\n            {/* League Stats */}\n            <div className=\"grid grid-cols-3 gap-4 mb-4\">\n              <div className=\"text-center\">\n                <div className=\"font-bold text-gray-900 dark:text-white\">\n                  {league.teamCount}/{league.max_teams || '∞'}\n                </div>\n                <div className=\"text-xs text-gray-500\">Teams</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"font-bold text-gray-900 dark:text-white capitalize\">\n                  {league.league_type}\n                </div>\n                <div className=\"text-xs text-gray-500\">Level</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"font-bold text-gray-900 dark:text-white\">\n                  {league.entry_fee ? `$${league.entry_fee}` : 'Free'}\n                </div>\n                <div className=\"text-xs text-gray-500\">Entry</div>\n              </div>\n            </div>\n\n            {/* League Details */}\n            <div className=\"space-y-2 mb-4\">\n              {league.location && (\n                <div className=\"flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400\">\n                  <MapPin className=\"w-4 h-4\" />\n                  {league.location}\n                </div>\n              )}\n              {league.season_start && league.season_end && (\n                <div className=\"flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400\">\n                  <Calendar className=\"w-4 h-4\" />\n                  {formatDate(league.season_start)} - {formatDate(league.season_end)}\n                </div>\n              )}\n            </div>\n\n            {/* Teams in League */}\n            {league.teams && league.teams.length > 0 && (\n              <div className=\"mb-4\">\n                <div className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Teams ({league.teams.length})\n                </div>\n                <div className=\"flex gap-2 flex-wrap\">\n                  {league.teams.slice(0, 3).map(team => (\n                    <div key={team.id} className=\"flex items-center gap-1 px-2 py-1 bg-gray-100 dark:bg-gray-700 rounded text-xs\">\n                      <div \n                        className=\"w-3 h-3 rounded-full\"\n                        style={{ backgroundColor: team.team_color }}\n                      />\n                      {team.name}\n                    </div>\n                  ))}\n                  {league.teams.length > 3 && (\n                    <div className=\"px-2 py-1 bg-gray-100 dark:bg-gray-700 rounded text-xs text-gray-600 dark:text-gray-400\">\n                      +{league.teams.length - 3} more\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {/* Action Buttons */}\n            <div className=\"space-y-2\">\n              {/* View League Button - Always Available */}\n              <button\n                onClick={() => handleViewLeague(league)}\n                className=\"w-full flex items-center justify-center gap-2 px-4 py-2 bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-200 font-medium rounded-lg transition-colors\"\n              >\n                <Eye className=\"w-4 h-4\" />\n                View League\n              </button>\n              \n              {/* Join Button - Only when spots available */}\n              {league.availableSpots > 0 && (\n                <button\n                  onClick={() => handleJoinLeague(league)}\n                  className=\"w-full flex items-center justify-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors\"\n                >\n                  <UserPlus className=\"w-4 h-4\" />\n                  Join with Team\n                </button>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {filteredLeagues.length === 0 && (\n        <div className=\"text-center py-12\">\n          <Trophy className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\n          <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">\n            No leagues found\n          </h3>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            Try adjusting your search or filter criteria\n          </p>\n        </div>\n      )}\n\n      {/* Join League Modal */}\n      {showJoinModal && selectedLeague && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 w-full max-w-md\">\n            <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\n              <h3 className=\"text-lg font-bold text-gray-900 dark:text-white\">\n                Join {selectedLeague.name}\n              </h3>\n              <button\n                onClick={() => setShowJoinModal(false)}\n                className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\n              >\n                <X className=\"w-5 h-5\" />\n              </button>\n            </div>\n\n            <div className=\"p-6\">\n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Select Team *\n                </label>\n                <select\n                  value={selectedTeam}\n                  onChange={(e) => setSelectedTeam(e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value=\"\">Choose a team...</option>\n                  {userTeams\n                    .filter(team => !team.league_id && team.is_captain)\n                    .map(team => (\n                      <option key={team.id} value={team.id}>\n                        {team.name}\n                      </option>\n                    ))}\n                </select>\n                {userTeams.filter(team => !team.league_id && team.is_captain).length === 0 && (\n                  <p className=\"mt-2 text-sm text-yellow-600 dark:text-yellow-400\">\n                    You need to be a captain of a team that's not in a league to join.\n                  </p>\n                )}\n              </div>\n\n              <div className=\"mb-6 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n                <h4 className=\"font-medium text-gray-900 dark:text-white mb-2\">\n                  League Details\n                </h4>\n                <div className=\"text-sm text-gray-600 dark:text-gray-400 space-y-1\">\n                  <div>Type: {selectedLeague.league_type}</div>\n                  <div>Location: {selectedLeague.location}</div>\n                  <div>Entry Fee: {selectedLeague.entry_fee ? `$${selectedLeague.entry_fee}` : 'Free'}</div>\n                  <div>Available Spots: {selectedLeague.availableSpots}</div>\n                </div>\n              </div>\n\n              <div className=\"flex items-center justify-end gap-3\">\n                <button\n                  onClick={() => setShowJoinModal(false)}\n                  disabled={isSubmitting}\n                  className=\"px-4 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 font-medium rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors disabled:opacity-50\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleConfirmJoin}\n                  disabled={isSubmitting || !selectedTeam}\n                  className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors disabled:opacity-50 flex items-center gap-2\"\n                >\n                  {isSubmitting ? (\n                    <>\n                      <Loader2 className=\"w-4 h-4 animate-spin\" />\n                      Joining...\n                    </>\n                  ) : (\n                    <>\n                      <UserPlus className=\"w-4 h-4\" />\n                      Join League\n                    </>\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n    </div>\n  );\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1885, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/apps/player/src/components/leagues/league-standings.tsx"],"sourcesContent":["/**\n * League Standings Component\n * \n * Automatic league standings calculation from match results with:\n * - Real-time standings updates from completed matches\n * - Goal difference and goals for/against tracking\n * - Recent form and position change indicators\n * - Configurable point systems (3-1-0, 2-1-0, etc.)\n * - Championship, relegation, and playoffs indicators\n * - Head-to-head record comparisons\n */\n\n'use client';\n\nimport React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\nimport { \n  Trophy, \n  TrendingUp, \n  TrendingDown, \n  Minus,\n  Target,\n  Users,\n  Calendar,\n  ChevronUp,\n  ChevronDown,\n  Crown,\n  AlertTriangle,\n  Star,\n  Circle,\n  Zap,\n  BarChart3,\n  ArrowUp,\n  ArrowDown,\n  Hash,\n  Filter,\n  RefreshCw\n} from 'lucide-react';\n\nexport interface Match {\n  id: string;\n  league_id: string;\n  season_id?: string;\n  home_team_id: string;\n  home_team_name: string;\n  away_team_id: string;\n  away_team_name: string;\n  home_score?: number;\n  away_score?: number;\n  status: 'scheduled' | 'live' | 'completed' | 'cancelled';\n  match_date: string;\n  venue?: string;\n  created_at?: string;\n  updated_at?: string;\n}\n\nexport interface Team {\n  id: string;\n  name: string;\n  team_color?: string;\n  league_id: string;\n}\n\nexport interface StandingsTeam {\n  id: string;\n  name: string;\n  team_color?: string;\n  position: number;\n  previous_position?: number;\n  played: number;\n  won: number;\n  drawn: number;\n  lost: number;\n  goals_for: number;\n  goals_against: number;\n  goal_difference: number;\n  points: number;\n  recent_form: ('W' | 'D' | 'L')[];\n  head_to_head?: { [teamId: string]: { won: number; drawn: number; lost: number; } };\n}\n\nexport interface LeagueStandings {\n  id: string;\n  name: string;\n  teams: StandingsTeam[];\n  updated_at: string;\n  point_system: {\n    win: number;\n    draw: number;\n    loss: number;\n  };\n  promotion_spots?: number;\n  relegation_spots?: number;\n  playoff_spots?: number;\n}\n\ninterface LeagueStandingsProps {\n  leagueId: string;\n  leagueName?: string;\n  currentSeasonId?: string;\n  matches?: Match[];\n  teams?: Team[];\n  pointSystem?: { win: number; draw: number; loss: number; };\n  promotionSpots?: number;\n  relegationSpots?: number;\n  playoffSpots?: number;\n  showForm?: boolean;\n  showGoalDifference?: boolean;\n  showFinalRankings?: boolean;\n  className?: string;\n  onTeamClick?: (teamId: string) => void;\n}\n\nexport const LeagueStandings: React.FC<LeagueStandingsProps> = ({\n  leagueId,\n  leagueName,\n  currentSeasonId,\n  matches: propMatches,\n  teams: propTeams,\n  pointSystem = { win: 3, draw: 1, loss: 0 },\n  promotionSpots = 0,\n  relegationSpots = 0,\n  playoffSpots = 0,\n  showForm = true,\n  showGoalDifference = true,\n  showFinalRankings = false,\n  className = '',\n  onTeamClick\n}) => {\n  const [matches, setMatches] = useState<Match[]>([]);\n  const [teams, setTeams] = useState<Team[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastUpdated, setLastUpdated] = useState<Date>(new Date());\n  const [selectedTeam, setSelectedTeam] = useState<string | null>(null);\n  const loadingRef = useRef(false);\n\n  const loadStandingsData = useCallback(async () => {\n    // Prevent multiple simultaneous loads\n    if (loadingRef.current) return;\n    loadingRef.current = true;\n    \n    setIsLoading(true);\n    try {\n      // Fetch matches and teams from API\n      const matchesUrl = currentSeasonId \n        ? `/api/leagues/${leagueId}/matches?season_id=${currentSeasonId}`\n        : `/api/leagues/${leagueId}/matches`;\n      \n      const [matchesRes, teamsRes] = await Promise.all([\n        fetch(matchesUrl),\n        fetch(`/api/leagues/${leagueId}/teams`)\n      ]);\n\n      if (!matchesRes.ok || !teamsRes.ok) {\n        throw new Error('Failed to fetch data');\n      }\n\n      const matchesData = await matchesRes.json();\n      const teamsData = await teamsRes.json();\n\n      if (matchesData.success && teamsData.success) {\n        setMatches(matchesData.data || []);\n        setTeams(teamsData.data || []);\n        setLastUpdated(new Date()); // Update timestamp when data is successfully loaded\n      } else {\n        console.error('API returned error:', matchesData.error || teamsData.error);\n        setMatches([]);\n        setTeams([]);\n      }\n    } catch (error) {\n      console.error('Failed to load standings data:', error);\n      setMatches([]);\n      setTeams([]);\n    } finally {\n      setIsLoading(false);\n      loadingRef.current = false;\n    }\n  }, [leagueId, currentSeasonId]);\n\n  // Load data when component mounts or dependencies change\n  useEffect(() => {\n    // If props are provided, use them\n    if (propMatches && propTeams) {\n      setMatches(propMatches);\n      setTeams(propTeams);\n      setIsLoading(false);\n      setLastUpdated(new Date()); // Update timestamp when data is provided via props\n      return;\n    }\n    \n    // For now, disable self-loading to prevent conflicts with parent\n    // TODO: Either receive props from parent OR implement proper data sharing\n    console.log('LeagueStandings: No props provided, loading disabled to prevent loops');\n    setMatches([]);\n    setTeams([]);\n    setIsLoading(false);\n    return;\n    \n    // Otherwise, fetch data if we have a league ID\n    if (!leagueId) {\n      setIsLoading(false);\n      return;\n    }\n    \n    // Only fetch if not already loading\n    if (loadingRef.current) return;\n    \n    loadStandingsData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [propMatches, propTeams, leagueId, currentSeasonId]); // Don't depend on loadStandingsData to avoid circular dependency\n\n  // Calculate standings from match results (without timestamp to prevent infinite loop)\n  const standingsData = useMemo(() => {\n    const teamStats: { [teamId: string]: StandingsTeam } = {};\n    const completedMatches = matches.filter(m => m.status === 'completed' && m.home_score !== undefined && m.away_score !== undefined);\n    \n    // Initialize team stats\n    teams.forEach(team => {\n      teamStats[team.id] = {\n        id: team.id,\n        name: team.name,\n        team_color: team.team_color,\n        position: 0,\n        played: 0,\n        won: 0,\n        drawn: 0,\n        lost: 0,\n        goals_for: 0,\n        goals_against: 0,\n        goal_difference: 0,\n        points: 0,\n        recent_form: [],\n        head_to_head: {}\n      };\n    });\n\n    // Process matches to calculate stats\n    completedMatches.forEach(match => {\n      const homeTeam = teamStats[match.home_team_id];\n      const awayTeam = teamStats[match.away_team_id];\n      \n      if (!homeTeam || !awayTeam) return;\n\n      const homeScore = match.home_score!;\n      const awayScore = match.away_score!;\n      \n      // Update played games\n      homeTeam.played++;\n      awayTeam.played++;\n      \n      // Update goals\n      homeTeam.goals_for += homeScore;\n      homeTeam.goals_against += awayScore;\n      awayTeam.goals_for += awayScore;\n      awayTeam.goals_against += homeScore;\n      \n      // Update results and form\n      if (homeScore > awayScore) {\n        // Home win\n        homeTeam.won++;\n        homeTeam.points += pointSystem.win;\n        homeTeam.recent_form.unshift('W');\n        \n        awayTeam.lost++;\n        awayTeam.points += pointSystem.loss;\n        awayTeam.recent_form.unshift('L');\n      } else if (homeScore < awayScore) {\n        // Away win\n        awayTeam.won++;\n        awayTeam.points += pointSystem.win;\n        awayTeam.recent_form.unshift('W');\n        \n        homeTeam.lost++;\n        homeTeam.points += pointSystem.loss;\n        homeTeam.recent_form.unshift('L');\n      } else {\n        // Draw\n        homeTeam.drawn++;\n        homeTeam.points += pointSystem.draw;\n        homeTeam.recent_form.unshift('D');\n        \n        awayTeam.drawn++;\n        awayTeam.points += pointSystem.draw;\n        awayTeam.recent_form.unshift('D');\n      }\n      \n      // Keep only last 5 form results\n      if (homeTeam.recent_form.length > 5) homeTeam.recent_form = homeTeam.recent_form.slice(0, 5);\n      if (awayTeam.recent_form.length > 5) awayTeam.recent_form = awayTeam.recent_form.slice(0, 5);\n    });\n\n    // Calculate goal difference and sort standings\n    const standingsArray = Object.values(teamStats).map(team => ({\n      ...team,\n      goal_difference: team.goals_for - team.goals_against\n    })).sort((a, b) => {\n      // Sort by points (descending), then goal difference, then goals for\n      if (a.points !== b.points) return b.points - a.points;\n      if (a.goal_difference !== b.goal_difference) return b.goal_difference - a.goal_difference;\n      return b.goals_for - a.goals_for;\n    }).map((team, index) => ({\n      ...team,\n      position: index + 1,\n      previous_position: index + 1 // TODO: Track from previous calculation\n    }));\n\n    return standingsArray;\n  }, [matches, teams, pointSystem, promotionSpots, relegationSpots, playoffSpots]);\n\n  // Create final standings object with stable timestamp\n  const standings: LeagueStandings = useMemo(() => ({\n    id: leagueId,\n    name: leagueName || 'League Standings',\n    teams: standingsData,\n    updated_at: lastUpdated.toISOString(),\n    point_system: pointSystem,\n    promotion_spots: promotionSpots,\n    relegation_spots: relegationSpots,\n    playoff_spots: playoffSpots\n  }), [leagueId, leagueName, standingsData, lastUpdated, pointSystem, promotionSpots, relegationSpots, playoffSpots]);\n\n  // Update timestamp when data is actually loaded, not reactively\n  // This will be handled by parent components or data loading functions\n\n  const getPositionIcon = (current: number, previous?: number) => {\n    if (!previous || current === previous) return <Minus className=\"w-4 h-4 text-gray-400\" />;\n    if (current < previous) return <ChevronUp className=\"w-4 h-4 text-green-500\" />;\n    return <ChevronDown className=\"w-4 h-4 text-red-500\" />;\n  };\n\n  const getPositionStyle = (position: number) => {\n    if (promotionSpots && position <= promotionSpots) {\n      return 'bg-green-50 dark:bg-green-900/20 border-l-4 border-green-500';\n    }\n    if (playoffSpots && position <= promotionSpots + playoffSpots && position > promotionSpots) {\n      return 'bg-blue-50 dark:bg-blue-900/20 border-l-4 border-blue-500';\n    }\n    if (relegationSpots && position > standings.teams.length - relegationSpots) {\n      return 'bg-red-50 dark:bg-red-900/20 border-l-4 border-red-500';\n    }\n    return '';\n  };\n\n  const getFormColor = (result: 'W' | 'D' | 'L') => {\n    switch (result) {\n      case 'W': return 'bg-green-500 text-white';\n      case 'D': return 'bg-yellow-500 text-white';\n      case 'L': return 'bg-red-500 text-white';\n    }\n  };\n\n  const handleRefresh = useCallback(() => {\n    loadStandingsData();\n  }, [loadStandingsData]);\n\n  if (isLoading) {\n    return (\n      <div className={`bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-8 ${className}`}>\n        <div className=\"flex items-center justify-center\">\n          <RefreshCw className=\"w-8 h-8 animate-spin text-blue-600\" />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 ${className}`}>\n      {/* Header */}\n      <div className=\"p-6 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-3\">\n            <Trophy className=\"w-6 h-6 text-yellow-500\" />\n            <div>\n              <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                {standings.name}\n              </h2>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                Last updated: {lastUpdated.toLocaleTimeString()}\n              </p>\n            </div>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <button\n              onClick={handleRefresh}\n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\n              title=\"Refresh standings\"\n            >\n              <RefreshCw className=\"w-5 h-5\" />\n            </button>\n          </div>\n        </div>\n        \n        {/* Legend */}\n        <div className=\"mt-4 flex items-center gap-4 text-xs\">\n          {promotionSpots > 0 && (\n            <div className=\"flex items-center gap-1\">\n              <div className=\"w-3 h-3 bg-green-500 rounded\"></div>\n              <span className=\"text-gray-600 dark:text-gray-400\">Promotion</span>\n            </div>\n          )}\n          {playoffSpots > 0 && (\n            <div className=\"flex items-center gap-1\">\n              <div className=\"w-3 h-3 bg-blue-500 rounded\"></div>\n              <span className=\"text-gray-600 dark:text-gray-400\">Playoffs</span>\n            </div>\n          )}\n          {relegationSpots > 0 && (\n            <div className=\"flex items-center gap-1\">\n              <div className=\"w-3 h-3 bg-red-500 rounded\"></div>\n              <span className=\"text-gray-600 dark:text-gray-400\">Relegation</span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Championship Banner for Final Rankings */}\n      {showFinalRankings && standings.teams.length > 0 && (\n        <div className=\"mx-6 mb-4 bg-gradient-to-r from-yellow-50 to-yellow-100 dark:from-yellow-900/20 dark:to-yellow-800/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-6\">\n          <div className=\"flex items-center justify-center gap-4\">\n            <Trophy className=\"w-8 h-8 text-yellow-600 dark:text-yellow-400\" />\n            <div className=\"text-center\">\n              <h3 className=\"text-xl font-bold text-yellow-900 dark:text-yellow-100 mb-1\">\n                🏆 Season Champions: {standings.teams[0].name}\n              </h3>\n              <p className=\"text-sm text-yellow-800 dark:text-yellow-200\">\n                Final standings - {standings.teams[0].points} points • {standings.teams[0].won}W {standings.teams[0].drawn}D {standings.teams[0].lost}L\n              </p>\n            </div>\n            <Crown className=\"w-8 h-8 text-yellow-600 dark:text-yellow-400\" />\n          </div>\n        </div>\n      )}\n\n      {/* Standings Table */}\n      <div className=\"overflow-x-auto\">\n        <table className=\"w-full\">\n          <thead className=\"bg-gray-50 dark:bg-gray-900\">\n            <tr>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                <Hash className=\"w-4 h-4 inline\" />\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                Team\n              </th>\n              <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                P\n              </th>\n              <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                W\n              </th>\n              <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                D\n              </th>\n              <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                L\n              </th>\n              {showGoalDifference && (\n                <>\n                  <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    GF\n                  </th>\n                  <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    GA\n                  </th>\n                  <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    GD\n                  </th>\n                </>\n              )}\n              <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                Pts\n              </th>\n              {showForm && (\n                <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                  Form\n                </th>\n              )}\n            </tr>\n          </thead>\n          <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n            {standings.teams.map((team) => (\n              <tr \n                key={team.id} \n                className={`hover:bg-gray-50 dark:hover:bg-gray-700/50 transition-colors ${getPositionStyle(team.position)} ${\n                  selectedTeam === team.id ? 'ring-2 ring-blue-500' : ''\n                } ${onTeamClick ? 'cursor-pointer' : ''}`}\n                onClick={() => {\n                  if (onTeamClick) {\n                    onTeamClick(team.id);\n                  }\n                  setSelectedTeam(selectedTeam === team.id ? null : team.id);\n                }}\n              >\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      {team.position}\n                    </span>\n                    {getPositionIcon(team.position, team.previous_position)}\n                  </div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"flex items-center gap-3\">\n                    <div \n                      className=\"w-8 h-8 rounded-full flex items-center justify-center text-white font-bold text-sm\"\n                      style={{ backgroundColor: team.team_color || '#6B7280' }}\n                    >\n                      {team.name.charAt(0)}\n                    </div>\n                    <div>\n                      <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        {team.name}\n                      </div>\n                      {team.position <= (promotionSpots || 0) && promotionSpots > 0 && (\n                        <div className=\"text-xs text-green-600 dark:text-green-400\">\n                          <Crown className=\"w-3 h-3 inline mr-1\" />\n                          Promotion\n                        </div>\n                      )}\n                      {team.position > standings.teams.length - (relegationSpots || 0) && relegationSpots > 0 && (\n                        <div className=\"text-xs text-red-600 dark:text-red-400\">\n                          <AlertTriangle className=\"w-3 h-3 inline mr-1\" />\n                          Relegation\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-center text-sm text-gray-900 dark:text-white\">\n                  {team.played}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-center text-sm text-gray-900 dark:text-white\">\n                  {team.won}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-center text-sm text-gray-900 dark:text-white\">\n                  {team.drawn}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-center text-sm text-gray-900 dark:text-white\">\n                  {team.lost}\n                </td>\n                {showGoalDifference && (\n                  <>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-center text-sm text-gray-900 dark:text-white\">\n                      {team.goals_for}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-center text-sm text-gray-900 dark:text-white\">\n                      {team.goals_against}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-center text-sm\">\n                      <span className={`font-medium ${\n                        team.goal_difference > 0 \n                          ? 'text-green-600 dark:text-green-400' \n                          : team.goal_difference < 0 \n                            ? 'text-red-600 dark:text-red-400'\n                            : 'text-gray-900 dark:text-white'\n                      }`}>\n                        {team.goal_difference > 0 ? '+' : ''}{team.goal_difference}\n                      </span>\n                    </td>\n                  </>\n                )}\n                <td className=\"px-6 py-4 whitespace-nowrap text-center text-sm font-bold text-gray-900 dark:text-white\">\n                  {team.points}\n                </td>\n                {showForm && (\n                  <td className=\"px-6 py-4 whitespace-nowrap text-center\">\n                    <div className=\"flex items-center justify-center gap-1\">\n                      {team.recent_form.map((result, index) => (\n                        <div \n                          key={index}\n                          className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold ${getFormColor(result)}`}\n                          title={`${result === 'W' ? 'Win' : result === 'D' ? 'Draw' : 'Loss'}`}\n                        >\n                          {result}\n                        </div>\n                      ))}\n                    </div>\n                  </td>\n                )}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Stats Summary */}\n      <div className=\"p-6 border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-900/50\">\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n          <div className=\"text-center\">\n            <div className=\"font-bold text-lg text-gray-900 dark:text-white\">\n              {standings.teams.length}\n            </div>\n            <div className=\"text-gray-500 dark:text-gray-400\">Teams</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"font-bold text-lg text-gray-900 dark:text-white\">\n              {matches.filter(m => m.status === 'completed').length}\n            </div>\n            <div className=\"text-gray-500 dark:text-gray-400\">Completed</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"font-bold text-lg text-gray-900 dark:text-white\">\n              {standings.teams.reduce((acc, team) => acc + team.goals_for, 0)}\n            </div>\n            <div className=\"text-gray-500 dark:text-gray-400\">Total Goals</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"font-bold text-lg text-gray-900 dark:text-white\">\n              {pointSystem.win}-{pointSystem.draw}-{pointSystem.loss}\n            </div>\n            <div className=\"text-gray-500 dark:text-gray-400\">Point System</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2930, "column": 0}, "map": {"version":3,"sources":["file:///Users/lukini/MatchDay/apps/player/src/app/leagues/page.tsx"],"sourcesContent":["/**\n * Leagues Discovery Page\n * \n * Professional interface for discovering and joining leagues plus viewing standings.\n * Shows league management and real-time standings for leagues users are in.\n */\n\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { LeagueManagement, type League, type UserTeam } from '@/components/leagues/league-management';\nimport { LeagueStandings } from '@/components/leagues/league-standings';\nimport { useAuth } from '@/components/auth/supabase-auth-provider';\nimport { Trophy, Users, BarChart3, Loader2 } from 'lucide-react';\n\nexport default function LeaguesPage() {\n  const { user } = useAuth();\n  const [activeTab, setActiveTab] = useState<'discover' | 'standings'>('discover');\n  const [userLeagues, setUserLeagues] = useState<League[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (user) {\n      loadUserLeagues();\n    } else {\n      setIsLoading(false);\n    }\n  }, [user]);\n\n  const loadUserLeagues = async () => {\n    setIsLoading(true);\n    try {\n      if (!user?.id) {\n        setUserLeagues([]);\n        return;\n      }\n\n      // Use LeagueService to get user's league memberships\n      const { supabase } = await import('@/lib/supabase/client');\n      const { LeagueService } = await import('@matchday/services');\n      \n      const leagueService = LeagueService.getInstance(supabase);\n      \n      const response = await leagueService.getPlayerLeagueMemberships(user.id);\n      \n      if (response.success && response.data) {\n        // Transform the data to match our League interface\n        const userLeagues: League[] = response.data.map(membership => ({\n          id: membership.id,\n          name: membership.name,\n          description: membership.description,\n          sport_type: membership.sport_type,\n          league_type: membership.league_type as 'recreational' | 'competitive' | 'semi-pro',\n          location: membership.location,\n          season_start: membership.season_start,\n          season_end: membership.season_end,\n          max_teams: membership.max_teams,\n          entry_fee: membership.entry_fee,\n          is_active: membership.is_active,\n          is_public: membership.is_public,\n          created_at: membership.created_at,\n          teamCount: membership.teamCount,\n          availableSpots: membership.availableSpots\n        }));\n        \n        setUserLeagues(userLeagues);\n      } else {\n        // If there's an error but the user is authenticated, show empty state\n        console.warn('Failed to load user leagues:', response.error);\n        setUserLeagues([]);\n      }\n    } catch (error) {\n      console.error('Failed to load user leagues:', error);\n      setUserLeagues([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const tabs = [\n    { id: 'discover', label: 'Discover Leagues', icon: Users, count: null },\n    { id: 'standings', label: 'My League Standings', icon: Trophy, count: userLeagues.length }\n  ];\n\n  if (!user) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-blue-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900\">\n        <div className=\"container mx-auto px-4 py-8\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-8 text-center\">\n            <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\n              Authentication Required\n            </h2>\n            <p className=\"text-gray-600 dark:text-gray-400 mb-6\">\n              Please sign in to discover and join leagues.\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-blue-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900\">\n      <div className=\"container mx-auto px-4 py-8\">\n        {/* Tab Navigation */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 mb-6\">\n          <div className=\"flex items-center\">\n            {tabs.map((tab) => {\n              const Icon = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id as any)}\n                  className={`flex-1 flex items-center justify-center gap-3 px-6 py-4 rounded-xl transition-colors ${\n                    activeTab === tab.id\n                      ? 'bg-blue-100 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300'\n                      : 'text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700'\n                  }`}\n                >\n                  <Icon className=\"w-5 h-5\" />\n                  <span className=\"font-medium\">{tab.label}</span>\n                  {tab.count !== null && (\n                    <span className={`ml-1 px-2 py-1 rounded-full text-xs ${\n                      activeTab === tab.id\n                        ? 'bg-blue-200 dark:bg-blue-800 text-blue-800 dark:text-blue-200'\n                        : 'bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-300'\n                    }`}>\n                      {tab.count}\n                    </span>\n                  )}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Tab Content */}\n        {activeTab === 'discover' && (\n          <LeagueManagement \n            userId={user?.id}\n            onTeamJoinedLeague={(teamId, leagueId) => {\n              console.log('Team joined league:', { teamId, leagueId });\n              loadUserLeagues(); // Refresh user leagues\n            }}\n            onTeamLeftLeague={(teamId, leagueId) => {\n              console.log('Team left league:', { teamId, leagueId });\n              loadUserLeagues(); // Refresh user leagues\n            }}\n          />\n        )}\n\n        {activeTab === 'standings' && (\n          <div className=\"space-y-6\">\n            {isLoading ? (\n              <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-8\">\n                <div className=\"flex items-center justify-center\">\n                  <Loader2 className=\"w-8 h-8 animate-spin text-blue-600\" />\n                </div>\n              </div>\n            ) : userLeagues.length === 0 ? (\n              <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-8 text-center\">\n                <BarChart3 className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\n                <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">\n                  No League Standings\n                </h3>\n                <p className=\"text-gray-600 dark:text-gray-400 mb-6\">\n                  Join a league with your team to see standings and track your performance.\n                </p>\n                <button\n                  onClick={() => setActiveTab('discover')}\n                  className=\"inline-flex items-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors\"\n                >\n                  <Users className=\"w-4 h-4\" />\n                  Discover Leagues\n                </button>\n              </div>\n            ) : (\n              userLeagues.map((league) => (\n                <LeagueStandings\n                  key={league.id}\n                  leagueId={league.id}\n                  leagueName={league.name}\n                  promotionSpots={2}\n                  relegationSpots={2}\n                  playoffSpots={4}\n                  className=\"mb-6\"\n                />\n              ))\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}