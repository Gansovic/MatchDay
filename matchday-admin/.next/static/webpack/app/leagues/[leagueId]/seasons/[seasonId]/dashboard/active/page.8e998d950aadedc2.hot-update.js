"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/leagues/[leagueId]/seasons/[seasonId]/dashboard/active/page",{

/***/ "(app-pages-browser)/./src/lib/services/league.service.ts":
/*!********************************************!*\
  !*** ./src/lib/services/league.service.ts ***!
  \********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LeagueService: () => (/* binding */ LeagueService)\n/* harmony export */ });\nclass LeagueService {\n    static getInstance(supabaseClient) {\n        if (!LeagueService.instance) {\n            if (!supabaseClient) {\n                throw new Error('SupabaseClient required for first initialization');\n            }\n            LeagueService.instance = new LeagueService(supabaseClient);\n        }\n        return LeagueService.instance;\n    }\n    /**\n   * Get detailed league information\n   */ async getLeagueDetails(leagueId) {\n        try {\n            const response = await fetch(\"/api/leagues/\".concat(leagueId));\n            const result = await response.json();\n            if (!response.ok || !result.success) {\n                if (response.status === 404) {\n                    return {\n                        data: null,\n                        error: {\n                            message: 'League not found'\n                        },\n                        success: false\n                    };\n                }\n                throw new Error(result.error || \"HTTP \".concat(response.status, \": \").concat(response.statusText));\n            }\n            const league = result.data;\n            const teams = league.teams || [];\n            const teamCount = teams.length;\n            // Calculate player count and available spots\n            const playerCount = teams.reduce((total, team)=>{\n                var _team_team_members;\n                const activeMembers = ((_team_team_members = team.team_members) === null || _team_team_members === void 0 ? void 0 : _team_team_members.filter((member)=>member.is_active)) || [];\n                return total + activeMembers.length;\n            }, 0);\n            const availableSpots = teams.reduce((total, team)=>{\n                var _team_team_members;\n                const activeMembers = ((_team_team_members = team.team_members) === null || _team_team_members === void 0 ? void 0 : _team_team_members.filter((member)=>member.is_active)) || [];\n                const maxPlayers = team.max_players || 22;\n                return total + Math.max(0, maxPlayers - activeMembers.length);\n            }, 0);\n            const leagueDiscovery = {\n                ...league,\n                teams,\n                teamCount,\n                playerCount,\n                availableSpots,\n                isUserMember: false\n            };\n            return {\n                data: leagueDiscovery,\n                error: null,\n                success: true\n            };\n        } catch (error) {\n            return {\n                data: null,\n                error: {\n                    message: error instanceof Error ? error.message : 'An unexpected error occurred'\n                },\n                success: false\n            };\n        }\n    }\n    static async getLeagues(filters) {\n        const response = await fetch(\"/api/leagues?\".concat(new URLSearchParams(filters)));\n        if (!response.ok) {\n            throw new Error('Failed to fetch leagues');\n        }\n        return response.json();\n    }\n    static async getLeague(id) {\n        const response = await fetch(\"/api/leagues/\".concat(id));\n        if (!response.ok) {\n            throw new Error('Failed to fetch league');\n        }\n        return response.json();\n    }\n    static async createLeague(data) {\n        const response = await fetch('/api/leagues', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n        if (!response.ok) {\n            const error = await response.json();\n            throw new Error(error.error || 'Failed to create league');\n        }\n        return response.json();\n    }\n    static async updateLeague(id, data) {\n        const response = await fetch(\"/api/leagues/\".concat(id), {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n        if (!response.ok) {\n            const error = await response.json();\n            throw new Error(error.error || 'Failed to update league');\n        }\n        return response.json();\n    }\n    static async deleteLeague(id) {\n        const response = await fetch(\"/api/leagues/\".concat(id), {\n            method: 'DELETE'\n        });\n        if (!response.ok) {\n            const error = await response.json();\n            throw new Error(error.error || 'Failed to delete league');\n        }\n        return response.json();\n    }\n    constructor(supabaseClient){\n        this.supabase = supabaseClient;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/services/league.service.ts\n"));

/***/ })

});